Notebook[{

Cell[CellGroupData[{
Cell[TextData[{
 Cell[BoxData[
  GraphicsBox[{
    {Hue[0.6, 1.19, 0.5], Thickness[0.06], Opacity[0.5], CapForm["Round"], 
     {Hue[0.5574712643678161, 1.1204545454545456`, 0.88], 
      LineBox[{{0.5258, -0.5958}, {0.7629, -1.326}}]}, 
     {Hue[0.07845916656838701, 1.1681578652082303`, 0.962492], 
      LineBox[{{0.5258, -0.5958}, {1.1466, -0.1445}}]}, 
     {Hue[0.24069567738279826`, 1.0184923684210525`, 0.76], 
      LineBox[{{0.5258, -0.5958}, {1.1466, -0.394}}]}, 
     {Hue[0.7551042492139238, 0.8100533706312133, 0.850093], 
      LineBox[{{0.5258, -0.5958}, {0.9095, -1.1242}}]}, 
     {Hue[0.24069567738279826`, 1.0184923684210525`, 0.76], 
      LineBox[{{0.7629, -1.326}, {1.5302, -1.326}}]}, 
     {Hue[0.7551042492139238, 0.8100533706312133, 0.850093], 
      LineBox[{{0.7629, -1.326}, {0.7629, -0.6729}}]}, 
     {Hue[0.07845916656838701, 1.1681578652082303`, 0.962492], 
      LineBox[{{0.7629, -1.326}, {1.3837, -1.1242}}]}, 
     {Hue[0.24069567738279826`, 1.0184923684210525`, 0.76], 
      LineBox[{{1.1466, -0.1445}, {1.7673, -0.5958}}]}, 
     {Hue[0.5574712643678161, 1.1204545454545456`, 0.88], 
      LineBox[{{1.1466, -0.1445}, {0.7629, -0.6729}}]}, 
     {Hue[0.7551042492139238, 0.8100533706312133, 0.850093], 
      LineBox[{{1.1466, -0.1445}, {1.5302, -0.6729}}]}, 
     {Hue[0.7551042492139238, 0.8100533706312133, 0.850093], 
      LineBox[{{1.5302, -1.326}, {1.7673, -0.5958}}]}, 
     {Hue[0.07845916656838701, 1.1681578652082303`, 0.962492], 
      LineBox[{{1.5302, -1.326}, {1.5302, -0.6729}}]}, 
     {Hue[0.5574712643678161, 1.1204545454545456`, 0.88], 
      LineBox[{{1.5302, -1.326}, {0.9095, -1.1242}}]}, 
     {Hue[0.07845916656838701, 1.1681578652082303`, 0.962492], 
      LineBox[{{1.7673, -0.5958}, {1.1466, -0.394}}]}, 
     {Hue[0.5574712643678161, 1.1204545454545456`, 0.88], 
      LineBox[{{1.7673, -0.5958}, {1.3837, -1.1242}}]}, 
     {Hue[0.24069567738279826`, 1.0184923684210525`, 0.76], 
      LineBox[{{1.1466, -0.7976}, {0.7629, -0.6729}}]}, 
     {Hue[0.9847981351056443, 0.9243770416459248, 0.889907], 
      LineBox[{{1.1466, -0.7976}, {1.1466, -0.394}}]}, 
     {Hue[0.5574712643678161, 1.1204545454545456`, 0.88], 
      LineBox[{{1.1466, -0.7976}, {1.5302, -0.6729}}]}, 
     {Hue[0.7551042492139238, 0.8100533706312133, 0.850093], 
      LineBox[{{1.1466, -0.7976}, {1.3837, -1.1242}}]}, 
     {Hue[0.07845916656838701, 1.1681578652082303`, 0.962492], 
      LineBox[{{1.1466, -0.7976}, {0.9095, -1.1242}}]}}, 
    {Hue[0., 0., 0.2], EdgeForm[{Hue[0., 0., 0.], Opacity[0.7]}], EdgeForm[
     None], DiskBox[{0.5258, -0.5958}, 0.051415348389367156`], 
     DiskBox[{0.7629, -1.326}, 0.051415348389367156`], 
     DiskBox[{1.1466, -0.1445}, 0.051415348389367156`], 
     DiskBox[{1.5302, -1.326}, 0.051415348389367156`], 
     DiskBox[{1.7673, -0.5958}, 0.051415348389367156`], 
     DiskBox[{1.1466, -0.7976}, 0.051415348389367156`], 
     DiskBox[{0.7629, -0.6729}, 0.051415348389367156`], 
     DiskBox[{1.1466, -0.394}, 0.051415348389367156`], 
     DiskBox[{1.5302, -0.6729}, 0.051415348389367156`], 
     DiskBox[{1.3837, -1.1242}, 0.051415348389367156`], 
     DiskBox[{0.9095, -1.1242}, 0.051415348389367156`]}},
   BaselinePosition->Scaled[0.15],
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->52]],
  CellChangeTimes->{
   3.721140502050939*^9, {3.721140572382607*^9, 3.7211405953455887`*^9}, 
    3.7211406439523773`*^9},
  ExpressionUUID -> "80bbe961-5bdd-4f40-aafd-81eb7008c620"],
 " IGraph/M"
}], "Title",
 ExpressionUUID -> "9456953a-e186-4c32-b417-e426e66d0378"],

Cell[TextData[{
 " the ",
 ButtonBox["igraph",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/"], None},
  ButtonNote->"http://igraph.org/"],
 " interface for ",
 StyleBox["Mathematica",
  FontSlant->"Italic"]
}], "Subtitle",
 ExpressionUUID -> "a8b17106-dee9-45d7-88b0-2ab32fe4908a"],

Cell[TextData[{
 "This notebook can be opened using the command ",
 Cell[BoxData[
  RowBox[{"IGDocumentation", "[", "]"}]],
  ExpressionUUID -> "37f539f3-3381-48e1-a64c-f664f26bb8bd"],
 " or through the ",
 ButtonBox["Documentation Center",
  BaseStyle->"Link",
  ButtonData->"paclet:IGraphM"],
 ". It cannot be saved, so feel free to re-evaluate cells and experiment."
}], "Text",
 ExpressionUUID -> "ebfd4b26-386f-4053-9151-6da87d9a61bc"],

Cell["\<\
The documentation is currently incomplete. Contributions are welcome!\
\>", "Text",
 ExpressionUUID -> "05dcc844-82fe-4ecf-898a-ac36ece21ff6"],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 ExpressionUUID -> "9b2696d4-873c-4717-af1b-c072cf2f5100"],

Cell[TextData[{
 "IGraph/M provides a Mathematica interface to the popular ",
 ButtonBox["igraph network analysis package",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/"], None},
  ButtonNote->"http://igraph.org/"],
 ", as well as many other utility functions for working with graphs. The \
purpose of IGraph/M is not to replace Mathematica\[CloseCurlyQuote]s built-in \
graph theory functionality, but to complement it. Thus the IGraph/M interface \
is designed to interoperate seamlessly with built-in functions and datatypes, \
while also being familiar to users of other igraph interfaces (R, Python or \
C)."
}], "Text",
 ExpressionUUID -> "05c9b49b-5a7a-44f7-822f-981911a91788"],

Cell[TextData[{
 "Only igraph functionality not already available in Mathematica is exposed. \
While many of the functions that IGraph/M provides overlap with built-in \
ones, like ",
 Cell[BoxData["IGBetweenness"],
  ExpressionUUID -> "6ef1b7e2-1a3c-4012-ae22-f179614c393f"],
 " and ",
 Cell[BoxData["BetweeneessCentrality"],
  ExpressionUUID -> "8c622ce4-aa31-4ada-a6ce-652c1273fb3f"],
 ", there are usually some relevant differences. For example, ",
 Cell[BoxData["IGBetweenness"],
  ExpressionUUID -> "518fdf49-d031-4dd3-8c53-97bf9e3bf300"],
 " uses edge weights, while ",
 Cell[BoxData["BetweennessCentrality"],
  ExpressionUUID -> "8cb01d14-6c13-46a1-96b2-fe12555f6bd6"],
 " does not."
}], "Text",
 ExpressionUUID -> "efb9a54b-1884-4f09-af9c-f0bea50712b3"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Basic usage", "Section",
 ExpressionUUID -> "3a41d2fa-be34-4272-b853-89becc4ea4f4"],

Cell["The package can be loaded using", "Text",
 ExpressionUUID -> "d22e0f57-2525-4441-979d-ee6d4f816a6e"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<IGraphM`\>\"", "]"}]], "Input",
 InitializationCell->True,
 ExpressionUUID -> "7beaf991-20ef-47fc-864d-1e8cd5490feb"],

Cell[TextData[{
 "The list of included functions is below. Notice that their names always \
have the ",
 Cell[BoxData["IG"],
  ExpressionUUID -> "2e85d618-13a8-4b07-9766-2093818b9495"],
 " prefix. After loading the package, click on the name of a function to see \
its usage message."
}], "Text",
 ExpressionUUID -> "f8e74182-e503-4e97-9b40-b84740cef256"],

Cell[BoxData[
 RowBox[{"?", "IGraphM`*"}]], "Input",
 ExpressionUUID -> "3b4c1715-9fd6-4349-b149-f429d86807bd"],

Cell["Or just type a question mark followed by the symbol\[CloseCurlyQuote]s \
name:", "Text",
 ExpressionUUID -> "4b34f4e0-5bb1-4323-ae08-7ebe0dfb12c4"],

Cell[BoxData[
 RowBox[{"?", "IGVersion"}]], "Input",
 ExpressionUUID -> "fd33b0cb-8b34-4b01-835b-22980bb298e5"],

Cell[BoxData[
 RowBox[{"IGVersion", "[", "]"}]], "Input",
 ExpressionUUID -> "32734371-858c-48f4-b35e-169167111e94"],

Cell[TextData[{
 "IGraph/M functions work directly with ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s built-in ",
 Cell[BoxData["Graph"],
  ExpressionUUID -> "15a654a8-3e22-4074-909b-2a9699a6a1df"],
 " datatype. No new special graph datatype is introduced."
}], "Text",
 ExpressionUUID -> "358b3b0b-6ed2-4db7-bbe7-7a080c8f19b0"],

Cell[TextData[{
 "Let\[CloseCurlyQuote]s take a look at a few examples. Let us first generate \
a graph using the built-in functions of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "."
}], "Text",
 ExpressionUUID -> "39c589f3-1ffb-4c1f-b454-66ac6a61b696"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SeedRandom", "[", "42", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"g", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{"BarabasiAlbertGraphDistribution", "[", 
    RowBox[{"100", ",", "2"}], "]"}], "]"}]}]}], "Input",
 ExpressionUUID -> "1577d802-10b4-47fc-b1c2-39879ab19c71"],

Cell[TextData[{
 "We can compute the betweenness centrality of each vertex using IGraph/M",
 StyleBox[" ...",
  FontSlant->"Italic"]
}], "Text",
 ExpressionUUID -> "225fe171-c72c-46d3-bf5f-9f7c99e9b16d"],

Cell[BoxData[
 RowBox[{"IGBetweenness", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "78c6e823-0c98-451d-82d2-713b4f1abc74"],

Cell[TextData[{
 "... or using ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ", and obtain the same result."
}], "Text",
 ExpressionUUID -> "1b9ab3f0-20f6-4758-9b5a-7ced9c5dd4ec"],

Cell[BoxData[
 RowBox[{"BetweennessCentrality", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "57145db6-51b4-4571-90e7-893dfad08e0f"],

Cell[TextData[{
 "Let us now assign weights to the edges. Many IGraph/M functions, including ",
 Cell[BoxData["IGBetweenness"],
  ExpressionUUID -> "d1723ec5-af4c-4526-a194-00c51fb5d014"],
 ", support edge weights."
}], "Text",
 ExpressionUUID -> "f1230d15-4c62-4ba6-a630-c470be5ebeda"],

Cell[BoxData[
 RowBox[{
  RowBox[{"wg", "=", 
   RowBox[{"SetProperty", "[", 
    RowBox[{"g", ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", 
        RowBox[{"EdgeCount", "[", "g", "]"}]}], "]"}]}]}], "]"}]}], 
  ";"}]], "Input",
 ExpressionUUID -> "724ab3d2-50f3-4e63-9d12-06ac68972e5a"],

Cell[BoxData[
 RowBox[{"IGBetweenness", "[", "wg", "]"}]], "Input",
 ExpressionUUID -> "9ca8f04c-5a42-45d6-8ddc-9297ef6b4906"],

Cell[TextData[{
 "Notice that ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 11.2 does not include functionality to compute weighted betweenness. The \
builtin function ",
 Cell[BoxData[
  RowBox[{"BetweennessCentrality", "[", "]"}]],
  ExpressionUUID -> "a6a0f821-5954-4dd0-b8a2-29d180645105"],
 " ignores the weights."
}], "Text",
 ExpressionUUID -> "2f57dfb7-76f7-4d73-b8ee-533d1348da8c"],

Cell[BoxData[
 RowBox[{"BetweennessCentrality", "[", "wg", "]"}]], "Input",
 ExpressionUUID -> "98881779-b5f2-47dc-ad6e-8f9c48798603"],

Cell["\<\
Let us delete the minimum feedback edge set to obtain an acyclic graph:\
\>", "Text",
 ExpressionUUID -> "101dec9f-c8d9-4836-a34a-e5d9f2bb1c60"],

Cell[BoxData[
 RowBox[{"acg", "=", 
  RowBox[{"EdgeDelete", "[", 
   RowBox[{"g", ",", 
    RowBox[{"IGFeedbackArcSet", "[", "g", "]"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "758b67d5-3b3d-421b-9642-f145b59557d2"],

Cell["And try out a few of igraph\[CloseCurlyQuote]s layout algorithms.", \
"Text",
 ExpressionUUID -> "a7a554c1-f12f-4529-8744-ba1c8d1103c4"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"IGSeedRandom", "[", "42", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"{", 
  RowBox[{
   RowBox[{"IGLayoutGraphOpt", "[", "acg", "]"}], ",", 
   RowBox[{"IGLayoutKamadaKawai", "[", "acg", "]"}], ",", 
   RowBox[{"IGLayoutFruchtermanReingold", "[", "acg", "]"}]}], 
  "}"}]}], "Input",
 ExpressionUUID -> "a61d5e41-6428-48c6-9de7-0a91184f6a2f"],

Cell["Layout functions typically have many options to tune:", "Text",
 ExpressionUUID -> "53510444-62c5-45fe-80af-8a0b2410c6ef"],

Cell[BoxData[
 RowBox[{"Options", "[", "IGLayoutGraphOpt", "]"}]], "Input",
 ExpressionUUID -> "aa0e9e0a-77b4-47f2-a8d4-b908d5a150a3"],

Cell["\<\
Increasing the number of iterations will usually improve the result.\
\>", "Text",
 ExpressionUUID -> "e0dc75c3-e1e6-422c-9a6f-e60481003ebe"],

Cell[BoxData[
 RowBox[{"IGLayoutGraphOpt", "[", 
  RowBox[{"acg", ",", 
   RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "5000"}]}], "]"}]], "Input",
 ExpressionUUID -> "c2c7654e-25f1-449b-9497-fc7c0021b38e"],

Cell[TextData[StyleBox["A final note",
 FontWeight->"Bold"]], "Text",
 ExpressionUUID -> "a239138f-b5cd-4e27-95e1-45a77296c5be"],

Cell[TextData[{
 "Please refer to the usage messages for information on how to use each \
function. For more information on the meaning of various function options, \
the algorithms used by the functions, references, etc. please refer to ",
 ButtonBox["the C/igraph documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/c/doc/"], None},
  ButtonNote->"http://igraph.org/c/doc/"],
 ". The igraph documentation provides article references for most nontrivial \
algorithms. Note that IGraph/M is currently built using the development \
version of igraph (0.8.0-pre) while the online igraph documentation is for \
the last released version (0.7.1). Some new functionality may not yet be \
described in the online documentation."
}], "Text",
 ExpressionUUID -> "2427ecc1-9659-49b0-9ab2-3df83262ac2d"],

Cell["\<\
The following sections provide general information on each functionality \
area, and show common usage patterns.\
\>", "Text",
 ExpressionUUID -> "30339ffb-b0e8-4bfb-968e-40d3e48f635e"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Graph creation", "Section",
 ExpressionUUID -> "8fbc5c3f-7766-4e72-900b-8bbf01a413ee"],

Cell[TextData[{
 "All the graph creation functions in IGraph/M take any standard ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " ",
 Cell[BoxData["Graph"],
  ExpressionUUID -> "e00421ed-23eb-4e61-aedb-f36fdc79c0b2"],
 " option such as ",
 Cell[BoxData["VertexLabels"],
  ExpressionUUID -> "0f7c3399-9f76-4514-a513-8ef409d2f346"],
 ", ",
 Cell[BoxData["EdgeLabels"],
  ExpressionUUID -> "e2b7d8ad-d50d-4c1f-8b5c-0463b368fdf1"],
 ", ",
 Cell[BoxData["VertexStyle"],
  ExpressionUUID -> "4c83a535-b0bf-461b-b904-3b3108756d0a"],
 ", ",
 Cell[BoxData["GraphStyle"],
  ExpressionUUID -> "decff222-ed20-4899-b3f2-e401bef6ff41"],
 ", ",
 Cell[BoxData["PlotTheme"],
  ExpressionUUID -> "a3f5e2a8-329e-44f9-bcc3-c2d9f05fe098"],
 ", etc."
}], "Text",
 ExpressionUUID -> "d265aa47-c222-422f-9f0c-41be0308e577"],

Cell[BoxData[
 RowBox[{"IGLCF", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", "7", ",", 
   RowBox[{"GraphStyle", "\[Rule]", "\"\<SmallNetwork\>\""}]}], 
  "]"}]], "Input",
 ExpressionUUID -> "6a94399a-2c66-45d4-a068-43379352ad1c"],

Cell[TextData[{
 "Many included graph creation functions implement random graph models. These \
use igraph\[CloseCurlyQuote]s (not ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s) random number generator, which can be re-seeded using ",
 Cell[BoxData[
  RowBox[{"IGSeedRandom", "[", "]"}]],
  ExpressionUUID -> "6088b7ce-2c08-43d6-a082-f8ef11a0c759"],
 "."
}], "Text",
 ExpressionUUID -> "066c2f30-1e85-411a-9664-acdadc87ae36"],

Cell[CellGroupData[{

Cell["Deterministic graph generators", "Subsection",
 ExpressionUUID -> "0b6453fa-b913-4f28-be15-d4b2044fcab5"],

Cell[CellGroupData[{

Cell["IGEmptyGraph", "Subsubsection",
 ExpressionUUID -> "cfea3ceb-3ef6-4b83-9098-b01bed775fe8"],

Cell[BoxData[
 RowBox[{"?", "IGEmptyGraph"}]], "Input",
 ExpressionUUID -> "87e5f440-0d70-4f2a-8097-34812fce8e2a"],

Cell[TextData[{
 Cell[BoxData["IGEmptyGraph"],
  ExpressionUUID -> "ae52e1a3-0432-4080-9d62-9dabf380feab"],
 " is a convenience function for creating graphs with no edges."
}], "Text",
 ExpressionUUID -> "86cb91aa-5a00-45b6-bca6-910abfc7da94"],

Cell["Create a null graph.", "Text",
 ExpressionUUID -> "51d0eccf-14bb-442d-a3a3-37dc96d2d7e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGEmptyGraph", "[", "]"}], "//", "VertexCount"}]], "Input",
 ExpressionUUID -> "e1f79805-76f4-40c5-851d-064ffb616248"],

Cell["Create an empty graph on 4 vertices.", "Text",
 ExpressionUUID -> "7412707a-5fe8-4407-867e-18f5bc947858"],

Cell[BoxData[
 RowBox[{"IGEmptyGraph", "[", "15", "]"}]], "Input",
 ExpressionUUID -> "5ef691c6-634a-4ab8-905e-6304bf69a792"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGLCF", "Subsubsection",
 ExpressionUUID -> "d7b42577-f8b3-4c64-b727-7e57c4d05e48"],

Cell[BoxData[
 RowBox[{"?", "IGLCF"}]], "Input",
 ExpressionUUID -> "4cbcf696-8cbb-427e-b6fb-c2acf30cf71b"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGLCF", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["k", "1"], ",", 
      SubscriptBox["k", "2"], ",", "\[Ellipsis]"}], "}"}], ",", "n"}], "]"}]],
  
  ExpressionUUID -> "3cdfbdff-fdcf-4042-8a5f-0e6a8c12ee13"],
 " creates a graph based on the ",
 ButtonBox["LCF notation ",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://mathworld.wolfram.com/LCFNotation.html"], None},
  ButtonNote->"http://mathworld.wolfram.com/LCFNotation.html"],
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"[", 
    RowBox[{
     SubscriptBox["k", "1"], ",", 
     SubscriptBox["k", "2"], ",", "\[Ellipsis]"}], "]"}], "n"]],
  ExpressionUUID -> "fd798cf5-8c80-4c92-a1dc-e67e131166eb"],
 "."
}], "Text",
 ExpressionUUID -> "7f614131-ba8f-4e11-9fe4-29c04a22e0b9"],

Cell[TextData[{
 "The M\[ODoubleDot]bius\[Dash]Kantor graph is ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"[", 
    RowBox[{"5", ",", 
     RowBox[{"-", "5"}]}], "]"}], "8"]],
  ExpressionUUID -> "e6eaa879-21f6-467c-ad96-1b33f6754df4"],
 "."
}], "Text",
 ExpressionUUID -> "f2f361da-a561-4a23-a610-c1b1a3f8bce0"],

Cell[BoxData[
 RowBox[{"IGLCF", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", "8", ",", 
   RowBox[{"GraphStyle", "->", "\"\<DiagramGreen\>\""}]}], "]"}]], "Input",
 ExpressionUUID -> "e59753a4-4063-4423-966e-f1524641aa27"],

Cell[TextData[{
 "The Pappus graph is ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"[", 
    RowBox[{"5", ",", "7", ",", 
     RowBox[{"-", "7"}], ",", "7", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "5"}]}], "]"}], "3"]],
  ExpressionUUID -> "dd42b71e-349c-4dac-a12f-31ee69222a0e"],
 "."
}], "Text",
 ExpressionUUID -> "294eb99c-4215-4e2f-aa72-88b9c1f73f0e"],

Cell[BoxData[
 RowBox[{"IGLCF", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"5", ",", "7", ",", 
     RowBox[{"-", "7"}], ",", "7", ",", 
     RowBox[{"-", "7"}], ",", 
     RowBox[{"-", "5"}]}], "}"}], ",", "3", ",", 
   RowBox[{"GraphStyle", "->", "\"\<ThickEdge\>\""}]}], "]"}]], "Input",
 ExpressionUUID -> "4f5b60e9-fe6d-46be-808c-9a3da5b6470c"],

Cell[TextData[{
 "The cuboctahedral graph is ",
 Cell[BoxData[
  SuperscriptBox[
   RowBox[{"[", 
    RowBox[{"4", ",", "2"}], "]"}], "6"]],
  ExpressionUUID -> "a6411c08-5eef-4206-83f7-adfcf0ea1484"],
 "."
}], "Text",
 ExpressionUUID -> "4483d3c9-bfa1-4a43-a987-04f55284be63"],

Cell[BoxData[
 RowBox[{"IGLayoutKamadaKawai3D", "@", 
  RowBox[{"IGLCF", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "2"}], "}"}], ",", "6"}], "]"}]}]], "Input",
 ExpressionUUID -> "344b8c25-05be-4ded-9c19-f865fc89a811"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGGraphAtlas", "Subsubsection",
 ExpressionUUID -> "b996425a-d956-4371-b9ef-ccad86d9c81f"],

Cell[BoxData[
 RowBox[{"?", "IGGraphAtlas"}]], "Input",
 ExpressionUUID -> "1f48e6d0-d238-497b-bffd-69e85af6d681"],

Cell[BoxData[
 RowBox[{"IGGraphAtlas", "[", "789", "]"}]], "Input",
 ExpressionUUID -> "8bbdac1d-a427-4aa7-a8a9-5050f5dd0423"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGMakeLattice", "Subsubsection",
 ExpressionUUID -> "3746659c-8d18-428d-836c-fbaea707b33a"],

Cell[BoxData[
 RowBox[{"?", "IGMakeLattice"}]], "Input",
 ExpressionUUID -> "f74eb108-2134-421a-89d9-9918fa9b5613"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGMakeLattice", "[", 
   RowBox[{"{", 
    RowBox[{
     SubscriptBox["d", "1"], ",", 
     SubscriptBox["d", "2"], ",", "\[Ellipsis]"}], "}"}], "]"}]],
  ExpressionUUID -> "12b22009-02d4-4ef1-bb79-03c245fc58f5"],
 " creates a lattice graph of the given dimensions. The available options are:"
}], "Text",
 ExpressionUUID -> "28304c04-15b7-40f0-8dfe-de50204d5a82"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<Radius\>\""],
  ExpressionUUID -> "8d4143b6-6522-4e62-a2b1-5a3c5299a5e0"],
 " controls the size of the neighbourhood within which vertices will be \
connected."
}], "Item",
 ExpressionUUID -> "151d772b-f77a-438f-9862-56d048885812"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<Periodic\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "e16847e6-22f3-4730-8f46-8e5bf443a43e"],
 " creates a periodic lattice."
}], "Item",
 ExpressionUUID -> "6aa22085-8443-4d9f-9ec4-ab2bc8df3300"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<Mutual\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "8081ac2d-8f75-41a5-8707-acda3b4e6d40"],
 " inserts directed edges in both directions when ",
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "True"}]],
  ExpressionUUID -> "9f8b4988-99b0-4b8c-a319-4f7c120c1d84"],
 " is used."
}], "Item",
 ExpressionUUID -> "a3d0b490-501d-4c64-ae0b-9c423ccb1aae"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IGMakeLattice", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"3", ",", "4"}], "}"}], ",", 
   RowBox[{"GraphStyle", "\[Rule]", "\"\<VintageDiagram\>\""}]}], 
  "]"}]], "Input",
 ExpressionUUID -> "f3b1e70a-6bdb-4bc9-aa8b-6afc8c1bcdc5"],

Cell[BoxData[
 RowBox[{"IGMakeLattice", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"10", ",", "10"}], "}"}], ",", 
   RowBox[{"\"\<Periodic\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "69ec8660-b0ff-477f-bf93-6e34ccf93644"],

Cell[BoxData[
 RowBox[{"Graph3D", "@", 
  RowBox[{"IGMakeLattice", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "4", ",", "3"}], "}"}], ",", 
    RowBox[{"GraphStyle", "\[Rule]", "\"\<Prototype\>\""}]}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "01710643-9ee5-430e-964c-b27dbb77ad1f"],

Cell[BoxData[
 RowBox[{"Graph3D", "@", 
  RowBox[{"IGMakeLattice", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "5"}], "}"}], ",", 
    RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
    RowBox[{"\"\<Periodic\>\"", "\[Rule]", "True"}], ",", 
    RowBox[{"PlotTheme", "\[Rule]", "\"\<NeonColor\>\""}]}], "]"}]}]], "Input",
 ExpressionUUID -> "9f128bcd-f83f-4305-af54-41832589164c"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGKautzGraph", "Subsubsection",
 ExpressionUUID -> "40de5fb0-3b65-49c0-8e8d-f49aa544e3b4"],

Cell[BoxData[
 RowBox[{"?", "IGKautzGraph"}]], "Input",
 ExpressionUUID -> "8463d590-cfe6-4f03-bec7-ba7a373a42e0"],

Cell[BoxData[
 RowBox[{"Graph3D", "@", 
  RowBox[{"IGKautzGraph", "[", 
   RowBox[{"2", ",", "2"}], "]"}]}]], "Input",
 ExpressionUUID -> "da8cfbf2-03c1-4ca7-a0a7-7c1aa8253be5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"labels", "=", 
   RowBox[{"StringJoin", "/@", 
    RowBox[{"DeleteCases", "[", 
     RowBox[{
      RowBox[{"Tuples", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<C\>\""}], "}"}], 
        ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"c_", ",", "c_"}], "}"}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"IGKautzGraph", "[", 
  RowBox[{"2", ",", "1", ",", "\[IndentingNewLine]", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Thread", "[", 
     RowBox[{
      RowBox[{"Range", "[", "6", "]"}], "\[Rule]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Placed", "[", 
          RowBox[{"#", ",", "Center"}], "]"}], "&"}], ")"}], "/@", 
       "labels"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
   RowBox[{"VertexShapeFunction", "\[Rule]", "\"\<Capsule\>\""}], ",", 
   RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<CoolColor\>\""}], ",", 
   RowBox[{"VertexLabelStyle", "\[Rule]", "White"}]}], "\[IndentingNewLine]", 
  "]"}]}], "Input",
 ExpressionUUID -> "7851f285-8166-4553-a7a7-1ef883fbe201"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGKaryTree", "Subsubsection",
 ExpressionUUID -> "a7995e15-8e6c-4032-b159-670a210bc921"],

Cell[BoxData[
 RowBox[{"?", "IGKaryTree"}]], "Input",
 ExpressionUUID -> "757f30d6-5539-46b8-beb0-3c3c53456e9d"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "d4d4a569-95b3-4a98-9e91-db9554242fd2"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "True"}]],
  ExpressionUUID -> "b53560f4-426c-4dd4-9535-9e8306597893"],
 " creates a directed tree."
}], "Item",
 ExpressionUUID -> "acef4ff0-3508-471b-870b-5d509ed25f45"],

Cell[BoxData[
 RowBox[{"IGKaryTree", "[", "15", "]"}]], "Input",
 ExpressionUUID -> "c9944c33-11ed-4df3-a7b4-1bd31eb7f751"],

Cell[BoxData[
 RowBox[{"IGKaryTree", "[", 
  RowBox[{"10", ",", "3", ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "3ca5da73-a894-4e78-af54-5d9292e81c59"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGCompleteGraph", "Subsubsection",
 ExpressionUUID -> "dc384a6b-349a-412c-bb98-bd306dbff6dc"],

Cell[BoxData[
 RowBox[{"?", "IGCompleteGraph"}]], "Input",
 ExpressionUUID -> "7b5291c3-e0c3-436f-94e8-cf220a1a6ed3"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "f7472edf-a98e-40e6-a21b-f6584632abfa"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "True"}]],
  ExpressionUUID -> "5ab86c10-135e-40b1-a26f-c83fc89070b6"],
 " creates a directed graph."
}], "Item",
 ExpressionUUID -> "6d1c1a58-3758-4d90-9f70-eab76564e067"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"SelfLoops", "\[Rule]", "True"}]],
  ExpressionUUID -> "243dcc99-7547-45d6-af22-e3c52937aa37"],
 " includes self loops."
}], "Item",
 ExpressionUUID -> "b25bfb9b-a0b6-4e58-bd77-2eb68b772358"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IGCompleteGraph", "[", 
  RowBox[{"5", ",", 
   RowBox[{"SelfLoops", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "49ec547a-517b-40c5-8ec4-f03a8cd90015"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGCompleteAcyclicGraph", "Subsubsection",
 ExpressionUUID -> "b140eeca-4717-4d1f-a350-d33a2acd2bc3"],

Cell[BoxData[
 RowBox[{"?", "IGCompleteAcyclicGraph"}]], "Input",
 ExpressionUUID -> "56d39c8f-3c51-47fa-8363-e6028886dc73"],

Cell[BoxData[
 RowBox[{"IGCompleteAcyclicGraph", "[", "6", "]"}]], "Input",
 ExpressionUUID -> "fb876ed2-8239-4061-9252-62e768d8e2a5"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGDeBruijnGraph", "Subsubsection",
 ExpressionUUID -> "e89d1023-cb96-461e-ad06-001701de27ac"],

Cell[BoxData[
 RowBox[{"?", "IGDeBruijnGraph"}]], "Input",
 ExpressionUUID -> "ff31574a-416f-469b-ac68-cf0fc531070f"],

Cell[BoxData[
 RowBox[{"IGDeBruijnGraph", "[", 
  RowBox[{"3", ",", "2", ",", 
   RowBox[{"GraphStyle", "\[Rule]", "\"\<BackgroundBlue\>\""}], ",", 
   RowBox[{"EdgeStyle", "\[Rule]", "Thick"}]}], "]"}]], "Input",
 ExpressionUUID -> "f39a8d53-96ea-4400-b4c5-7206726cba2b"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGChordalRing", "Subsubsection",
 ExpressionUUID -> "a379288f-4522-450b-a2a9-c3ea568d9a99"],

Cell[BoxData[
 RowBox[{"?", "IGChordalRing"}]], "Input",
 ExpressionUUID -> "ecf3838d-d8d4-4d1b-ac82-d1cd910c2db2"],

Cell[BoxData[
 RowBox[{"IGChordalRing", "[", 
  RowBox[{"15", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"3", ",", "12", ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"7", ",", "8", ",", "11"}], "}"}]}], "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "fc72513a-202e-4f23-8217-468994c62c22"]
}, Closed]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Random graph generators", "Subsection",
 ExpressionUUID -> "b89dc32a-e174-42d1-95f1-9235e92851b0"],

Cell[TextData[{
 "These graph creation functions use igraph\[CloseCurlyQuote]s random graph \
generator, which can be seeded using ",
 Cell[BoxData["IGSeedRandom"],
  ExpressionUUID -> "1a30f1a0-ae60-47b6-ad44-8a67eb3e5b59"],
 "."
}], "Text",
 ExpressionUUID -> "2fcf1a18-d21b-4d78-a44e-51124f73875d"],

Cell[BoxData[
 RowBox[{"?", "*Game"}]], "Input",
 ExpressionUUID -> "3a8f3f3a-7f1d-403f-8980-f78ccd984e79"],

Cell[CellGroupData[{

Cell["IGDegreeSequenceGame", "Subsubsection",
 ExpressionUUID -> "b69d5f7e-3b84-4e09-9cde-1a42b04b0b55"],

Cell[BoxData[
 RowBox[{"?", "IGDegreeSequenceGame"}]], "Input",
 ExpressionUUID -> "725163d3-882f-4b0f-90cd-758548815609"],

Cell[TextData[{
 Cell[BoxData["IGDegreeSequenceGame"],
  ExpressionUUID -> "e4c230ef-7b10-4342-8b67-e94eded7d9a2"],
 " takes the following values for its ",
 Cell[BoxData["Method"],
  ExpressionUUID -> "b31606cb-b8a0-4a2c-bd84-5c43636324a2"],
 " option:"
}], "Text",
 ExpressionUUID -> "910439a8-4a4e-4bec-98d6-6c2884494e0c"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<Simple\>\""],
  ExpressionUUID -> "c05263f2-a314-4ed0-839c-453ccdef353e"],
 " may generate both self-loops and multiple edges."
}], "Item",
 ExpressionUUID -> "083e4e06-c0c4-4830-85ad-25039338e505"],

Cell[TextData[{
 Cell[BoxData["\"\<SimpleNoMultiple\>\""],
  ExpressionUUID -> "9a1a42cd-4301-4a76-80dc-e2ab9b3a5b36"],
 " avoids self-loops and multiple edges, but it does not guarantee uniform \
sampling from the space of all graphs with the given degree sequence."
}], "Item",
 ExpressionUUID -> "11da02b4-c05a-4164-97b9-22e2ceb96f09"],

Cell[TextData[{
 Cell[BoxData["\"\<VigerLatapy\>\""],
  ExpressionUUID -> "dbf4f4c2-8fc6-4a77-9f13-8a35e1ae5b1d"],
 " can sample undirected, connected simple graphs uniformly and uses \
Monte-Carlo methods to randomize the graphs. This generator should be \
favoured if undirected and connected graphs are to be generated and execution \
time is not a concern. igraph uses the original implementation of Fabien \
Viger; see ",
 ButtonBox["http://www-rp.lip6.fr/~latapy/FV/generation.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www-rp.lip6.fr/~latapy/FV/generation.html"], None},
  ButtonNote->"http://www-rp.lip6.fr/~latapy/FV/generation.html"],
 " and the paper cited on it for the details of the algorithm."
}], "Item",
 ExpressionUUID -> "e53cd27e-ec60-45b6-b594-50fd2b2dce11"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["IGKRegularGame", "Subsubsection",
 ExpressionUUID -> "1d956ba9-3874-458b-bb93-a7b21e25419e"],

Cell[BoxData[
 RowBox[{"?", "IGKRegularGame"}]], "Input",
 ExpressionUUID -> "56fd3bc8-5f5a-4a1b-bb83-b9a1606ee326"],

Cell[TextData[{
 "In a ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  ExpressionUUID -> "e46b5f1d-c140-4005-8ca7-2523e757357d"],
 "-regular graph all vertices have degree ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  ExpressionUUID -> "f2de07b9-2312-49c3-9581-cb0e790b5977"],
 "."
}], "Text",
 ExpressionUUID -> "785e3193-163a-402d-a79d-fc45349db7da"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "40bbb75b-df8b-418a-8527-b94e521adf3c"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "True"}]],
  ExpressionUUID -> "309b7ed5-cfa4-46f4-8974-d1390a986290"],
 " creates a directed graph."
}], "Item",
 ExpressionUUID -> "6bc5a75c-bbcf-4c9f-9b95-ad2ea63730b9"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "4dd049df-28de-4582-9faa-72d9fc573a78"],
 " allows the creation of parallel edges."
}], "Item",
 ExpressionUUID -> "1ec5c395-dde7-4a5b-a925-b1baa5e3407f"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IGKRegularGame", "[", 
  RowBox[{"10", ",", "3"}], "]"}]], "Input",
 ExpressionUUID -> "f21e01b7-3c6e-4c39-ab56-ae02d7a20c23"],

Cell["Not all parameters are valid:", "Text",
 ExpressionUUID -> "8a6e9b76-71b3-4ab5-9d1c-ffdc96aca1cc"],

Cell[BoxData[
 RowBox[{"IGKRegularGame", "[", 
  RowBox[{"5", ",", "3"}], "]"}]], "Input",
 ExpressionUUID -> "a03c64c3-a50d-4258-8913-8dc8a71288b8"],

Cell["There are no graphs with 5 vertices each having degree 3.", "Text",
 ExpressionUUID -> "760b660f-c0fc-41e0-b97a-917471ba1c40"],

Cell[BoxData[
 RowBox[{"IGGraphicalQ", "[", 
  RowBox[{"{", 
   RowBox[{"3", ",", "3", ",", "3", ",", "3", ",", "3"}], "}"}], 
  "]"}]], "Input",
 ExpressionUUID -> "0fe2423a-6758-4982-992c-19726f45c0a5"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGGrowingGame", "Subsubsection",
 ExpressionUUID -> "f2ab97cd-f283-4b4f-91e8-21d943f25935"],

Cell[BoxData[
 RowBox[{"?", "IGGrowingGame"}]], "Input",
 ExpressionUUID -> "63068fde-c440-47ea-bd1c-e12ef829092c"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGGrowingGame", "[", 
   RowBox[{"n", ",", "k"}], "]"}]],
  ExpressionUUID -> "334a3d17-95c2-40de-a200-74241ded80a7"],
 " creates a random graph by successively adding vertices to the graph until \
the vertex count ",
 Cell[BoxData["n"],
  ExpressionUUID -> "3a85445a-5a70-4928-a10b-c09384a7b8b0"],
 " is reached. At each step, ",
 Cell[BoxData["k"],
  ExpressionUUID -> "69bf968e-3337-411b-b3eb-ddf0a5c2813b"],
 " new edges are added as well."
}], "Text",
 ExpressionUUID -> "7f3188b6-17ca-48ee-a849-87ef7d8465fb"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "06ccf31f-b4ce-4c3c-aa7f-f7eab022794a"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "True"}]],
  ExpressionUUID -> "6b132ddb-7b61-4b73-bdaf-8b38d3c4f335"],
 " creates a directed graph."
}], "Item",
 ExpressionUUID -> "319424e6-db37-4edc-9bd7-28a2ec3fe8cb"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<Citation\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "2da57b6c-0994-4ecb-bbf4-0b12ad8169cf"],
 " connects newly added edges to the newly added vertex."
}], "Item",
 ExpressionUUID -> "25849582-3ab5-477a-8b62-292779208aa1"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IGGrowingGame", "[", 
  RowBox[{"50", ",", "2"}], "]"}]], "Input",
 ExpressionUUID -> "f297d0af-6480-400b-90c5-a0e03b285085"],

Cell[TextData[{
 "With ",
 Cell[BoxData[
  RowBox[{"\"\<Citation\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "9dce8831-5cc6-4cad-af02-544c6d8bd4fe"],
 ", the newly added edges are connected to the newly added vertices."
}], "Text",
 ExpressionUUID -> "12187071-690a-4305-a965-710a650e7d92"],

Cell[BoxData[
 RowBox[{"IGGrowingGame", "[", 
  RowBox[{"50", ",", "1", ",", 
   RowBox[{"\"\<Citation\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "7fe3203f-1216-4319-9cbf-06b952295f34"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGBarabasiAlbertGame", "Subsubsection",
 ExpressionUUID -> "7e5fe4ab-fe10-447a-9897-2658851a5cde"],

Cell[BoxData[
 RowBox[{"?", "IGBarabasiAlbertGame"}]], "Input",
 ExpressionUUID -> "fa37a6de-b6b0-4fea-97a4-b6ab611e166c"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "16d23d45-39b6-46e0-8fe4-1bc9fe709ed6"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "False"}]],
  ExpressionUUID -> "49c4d5a3-affe-4f5c-99d8-35f9d5c5c417"],
 " creates an undirected graph."
}], "Item",
 ExpressionUUID -> "b70dd1d9-30fe-43e4-8b34-ada755e3d8e0"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<TotalDegreeAttraction\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "4ef8a113-b41f-4d01-913a-35ef3aa96344"],
 " computes the attachment probability based on the the total degree of \
existing vertices (i.e. in- and out-degree), not their in-degree."
}], "Item",
 ExpressionUUID -> "b26fa31a-30f1-4b43-9d94-5fc52d940fa1"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<StartingGraph\>\"", "\[Rule]", "g"}]],
  ExpressionUUID -> "aee91a8c-f5c4-4bf6-afe0-d495b389eaec"],
 " will use graph ",
 Cell[BoxData["g"],
  ExpressionUUID -> "e14bce75-df64-4e6c-b77f-c08fbd51cabc"],
 " as the starting point for building the preferential attachment graph. The \
vertex names of ",
 Cell[BoxData["g"],
  ExpressionUUID -> "926c378a-562d-4fb5-ba27-c9f15f259040"],
 " are ignored and the result always uses positive integers as vertex names."
}], "Item",
 ExpressionUUID -> "6d115659-e01d-4c9e-a843-790fd77b53f5"]
}, Open  ]],

Cell[TextData[{
 "Available ",
 Cell[BoxData["Method"],
  ExpressionUUID -> "9230c53a-edd4-497e-963d-06ee79d68e66"],
 " option values:"
}], "Text",
 ExpressionUUID -> "693e460b-a67f-44f7-8d8b-8b474f9600fb"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<Bag\>\""],
  ExpressionUUID -> "00ac7cee-1729-49bc-bb62-92a2e9661c6c"],
 " works by putting the ids of the vertices into a bag exactly as many times \
as their (in-)degree, plus once more. Then the required number of cited \
vertices are drawn from the bag, with replacement. This method might generate \
multiple edges. It only works if ",
 Cell[BoxData[
  RowBox[{"\[Beta]", "=", "1"}]],
  ExpressionUUID -> "198ea9ce-515c-4d70-a1b0-2c1082236e12"],
 " and ",
 Cell[BoxData[
  RowBox[{"a", "=", "1"}]],
  ExpressionUUID -> "70d1f5e5-9e94-4f41-acea-123df9f8a7e8"],
 "."
}], "Item",
 ExpressionUUID -> "f3b84f0a-d4db-4839-a02c-3ae0cbafce5d"],

Cell[TextData[{
 Cell[BoxData["\"\<PSumTree\>\""],
  ExpressionUUID -> "d6a29c08-23fa-424d-ad7a-7fa12075cc19"],
 " uses a partial prefix-sum tree to generate the graph. It does not generate \
multiple edges and works for any ",
 Cell[BoxData["\[Beta]"],
  ExpressionUUID -> "8405e407-1233-4200-bf54-5ce17cf76220"],
 " and ",
 Cell[BoxData["a"],
  ExpressionUUID -> "dbacef4c-a4f9-4a8d-b3d8-ba4e5972c702"],
 " values."
}], "Item",
 ExpressionUUID -> "f3757cfc-234a-4210-836f-0360343d1259"],

Cell[TextData[{
 Cell[BoxData["\"\<PSumTreeMultiple\>\""],
  ExpressionUUID -> "adb8bb68-cd2e-4485-b4fd-4e515f4e246b"],
 " works like ",
 Cell[BoxData["\"\<PSumTree\>\""],
  ExpressionUUID -> "f0184989-e548-456c-a497-621585538a13"],
 " but allowed multiple edges."
}], "Item",
 ExpressionUUID -> "70379514-1ab5-44f5-bf88-0fa52fbed671"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IGBarabasiAlbertGame", "[", 
  RowBox[{"100", ",", "1"}], "]"}]], "Input",
 ExpressionUUID -> "3b2245d0-bdbd-4b79-98bc-5c09555fdc9f"],

Cell[TextData[{
 "Use attachment probability proportional to ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["degree", "1.5"], "+", "1"}]],
  ExpressionUUID -> "88f631cd-406f-4afa-b033-f8e5748f921d"],
 "."
}], "Text",
 ExpressionUUID -> "126130f5-93a7-4b2a-ba1e-4417e1a07a59"],

Cell[BoxData[
 RowBox[{"IGBarabasiAlbertGame", "[", 
  RowBox[{"100", ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"1.5", ",", "1"}], "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "b3a638d9-fa60-4830-87cf-2ba63ee641cd"],

Cell[TextData[{
 "The ",
 Cell[BoxData["\"\<Bag\>\""],
  ExpressionUUID -> "201e2398-7322-4933-bec2-7be2d3cd4c32"],
 " method may generate parallel edges:"
}], "Text",
 ExpressionUUID -> "c98a7d5c-6e8b-4263-88e9-f640613ce99c"],

Cell[BoxData[
 RowBox[{"IGBarabasiAlbertGame", "[", 
  RowBox[{"100", ",", "2", ",", 
   RowBox[{"Method", "\[Rule]", "\"\<Bag\>\""}]}], "]"}]], "Input",
 ExpressionUUID -> "11fe9a2a-c76b-43fc-bdaa-2d7432443e10"],

Cell[BoxData[
 RowBox[{"MultigraphQ", "[", "%", "]"}]], "Input",
 ExpressionUUID -> "f899dddd-0135-4671-a227-dec1b9261bb7"],

Cell[TextData[{
 "Create a graph with the given out-degree sequence. The ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]],
  ExpressionUUID -> "b9b34ab3-d7b9-4899-a985-81944748c35f"],
 " entry in the degree sequence list must be no greater than ",
 Cell[BoxData[
  FormBox["k", TraditionalForm]],
  ExpressionUUID -> "f4b478bb-84c8-49f4-a926-0e7c79f5521c"],
 "."
}], "Text",
 ExpressionUUID -> "6fdf7e9b-4a04-412f-968a-25b5748620c4"],

Cell[BoxData[
 RowBox[{"IGBarabasiAlbertGame", "[", 
  RowBox[{"12", ",", 
   RowBox[{"{", 
    RowBox[{
    "1", ",", "2", ",", "3", ",", "2", ",", "1", ",", "3", ",", "4", ",", "5",
      ",", "1", ",", "5", ",", "2"}], "}"}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Minimal\>\""}]}], "]"}]], "Input",
 ExpressionUUID -> "ca7f092a-a9fa-41b1-bebe-84095820d313"],

Cell[BoxData[
 RowBox[{"VertexOutDegree", "[", "%", "]"}]], "Input",
 ExpressionUUID -> "657cc855-c546-4dd1-b032-0cfc8a2a706d"],

Cell["\<\
Create a preferential attachment graph using a 4-node complete graph as \
starting point.\
\>", "Text",
 ExpressionUUID -> "d41f1500-c331-42d4-8677-31709e6e2236"],

Cell[BoxData[
 RowBox[{"IGBarabasiAlbertGame", "[", 
  RowBox[{"10", ",", "1", ",", 
   RowBox[{"\"\<StartingGraph\>\"", "\[Rule]", 
    RowBox[{"CompleteGraph", "[", "4", "]"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "6903b163-0c91-483e-bb6a-4e4cd6efa7c5"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGWattsStrogatzGame", "Subsubsection",
 ExpressionUUID -> "3116cd63-c7f2-4bba-aa72-389e03e95129"],

Cell[BoxData[
 RowBox[{"?", "IGWattsStrogatzGame"}]], "Input",
 ExpressionUUID -> "07429fd1-8e96-4fad-a67b-1e880ac91937"],

Cell[TextData[{
 "The two-argument form produces results equivalent to that of the built-in \
",
 Cell[BoxData["WattsStrogatzGraphDistribution"],
  ExpressionUUID -> "093d4419-bc19-432e-8804-8f07a4fd15cb"],
 "."
}], "Text",
 ExpressionUUID -> "be4ce83e-c6bc-4f15-915a-39d173669790"],

Cell[BoxData[
 RowBox[{"IGWattsStrogatzGame", "[", 
  RowBox[{"30", ",", "0.05", ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<Web\>\""}]}], "]"}]], "Input",
 ExpressionUUID -> "c9e1f1f6-f2ce-4aba-bc4d-479c02625433"],

Cell[TextData[{
 "The extended form allows for multi-dimensional lattices. Create a graph by \
randomly rewiring a two-dimensional toroidal lattice of ",
 Cell[BoxData[
  RowBox[{"10", "\[Times]", "10"}]],
  ExpressionUUID -> "0d0ec139-53db-4faa-9424-fa3168f60f4a"],
 " nodes:"
}], "Text",
 ExpressionUUID -> "cc766858-c973-436c-8dea-26f2ca9989ac"],

Cell[BoxData[
 RowBox[{"Graph3D", "@", 
  RowBox[{"IGWattsStrogatzGame", "[", 
   RowBox[{"10", ",", "0.01", ",", 
    RowBox[{"{", 
     RowBox[{"2", ",", "1"}], "}"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "dea22010-d155-45f9-a3bc-0d66e85dcc64"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGStaticFitnessGame", "Subsubsection",
 ExpressionUUID -> "37a18be8-e010-4c29-bb55-4fab9fb3dc4b"],

Cell[BoxData[
 RowBox[{"?", "IGStaticFitnessGame"}]], "Input",
 ExpressionUUID -> "bf531ddc-61c5-4367-8a88-e8955b3e4a6d"],

Cell[TextData[{
 Cell[BoxData["IGStaticFitnessGame"],
  ExpressionUUID -> "4b44f71f-e9e3-4aae-b405-b9ba9cf1d104"],
 " generates a random graph by connecting vertices based on their fitness \
score. The algorithm starts with ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  ExpressionUUID -> "cf5ceaba-fe27-4fb7-acfc-f95a2d5b8974"],
 " vertices and no edges. Two vertices are selected with probabilities \
proportional to their fitness scores (for directed graphs, a starting vertex \
is selected based on its out-fitness and an end vertex based on its \
in-fitness).  If they are not yet connected, and edge is inserted between \
them. The procedure is repeated until the number of edges reached ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],
  ExpressionUUID -> "a76c1392-3a3b-4da8-8aa2-75bc56895965"],
 "."
}], "Text",
 ExpressionUUID -> "ff0aa66a-6567-4415-b0d0-c517b900216a"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "6365a0e1-fba3-444a-80b7-23bd7bdeb67d"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"SelfLoops", "\[Rule]", "True"}]],
  ExpressionUUID -> "ab928b5c-13ca-4a1f-af14-ed9c3c820af0"],
 " allows the creation of self loops."
}], "Item",
 ExpressionUUID -> "8a53b0a8-3a34-4cf3-81b0-1d9c6af27a06"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "0bac0963-c90f-4b75-a278-1c95abdee203"],
 " allows the creation of parallel edges."
}], "Item",
 ExpressionUUID -> "b4055413-d59c-4e2f-9d27-043ab919cb17"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IGStaticFitnessGame", "[", 
  RowBox[{"30", ",", 
   RowBox[{"Range", "[", "10", "]"}]}], "]"}]], "Input",
 ExpressionUUID -> "bafeddfb-99fe-4900-9d6a-91ed9fc82cec"],

Cell[BoxData[
 RowBox[{"IGStaticFitnessGame", "[", 
  RowBox[{"30", ",", 
   RowBox[{"Range", "[", "10", "]"}], ",", 
   RowBox[{"Range", "[", 
    RowBox[{"10", ",", "1", ",", 
     RowBox[{"-", "1"}]}], "]"}]}], "]"}]], "Input",
 ExpressionUUID -> "751a8b4e-195b-46f5-b0a0-23b3cb404800"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGStaticPowerLawGame", "Subsubsection",
 ExpressionUUID -> "d79d824f-0639-4b09-8bd4-d4b591651d64"],

Cell[BoxData[
 RowBox[{"?", "IGStaticPowerLawGame"}]], "Input",
 ExpressionUUID -> "93a34807-8ff6-49d7-9e68-0d99fb822fc7"],

Cell["\<\
This game generates a directed or undirected random graph where the degrees \
of vertices follow power-law distributions with prescribed exponents. For \
directed graphs, the exponents of the in- and out-degree distributions may be \
specified separately.\
\>", "Text",
 ExpressionUUID -> "ef87fa4a-7f50-4242-9ce8-f1a5575268ed"],

Cell[TextData[{
 "This function is equivalent to ",
 Cell[BoxData["IGStaticFitnessGame"],
  ExpressionUUID -> "a0aa6587-024f-4af3-892e-35c19f9cca95"],
 " with a fitness vector ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]],
  ExpressionUUID -> "ec938f75-972f-4092-a919-21a9711ad2c3"],
 " where ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["f", "i"], "=", 
    FractionBox["1", 
     RowBox[{"exponent", "-", "1"}]]}], TraditionalForm]],
  ExpressionUUID -> "fe62cb71-4e27-4325-8203-91dd4a047eab"],
 "."
}], "Text",
 ExpressionUUID -> "74bf74a7-ca01-433d-826f-a107e1ab31b4"],

Cell[TextData[{
 "Note that significant finite size effects may be observed for exponents \
smaller than 3 in the original formulation of the game. This function removes \
the finite size effects by default by assuming that the fitness of vertex ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],
  ExpressionUUID -> "1064a76a-1108-4a36-8347-a6f94fda3ff6"],
 " is ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"i", "+", 
      SubscriptBox["i", "0"], "-", "1"}], ")"}], 
    RowBox[{"-", "\[Alpha]"}]], TraditionalForm]],
  ExpressionUUID -> "ec81b276-df77-4c00-b2d2-131645e511aa"],
 ", where ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["i", "0"], TraditionalForm]],
  ExpressionUUID -> "2ae9672d-2060-475b-98b3-bd99a25ad4f1"],
 " is a constant chosen appropriately to ensure that the maximum degree is \
less than the square root of the number of edges times the average degree; \
see the paper of Chung and Lu, and Cho et al for more details."
}], "Text",
 ExpressionUUID -> "6ec6b7d7-2b2b-4011-af1a-8d5cf37c7a41"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "1ada5d10-f7e0-458b-b1cb-d4d7287c240a"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"SelfLoops", "\[Rule]", "True"}]],
  ExpressionUUID -> "82e5332f-fc55-4757-9cd5-c980d5da9c2f"],
 " allows the creation of self loops."
}], "Item",
 ExpressionUUID -> "38b7e755-3b6f-4f66-a991-6e7176f3902d"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "dd3a1159-12bf-4599-83e2-4c39998a9070"],
 " allows the creation of parallel edges."
}], "Item",
 ExpressionUUID -> "7b951afb-8717-47a7-aff8-83ad5a372a39"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<FiniteSizeCorrection\>\"", "\[Rule]", "False"}]],
  ExpressionUUID -> "5e5b5d6f-357e-4960-8a6b-84a7e85a5e42"],
 " disables finite size correction, which is used by default."
}], "Item",
 ExpressionUUID -> "a6d9489d-7b89-4032-8a20-93eab0cd330d"]
}, Open  ]],

Cell[TextData[StyleBox["References:",
 FontWeight->"Bold"]], "Text",
 ExpressionUUID -> "3afdf528-5350-409c-80ce-df9822e8c22c"],

Cell[CellGroupData[{

Cell["\<\
Goh K-I, Kahng B, Kim D: Universal behaviour of load distribution in \
scale-free networks. Phys Rev Lett 87(27):278701, 2001.\
\>", "Item",
 ExpressionUUID -> "7b5856a3-a213-4c0c-98e2-4f30b9fec1d4"],

Cell["\<\
Chung F and Lu L: Connected components in a random graph with given degree \
sequences. Annals of Combinatorics 6, 125-145, 2002.\
\>", "Item",
 ExpressionUUID -> "7c5d9bef-fbed-41fc-b0d5-e709c7c9434f"],

Cell["\<\
Cho YS, Kim JS, Park J, Kahng B, Kim D: Percolation transitions in scale-free \
networks under the Achlioptas process. Phys Rev Lett 103:135702, 2009.\
\>", "Item",
 ExpressionUUID -> "59d6f99c-3442-42b3-92a6-f302582ce9c2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGStaticPowerLawGame", "[", 
    RowBox[{"10000", ",", "50000", ",", "2.5"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6699919850348997`*^9, 3.669992053563077*^9}, {
  3.669992864621148*^9, 3.669992919615209*^9}},
 ExpressionUUID -> "d2bdeb2f-94ec-4700-9160-aa237efb6acc"],

Cell[BoxData[
 RowBox[{"Histogram", "[", 
  RowBox[{
   RowBox[{"VertexDegree", "[", "g", "]"}], ",", "\"\<Log\>\"", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Log\>\"", ",", "\"\<PDF\>\""}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.669992880230853*^9, 3.6699928916499653`*^9}},
 ExpressionUUID -> "e99ef1ed-58cb-47c7-8aff-6264811703ea"],

Cell[BoxData[
 RowBox[{"IGStaticPowerLawGame", "[", 
  RowBox[{"50", ",", "150", ",", "3", ",", "3"}], "]"}]], "Input",
 ExpressionUUID -> "b427ad36-e783-46c9-9ff4-47a25bdf4074"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGStochasticBlockModelGame", "Subsubsection",
 ExpressionUUID -> "add73d6e-3c24-46f1-92ef-fc1eb183d47f"],

Cell[BoxData[
 RowBox[{"?", "IGStochasticBlockModelGame"}]], "Input",
 ExpressionUUID -> "aca4560f-1e97-4de8-9f15-4b714673039c"],

Cell[TextData[{
 "The ",
 Cell[BoxData["ratesMatrix"],
  ExpressionUUID -> "af92228c-40bf-4a43-beed-b9f67e7c56b0"],
 " argument gives the connection probability between and within blocks \
(groups of vertices). The ",
 Cell[BoxData["blockSizes"],
  ExpressionUUID -> "187c63ab-0fa9-429b-9492-f645f572017e"],
 " argument gives the size of each block (vertex group)."
}], "Text",
 ExpressionUUID -> "ad500921-cd6c-4738-9a31-27f1326907ff"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "99fe4e87-5df9-43a4-a48a-5e55e721e2ae"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"SelfLoops", "\[Rule]", "True"}]],
  ExpressionUUID -> "6fc50f27-b700-47ca-b85d-b16828466792"],
 " allows the creation of self loops."
}], "Item",
 ExpressionUUID -> "90efc1be-9415-4369-940a-9ed7e7bd6a40"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "90a6636b-1c73-4277-a319-d5dd06c9b28f"],
 " allows the creation of parallel edges."
}], "Item",
 ExpressionUUID -> "7f91cbd0-3cd3-4c5b-824f-fb495fad10e2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IGStochasticBlockModelGame", "[", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"0.9", "0.1", "0.2"},
       {"0.1", "1", "0.05"},
       {"0.2", "0.05", "0.9"}
      },
      GridBoxAlignment->{
       "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, 
        "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}, "RowsIndexed" -> {}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   RowBox[{"{", 
    RowBox[{"6", ",", "7", ",", "8"}], "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "4e056b36-c683-4853-a036-23e7451874e9"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGForestFireGame", "Subsubsection",
 ExpressionUUID -> "7f5c6a47-c9cf-45b0-a68e-88f94a442e06"],

Cell[BoxData[
 RowBox[{"?", "IGForestFireGame"}]], "Input",
 ExpressionUUID -> "1ea5f895-ac67-4fb7-812d-ae9dce7cdae1"],

Cell[TextData[{
 "Reference: Jure Leskovec, Jon Kleinberg and Christos Faloutsos. Graphs over \
time: densification laws, shrinking diameters and possible explanations. ",
 StyleBox["KDD \[OpenCurlyQuote]05: Proceeding of the eleventh ACM SIGKDD \
international conference on Knowledge discovery in data mining",
  FontSlant->"Italic"],
 ", 177\[Dash]187, 2005."
}], "Text",
 ExpressionUUID -> "2b80bbb8-f407-48d1-86cd-c9374c22f9e3"],

Cell[BoxData[
 RowBox[{"IGForestFireGame", "[", 
  RowBox[{"100", ",", "0.2", ",", "1", ",", "2", ",", " ", 
   RowBox[{"GraphLayout", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<EdgeLayout\>\"", "\[Rule]", "\"\<HierarchicalEdgeBundling\>\""}], 
     "}"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "ad816d80-3088-413c-9865-6ba090f38ac8"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGCallawayTraitsGame", "Subsubsection",
 ExpressionUUID -> "bf479b16-a841-4f5c-8d67-8b16992a74e6"],

Cell[BoxData[
 RowBox[{"?", "IGCallawayTraitsGame"}]], "Input",
 ExpressionUUID -> "e22d1d87-c5ee-43cc-b6e3-229b4c38ecb4"],

Cell["\<\
This function simulates a growing random graph according to the following \
algorithm:\
\>", "Text",
 ExpressionUUID -> "5f9a63f6-1ad3-49e5-a6f0-735233970108"],

Cell[TextData[{
 "At each time step, a new vertex is added. Its type is randomly selected \
according to the type weights. Then ",
 Cell[BoxData["k"],
  ExpressionUUID -> "0f571551-e08e-49c7-b5c7-d29d06d84533"],
 " existing pairs of vertices are selected randomly, and each pair attempts \
to connect. The probability of success for given types of vertices is given \
by the preference matrix."
}], "Text",
 ExpressionUUID -> "ffeecc36-8b4b-47b2-b73c-6baa0427dbdd"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "c741b1f1-ff9c-4d32-a8f0-459838ab6394"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "True"}]],
  ExpressionUUID -> "b742ed41-056b-4c77-a00d-9c05f9a720ef"],
 " creates a directed graph."
}], "Item",
 ExpressionUUID -> "40f8fa65-ed5f-4302-b1a4-918a1b4780e2"],

Cell[BoxData[
 RowBox[{"IGCallawayTraitsGame", "[", 
  RowBox[{"20", ",", "2", ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
   RowBox[{"(", GridBox[{
      {"1", ".5", ".3"},
      {".5", ".7", ".2"},
      {".3", ".2", ".1"}
     }], ")"}]}], "]"}]], "Input",
 ExpressionUUID -> "7417ba1b-7569-46d0-9a08-9678615d1bea"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGEstablishmentGame", "Subsubsection",
 ExpressionUUID -> "79960340-d2fd-4c0f-8810-b00da4e4689f"],

Cell[BoxData[
 RowBox[{"?", "IGEstablishmentGame"}]], "Input",
 ExpressionUUID -> "5a6d466c-99a8-410c-a41c-737a88fe88e0"],

Cell["\<\
This function simulates a growing random graph according to the following \
algorithm:\
\>", "Text",
 ExpressionUUID -> "ae5201db-bf03-4c4d-8a26-aa5a5e57ce4b"],

Cell[TextData[{
 "At each time step, a new vertex is added. Its type is randomly selected \
according to the type weights. It attempts to connect to ",
 Cell[BoxData["k"],
  ExpressionUUID -> "335700c2-5355-466a-9292-26a27736a4a6"],
 " existing vertices. The probability of success for given types of vertices \
is given by the preference matrix."
}], "Text",
 ExpressionUUID -> "a7ce2da8-ba7a-40b1-94b1-285e130e2b9f"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "ea017bf4-9f40-4c61-98a5-a3364d525f16"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "True"}]],
  ExpressionUUID -> "1d84d8ad-aed8-4c38-96c1-5f190d45eba8"],
 " creates a directed graph."
}], "Item",
 ExpressionUUID -> "cefe91bf-854b-47a3-b201-79382eab0239"],

Cell[BoxData[
 RowBox[{"IGEstablishmentGame", "[", 
  RowBox[{"20", ",", "3", ",", 
   RowBox[{"{", 
    RowBox[{"2", ",", "1", ",", "2"}], "}"}], ",", 
   RowBox[{"(", GridBox[{
      {"1", ".5", ".3"},
      {".5", ".7", ".2"},
      {".3", ".2", ".1"}
     }], ")"}]}], "]"}]], "Input",
 ExpressionUUID -> "4cc0b97e-c5b1-4644-b274-bc81a2809a5c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Random bipartite graphs", "Subsubsection",
 ExpressionUUID -> "f607e9ad-9c23-4bfa-b957-39380c83d7f7"],

Cell[BoxData[
 RowBox[{"?", "IGBipartiteGameGNM"}]], "Input",
 ExpressionUUID -> "4ff04c21-3164-4284-ab04-9c3fceb54a6c"],

Cell[BoxData[
 RowBox[{"?", "IGBipartiteGameGNP"}]], "Input",
 ExpressionUUID -> "8df9c5db-0a64-4a41-b40f-e25c6a9cc0d5"],

Cell[BoxData[
 RowBox[{"IGBipartiteGameGNP", "[", 
  RowBox[{"5", ",", "5", ",", "0.5", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 ExpressionUUID -> "d020e58c-271b-4629-b0c6-e0b638b75a02"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graph modification", "Section",
 ExpressionUUID -> "d8a9e753-efbc-43c2-9602-da7c5e32592e"],

Cell[CellGroupData[{

Cell["IGRewire", "Subsubsection",
 ExpressionUUID -> "16028fd2-8ba3-49f6-9355-3a0dd0fffe06"],

Cell[BoxData[
 RowBox[{"?", "IGRewire"}]], "Input",
 ExpressionUUID -> "f2abb397-a086-4177-8aac-5b9b661af922"],

Cell[TextData[{
 StyleBox["Warning: ",
  FontWeight->"Bold"],
 "Most graph properties, such as edge weights, will be lost."
}], "Text",
 ExpressionUUID -> "42a7dbdd-972c-4193-a21c-85ac2e879330"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "4b511953-0a20-4d25-98b5-c6bb525cf8ba"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"SelfLoops", "\[Rule]", "True"}]],
  ExpressionUUID -> "fd69ebcd-280f-4d88-9909-c123d984dff2"],
 " allows the creation of self loops."
}], "Item",
 ExpressionUUID -> "9d4498ba-08ed-49b5-86e4-68e29515828a"],

Cell["\<\
Generate a random network with scale-free degree distribution:\
\>", "Text",
 ExpressionUUID -> "6c319f4d-d8fa-46df-a36d-95ded967128c"],

Cell[BoxData[
 RowBox[{"IGRewire", "[", 
  RowBox[{
   RowBox[{"IGBarabasiAlbertGame", "[", 
    RowBox[{"200", ",", "2", ",", 
     RowBox[{"DirectedEdges", "\[Rule]", "False"}]}], "]"}], ",", "10000"}], 
  "]"}]], "Input",
 ExpressionUUID -> "1f89116e-528f-4a65-99db-296f4c874a39"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGRewireEdges", "Subsubsection",
 ExpressionUUID -> "5be1e2b4-bc25-4d2b-9e53-80446018d6f9"],

Cell[TextData[{
 Cell[BoxData["IGRewireEdges"],
  ExpressionUUID -> "1ff60616-09b4-4a8c-9d25-46179e240a0e"],
 " randomly rewires each edge of the graph with the given probability."
}], "Text",
 ExpressionUUID -> "82cad61e-3230-4267-9d45-034e909805ac"],

Cell[TextData[{
 StyleBox["Warning: ",
  FontWeight->"Bold"],
 "Most graph properties, such as edge weights, will be lost."
}], "Text",
 ExpressionUUID -> "6012e444-5a68-45b8-8350-a05242b04017"],

Cell[BoxData[
 RowBox[{"?", "IGRewireEdges"}]], "Input",
 ExpressionUUID -> "a4b81ef2-0353-464b-b3e6-3d893d5dbc85"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "3b4879dc-0b59-4243-95dc-c954dcf57ff6"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"SelfLoops", "\[Rule]", "True"}]],
  ExpressionUUID -> "99c230b2-817e-4ac6-b738-bf43b7e8dae7"],
 " allows the creation of self loops."
}], "Item",
 ExpressionUUID -> "1fac8189-02e3-4f66-89d4-f98006fa6725"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "3aee6336-5504-4df8-a471-b1c4c5e94dc3"],
 " allows the creation of multiple edges."
}], "Item",
 ExpressionUUID -> "a9124eac-016d-40f7-8972-159eb70c8bb2"]
}, Open  ]],

Cell["\<\
Create a random graph with 10 vertices and 20 edges, while allowing for \
multiple edges:\
\>", "Text",
 ExpressionUUID -> "5597900e-ad59-4dbf-a337-86f584ff1feb"],

Cell[BoxData[
 RowBox[{"IGRewireEdges", "[", 
  RowBox[{
   RowBox[{"RandomGraph", "[", 
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], "]"}], ",", "1", ",", 
   RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "4cba0a7b-7704-4340-b10e-45c348e75e18"],

Cell[BoxData[
 RowBox[{"EdgeCount", "[", "%", "]"}]], "Input",
 ExpressionUUID -> "5e12ba9f-129b-4bf9-90da-ab3e101054ca"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGVertexContract", "Subsubsection",
 ExpressionUUID -> "33701803-3094-4b54-ae0a-0b02fdc04735"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGVertexContract", "[", 
   RowBox[{"g", ",", " ", 
    RowBox[{"{", 
     RowBox[{"set1", ",", " ", "set2", ",", " ", "\[Ellipsis]"}], "}"}]}], 
   "]"}]],
  ExpressionUUID -> "52470ce2-9ba7-43c8-ae81-ed0ac2fb2960"],
 " will simultaneously contract multiple vertex sets into single vertices."
}], "Text",
 ExpressionUUID -> "c15ff830-c504-4db1-b405-7f8073a4a29b"],

Cell["\<\
The name of a contracted vertex will be the same as the first element of the \
corresponding set. Vertex ordering is not retained.\
\>", "Text",
 ExpressionUUID -> "8aa9b7e2-4d02-4214-9ca8-95a729bc9bb6"],

Cell[TextData[{
 StyleBox["Warning:",
  FontWeight->"Bold"],
 " Most graph properties, such as edge weights, will be lost."
}], "Text",
 ExpressionUUID -> "86f8835c-79b5-4fd7-b7e4-4b1b8e4b4183"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "d92d38b8-5916-47e4-8aa7-e24cf298a697"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"SelfLoops", "\[Rule]", "True"}]],
  ExpressionUUID -> "1ef01eee-5a20-489d-b2b3-39b501ac9136"],
 " keeps any self loops created during contraction."
}], "Item",
 ExpressionUUID -> "ae3f5d7a-d216-4134-974b-f88474c07af8"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "729a5ba9-dff1-44eb-a97e-8c1608eb2fbf"],
 " keeps any parallel edges created during contraction."
}], "Item",
 ExpressionUUID -> "e7a46974-dd64-497f-92fc-a54a62860d12"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"?", "IGVertexContract"}]], "Input",
 ExpressionUUID -> "5c8e0c78-790d-4a3b-bd77-60430e743e45"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5}, {
        Null, {{1, 2}, {2, 3}, {3, 1}, {1, 4}, {4, 5}, {5, 1}}}, {
        FormatType -> TraditionalForm, GraphLayout -> {"Dimension" -> 2}, 
         ImageSize -> {155.1796875, Automatic}, VertexLabels -> {
           Placed["Name", Center]}, VertexShapeFunction -> {None}, 
         VertexSize -> {Large}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
          {Arrowheads[0.], 
           ArrowBox[{{1.008561941716892, 0.40195891948078455`}, {
            2.0165474817978133`, 0.}}, 0.16049605784358253`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{1.008561941716892, 0.40195891948078455`}, {
            2.01740198110203, 0.8031084746249071}}, 0.16049605784358253`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{1.008561941716892, 0.40195891948078455`}, {0., 
            0.8028039324489454}}, 0.16049605784358253`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{1.008561941716892, 0.40195891948078455`}, {
            0.0008060506593086103, 0.0003240480495921849}}, 
            0.16049605784358253`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{2.0165474817978133`, 0.}, {2.01740198110203, 
            0.8031084746249071}}, 0.16049605784358253`]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.8028039324489454}, {0.0008060506593086103, 
            0.0003240480495921849}}, 0.16049605784358253`]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
           
           StyleBox[
            DiskBox[{1.008561941716892, 0.40195891948078455`}, 
             0.16049605784358253`],
            StripOnInput->False,
            ShowContents->False], 
           InsetBox["1", {1.008561941716892, 0.40195891948078455`},
            BaseStyle->"Graphics"]}, {
           StyleBox[DiskBox[{2.0165474817978133`, 0.}, 0.16049605784358253`],
            StripOnInput->False,
            ShowContents->False], InsetBox["2", {2.0165474817978133`, 0.},
            BaseStyle->"Graphics"]}, {
           
           StyleBox[
            DiskBox[{2.01740198110203, 0.8031084746249071}, 
             0.16049605784358253`],
            StripOnInput->False,
            ShowContents->False], 
           InsetBox["3", {2.01740198110203, 0.8031084746249071},
            BaseStyle->"Graphics"]}, {
           StyleBox[DiskBox[{0., 0.8028039324489454}, 0.16049605784358253`],
            StripOnInput->False,
            ShowContents->False], InsetBox["4", {0., 0.8028039324489454},
            BaseStyle->"Graphics"]}, {
           
           StyleBox[
            DiskBox[{0.0008060506593086103, 0.0003240480495921849}, 
             0.16049605784358253`],
            StripOnInput->False,
            ShowContents->False], 
           InsetBox["5", {0.0008060506593086103, 0.0003240480495921849},
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{155.1796875, Automatic}]}], ";"}]], "Input",
 ExpressionUUID -> "55289f14-5807-430b-8cd9-30dd9d606971"],

Cell[BoxData[
 RowBox[{"IGVertexContract", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 ExpressionUUID -> "14fb4e2e-a489-4d73-850a-1838fcb685cd"],

Cell[BoxData[
 RowBox[{"IGVertexContract", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"SelfLoops", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "7a5f9dd4-7e64-4dca-b5f7-d1f0a8425073"],

Cell[BoxData[
 RowBox[{"IGVertexContract", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"SelfLoops", "\[Rule]", "True"}], ",", 
   RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "b40759ad-953f-4b3a-b111-d5d49a2650d4"],

Cell[BoxData[
 RowBox[{"IGVertexContract", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"4", ",", "5"}], "}"}]}], "}"}], ",", 
   RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "328c2827-c9f9-45f5-b76a-782f0b4ee492"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGConnectNeighborhood", "Subsubsection",
 ExpressionUUID -> "1b9534c4-b08b-49ac-85b6-cae07b5d79c7"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGConnectNeighborhood", "[", 
   RowBox[{"g", ",", "k"}], "]"}]],
  ExpressionUUID -> "65491835-6602-4dcd-8418-d24e1b8d17a3"],
 " connects each vertex in ",
 Cell[BoxData["g"],
  ExpressionUUID -> "6dc554e3-792d-4476-a57e-b43e9ae43fda"],
 " to its order ",
 Cell[BoxData["k"],
  ExpressionUUID -> "ec3083e1-f3e5-4515-a3ea-6ecf6620f876"],
 " neighbourhood. This operation is also known as the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["k", "th"], TraditionalForm]],
  ExpressionUUID -> "92b84da6-f397-479e-acd7-5b36f9e442bb"],
 " power of the graph."
}], "Text",
 ExpressionUUID -> "9ab01d07-f015-4502-a820-46a57f3aa518"],

Cell[TextData[{
 Cell[BoxData["IGConnectNeighborhood"],
  ExpressionUUID -> "1e0f70aa-4c5b-4b14-a8da-b8141bda38e5"],
 " differs from the builtin ",
 Cell[BoxData["GraphPower"],
  ExpressionUUID -> "dcd4b1e0-39be-4141-8fec-b9b95f3ff97d"],
 " in that it preserves parallel edges and self loops."
}], "Text",
 ExpressionUUID -> "8738eb89-9011-4cdb-86a8-2917b1f7b24c"],

Cell[TextData[{
 StyleBox["Warning:",
  FontWeight->"Bold"],
 " Most graph properties, such as edge weights, will be lost."
}], "Text",
 ExpressionUUID -> "1daa29ec-b7c1-426b-b326-ecad55b164c1"],

Cell[BoxData[
 RowBox[{"?", "IGConnectNeighborhood"}]], "Input",
 ExpressionUUID -> "f83f2ea8-1e39-4b28-9031-2a555acb8a53"],

Cell["Connect each vertex to its second order neighbourhood:", "Text",
 ExpressionUUID -> "58f6c43b-92fa-4fb1-8669-1f5ccd1386a4"],

Cell[BoxData[
 RowBox[{"IGConnectNeighborhood", "[", 
  RowBox[{"CycleGraph", "[", "15", "]"}], "]"}]], "Input",
 ExpressionUUID -> "17bce4e2-65b7-47c2-b1d8-53ac496654cb"],

Cell["Connect each vertex to its third order neighbourhood:", "Text",
 ExpressionUUID -> "73423f10-0329-4d34-b8fa-3a1fae75deb5"],

Cell[BoxData[
 RowBox[{"IGConnectNeighborhood", "[", 
  RowBox[{
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"10", ",", "10"}], "}"}], "]"}], ",", "3"}], "]"}]], "Input",
 ExpressionUUID -> "04e1a534-b254-4898-9b16-5f1d2587b5d7"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Structural properties", "Section",
 ExpressionUUID -> "af3e25be-f2de-4698-8207-9cc2dc25a9ef"],

Cell[CellGroupData[{

Cell["Centrality measures", "Subsection",
 ExpressionUUID -> "0f4a0259-3293-4e88-bca2-429f98fa938a"],

Cell[CellGroupData[{

Cell["Betweenness", "Subsubsection",
 ExpressionUUID -> "bfa32272-83a6-4792-83af-238f3beb748d"],

Cell[BoxData[
 RowBox[{"?", "IGBetweenness"}]], "Input",
 ExpressionUUID -> "1feff9eb-d769-4394-b36f-375db595587b"],

Cell[BoxData[
 RowBox[{"?", "IGBetweennessEstimate"}]], "Input",
 ExpressionUUID -> "3c3e6a9c-87cf-43d9-9b35-13ee7356068d"],

Cell[BoxData[
 RowBox[{"?", "IGEdgeBetweenness"}]], "Input",
 ExpressionUUID -> "689adbfc-083a-47f3-a928-7829ccf4b9d3"],

Cell[BoxData[
 RowBox[{"?", "IGEdgeBetweennessEstimate"}]], "Input",
 ExpressionUUID -> "450b29cf-4e30-4f30-aeec-163e719ea128"],

Cell["\<\
Weighted graphs are supported by all betweenness functions in IGraph/M.\
\>", "Text",
 ExpressionUUID -> "006a0b44-6aca-4f39-a078-cf950f46812b"],

Cell[TextData[{
 "Available ",
 Cell[BoxData["Method"],
  ExpressionUUID -> "a5b39a52-5d4d-4a7f-a28f-362c9a64af86"],
 " options for vertex betweenness calculations:"
}], "Text",
 ExpressionUUID -> "edb8b33b-fd86-47db-8f28-ca94a52cc834"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<Precise\>\""],
  ExpressionUUID -> "90d4f6b6-f89f-4158-98e7-1e3826feb686"],
 " is accurate, but slow. This is the default."
}], "Item",
 ExpressionUUID -> "1cc194b4-a93b-443c-885b-743383b4d11d"],

Cell[TextData[{
 Cell[BoxData["\"\<Fast\>\""],
  ExpressionUUID -> "fe456ed8-46a1-446d-9515-747f5ac711d4"],
 " is fast, but may give incorrect results for large graphs with lots of \
shortest paths."
}], "Item",
 ExpressionUUID -> "a7467772-d142-4b59-a78f-262173ca0d10"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"30", ",", "30"}], "}"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "8a4ac86b-5617-43aa-b26d-1e80cd413182"],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "@", 
   RowBox[{"IGBetweenness", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Precise\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 ExpressionUUID -> "2c1b9223-4b0c-4fdc-8fc9-92aa4d4cf984"],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "@", 
   RowBox[{"IGBetweenness", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Fast\>\""}]}], "]"}]}], "]"}]], "Input",
 ExpressionUUID -> "0a745ce3-a99c-4852-a955-4c3aa75d344d"],

Cell[TextData[{
 "For this large grid graph, the ",
 Cell[BoxData["\"\<Fast\>\""],
  ExpressionUUID -> "365869a3-3720-40c5-bcff-ee3b9e8695a3"],
 " method no longer gives accurate results:"
}], "Text",
 ExpressionUUID -> "94832b37-462e-46e5-b308-fb8355402da3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"40", ",", "40"}], "}"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "d41c1876-58e1-45a9-b94c-1a5505a2f4a4"],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "@", 
   RowBox[{"IGBetweenness", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Precise\>\""}]}], "]"}]}], 
  "]"}]], "Input",
 ExpressionUUID -> "b9c50bc9-2383-489d-9182-a8a79c3dc00e"],

Cell[BoxData[
 RowBox[{"Timing", "[", 
  RowBox[{"Max", "@", 
   RowBox[{"IGBetweenness", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Method", "\[Rule]", "\"\<Fast\>\""}]}], "]"}]}], "]"}]], "Input",
 ExpressionUUID -> "751a7c03-01b2-4d56-ab81-3ad15efe455a"],

Cell[TextData[StyleBox["Possible issues:",
 FontWeight->"Bold"]], "Text",
 ExpressionUUID -> "54e4d936-9e61-45b6-be2d-cb6727789b57"],

Cell["\<\
Weighted betweenness calculations may be affected by numerical precision when \
non-integer weights are used. Betweenness computations count shortest path, \
which means that the total weight of different paths must be compared for \
equality.  Equality testing with floating point numbers is unreliable.  This \
can be demonstrated on an example which is purposefully constructed to be \
problematic.\
\>", "Text",
 ExpressionUUID -> "aa83e848-c255-43ed-9d7f-17b61a7d7531"],

Cell["\<\
An unweighted grid graph has many shortest paths between the same pair of \
vertices.\
\>", "Text",
 ExpressionUUID -> "310897d1-414d-453f-ad76-c2d815e25a71"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"6", ",", "6"}], "}"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "4f3613fe-6c30-4f56-b2ec-a221f5c9efb5"],

Cell["\<\
Let us construct non-integer weights which can add up to (equal) integers in \
many different ways.\
\>", "Text",
 ExpressionUUID -> "d3c06ed4-b328-44ce-9656-f601d74353ed"],

Cell[BoxData[
 RowBox[{
  RowBox[{"weights", "=", 
   RowBox[{"1", "/", 
    RowBox[{"RandomInteger", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", "5"}], "}"}], ",", 
      RowBox[{"EdgeCount", "[", "g", "]"}]}], "]"}]}]}], ";"}]], "Input",
 ExpressionUUID -> "1e0a26b0-a19f-4b9d-8161-9f49947e8485"],

Cell["\<\
Let us now associate weights with edges and order the edges in two different \
random ways. Betweenness should not depend on edge ordering, so graphs \
constructed from both should have the same betweenness values.\
\>", "Text",
 ExpressionUUID -> "7fcd37e3-303c-435e-8e2b-1b2d4e1931d1"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"asc1", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"RandomSample", "@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"EdgeList", "[", "g", "]"}], "\[Rule]", "weights"}], 
      "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"asc2", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"RandomSample", "@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"EdgeList", "[", "g", "]"}], "\[Rule]", "weights"}], 
      "]"}]}]}]}], ";"}]}], "Input",
 ExpressionUUID -> "9402514e-6b29-4af6-8c27-e642418d4904"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "asc1", "]"}], ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"Values", "[", "asc1", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "asc2", "]"}], ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"Values", "[", "asc2", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 ExpressionUUID -> "313b64ea-d73f-4eb7-a993-c207fcc57beb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"KeySort", "@", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"VertexList", "[", "g1", "]"}], ",", 
     RowBox[{"IGBetweenness", "[", "g1", "]"}]}], "]"}]}], "-", 
  "\[IndentingNewLine]", 
  RowBox[{"KeySort", "@", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"VertexList", "[", "g2", "]"}], ",", 
     RowBox[{"IGBetweenness", "[", "g2", "]"}]}], "]"}]}]}]], "Input",
 ExpressionUUID -> "3e943719-fecb-4593-b390-d545fcafcf45"],

Cell[BoxData[
 RowBox[{"Max", "@", 
  RowBox[{"Abs", "[", "%", "]"}]}]], "Input",
 ExpressionUUID -> "a513b2e2-a290-4672-b4ae-22a8a4fbbdf2"],

Cell[TextData[{
 "Yet the results differ. This is because IGraph/M works with floating point \
numbers. Even when different sums of ",
 StyleBox["exact",
  FontSlant->"Italic"],
 " weights happen to be equal, floating point calculations will give slightly \
different results."
}], "Text",
 ExpressionUUID -> "8d3b459f-66f8-40e3-a6eb-d707fd4efb5e"],

Cell[TextData[{
 "To obtain a reliable result, we must use integer weights. The weights in \
these example were inverses of ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]],
  ExpressionUUID -> "0c1b274a-c5e8-40f0-b3f8-73dc656f8c1e"],
 ". Multiplying these by their least common multiple will always yield an \
integer."
}], "Text",
 ExpressionUUID -> "2755fe63-6c22-4714-bb94-4c1895617cb0"],

Cell[BoxData[
 RowBox[{"LCM", "@@", 
  RowBox[{"{", 
   RowBox[{"1", ",", "2", ",", "3", ",", "4", ",", "5"}], "}"}]}]], "Input",
 ExpressionUUID -> "b55c659c-c96e-4de6-9e6c-88ee24420312"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"asc1", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"RandomSample", "@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"EdgeList", "[", "g", "]"}], "\[Rule]", 
       RowBox[{"60", "weights"}]}], "]"}]}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"asc2", "=", 
   RowBox[{"Association", "@", 
    RowBox[{"RandomSample", "@", 
     RowBox[{"Thread", "[", 
      RowBox[{
       RowBox[{"EdgeList", "[", "g", "]"}], "\[Rule]", 
       RowBox[{"60", "weights"}]}], "]"}]}]}]}], ";"}]}], "Input",
 ExpressionUUID -> "740aaaed-caa3-48c8-8c16-f1162ad8a1da"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g1", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "asc1", "]"}], ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"Values", "[", "asc1", "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"g2", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"Keys", "[", "asc2", "]"}], ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"Values", "[", "asc2", "]"}]}]}], "]"}]}], ";"}]}], "Input",
 ExpressionUUID -> "7f694295-e92e-46ee-b5b6-2abe3468fe80"],

Cell[BoxData[
 RowBox[{
  RowBox[{"KeySort", "@", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"VertexList", "[", "g1", "]"}], ",", 
     RowBox[{"IGBetweenness", "[", "g1", "]"}]}], "]"}]}], "-", 
  "\[IndentingNewLine]", 
  RowBox[{"KeySort", "@", 
   RowBox[{"AssociationThread", "[", 
    RowBox[{
     RowBox[{"VertexList", "[", "g2", "]"}], ",", 
     RowBox[{"IGBetweenness", "[", "g2", "]"}]}], "]"}]}]}]], "Input",
 ExpressionUUID -> "fbdf5a2d-5f6d-4f38-9929-0a2c537770f1"],

Cell[BoxData[
 RowBox[{"Chop", "@", 
  RowBox[{"Max", "@", 
   RowBox[{"Abs", "[", "%", "]"}]}]}]], "Input",
 ExpressionUUID -> "ffd6f690-f40a-468f-9afd-68ffcba50969"],

Cell["\<\
Now IGBetweenness gives the same result regardless of edge ordering.\
\>", "Text",
 ExpressionUUID -> "99db50c6-56b2-4430-a3ad-76083a4f0260"]
}, Closed]],

Cell[CellGroupData[{

Cell["Closeness", "Subsubsection",
 ExpressionUUID -> "be1f7f11-1b68-4bb3-934f-3f2072761c88"],

Cell[BoxData[
 RowBox[{"?", "IGCloseness"}]], "Input",
 ExpressionUUID -> "918045c5-505e-4800-883a-2dd2f77c4d44"],

Cell[BoxData[
 RowBox[{"?", "IGClosenessEstimate"}]], "Input",
 ExpressionUUID -> "67f144a3-d2ef-4989-a1ac-7357c576152f"],

Cell["Weighted graphs are supported.", "Text",
 ExpressionUUID -> "65d67dfd-90ab-4719-baf0-10e31491a24c"]
}, Closed]],

Cell[CellGroupData[{

Cell["PageRank", "Subsubsection",
 ExpressionUUID -> "6381cff6-c54e-4a27-926b-13a9be4fa880"],

Cell[BoxData[
 RowBox[{"?", "IGPageRank"}]], "Input",
 ExpressionUUID -> "51d5db20-5921-4871-a5f0-5712261777ba"],

Cell[BoxData[
 RowBox[{"?", "IGPersonalizedPageRank"}]], "Input",
 ExpressionUUID -> "1124b243-c547-4d0a-b829-e55ec7587b42"],

Cell["Weighted graphs and multigraphs are supported.", "Text",
 ExpressionUUID -> "0f2ff807-300b-4204-977a-1584131f57db"],

Cell["The default damping factor is 0.85.", "Text",
 ExpressionUUID -> "125cb2e1-1311-4c1e-a143-1510c03d237b"],

Cell[TextData[{
 "The following ",
 Cell[BoxData["Method"],
  ExpressionUUID -> "b8f13b66-21cf-4ef2-8c04-5fba3c5cc310"],
 " options are available:"
}], "Text",
 ExpressionUUID -> "3ae2acca-0567-48f8-a234-7f83bafc8fd6"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<PowerIteration\>\""],
  ExpressionUUID -> "a25a3daa-7d9d-4031-a780-14f15b4ef8f5"],
 ", deprecated, not recommended. Takes suboptions ",
 Cell[BoxData["\"\<MaxIterations\>\""],
  ExpressionUUID -> "cb465aea-c197-4da4-808d-6816c2917c40"],
 " and ",
 Cell[BoxData["\"\<Epsilon\>\""],
  ExpressionUUID -> "432ce28c-59e8-4930-a66f-3b2acdb44014"],
 ". Does not support weights or multigraphs."
}], "Item",
 ExpressionUUID -> "c62fdaf2-405d-4c28-a831-58c54f699eb9"],

Cell[TextData[{
 Cell[BoxData["\"\<Arnoldi\>\""],
  ExpressionUUID -> "eccae3e3-c4fc-452f-8db0-b2b8b88980df"],
 " uses ARPACK"
}], "Item",
 ExpressionUUID -> "448699d5-2f9b-4869-9aa9-0e8d13665cc9"],

Cell[TextData[{
 Cell[BoxData["\"\<PRPACK\>\""],
  ExpressionUUID -> "e34bb625-4bb1-4312-a86b-bfc24662bb47"],
 " uses ",
 ButtonBox["PRPACK",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://github.com/DavidKurokawa/prpack/"], None},
  ButtonNote->"https://github.com/DavidKurokawa/prpack/"],
 ". It is the default method."
}], "Item",
 ExpressionUUID -> "7bd6f5fe-f0b6-4904-b20e-6056889f6ae8"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Eigenvector centrality", "Subsubsection",
 ExpressionUUID -> "21338977-9e5f-4365-99cf-05ec647b7111"],

Cell[BoxData[
 RowBox[{"?", "IGEigenvectorCentrality"}]], "Input",
 ExpressionUUID -> "b232d0a7-b812-41a4-b84b-95f0c26bd575"]
}, Closed]],

Cell[CellGroupData[{

Cell["Kleinberg\[CloseCurlyQuote]s hub and authority scores", "Subsubsection",
 
 ExpressionUUID -> "858073d6-3c87-4e76-a08e-b5b305de5446"],

Cell[BoxData[
 RowBox[{"?", "IGHubScore"}]], "Input",
 ExpressionUUID -> "df922010-fdc7-4de9-8bb7-a1006c2966cf"],

Cell[BoxData[
 RowBox[{"?", "IGAuthorityScore"}]], "Input",
 ExpressionUUID -> "ff0a0a67-cc20-4d46-8c74-736c307de164"]
}, Closed]],

Cell[CellGroupData[{

Cell["Burt\[CloseCurlyQuote]s constraint score", "Subsubsection",
 ExpressionUUID -> "5e704430-84b8-4e4a-8cb1-0820aaaece63"],

Cell[BoxData[
 RowBox[{"?", "IGConstraintScore"}]], "Input",
 ExpressionUUID -> "0238acee-1a6a-4ea1-9937-30a8b91401d3"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Topological sorting and acyclic graphs", "Subsection",
 ExpressionUUID -> "b56375b9-c85e-4773-8f28-ddd8373776e9"],

Cell[BoxData[
 RowBox[{"?", "IGFeedbackArcSet"}]], "Input",
 ExpressionUUID -> "dc77c9ae-1804-48a3-9623-a254827623fc"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGFeedbackArcSet", "[", "]"}]],
  ExpressionUUID -> "60f55667-64cc-4910-bd0a-32b98e3732d3"],
 " returns a set of edges the removal of which makes the graph acyclic. With ",
 Cell[BoxData[
  RowBox[{"\"\<Exact\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "b0b37601-438d-47fc-a970-d6cb91779ffa"],
 " it finds a minimal feedback arc set. With ",
 Cell[BoxData[
  RowBox[{"\"\<Exact\>\"", "\[Rule]", "False"}]],
  ExpressionUUID -> "7d90b9fe-3184-4ea6-9f9a-15e65b96358a"],
 " it finds a feedback arc set (not necessarily minimal) using the heuristic \
of Eades, Lin and Smyth (1993)."
}], "Text",
 ExpressionUUID -> "c44fd843-b9b1-4eb9-a667-0c2087bbdfcd"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "20"}], "}"}], ",", 
    RowBox[{"DirectedEdges", "\[Rule]", "True"}], ",", 
    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]], "Input",
 ExpressionUUID -> "9fe137f7-35e4-42af-914b-7c97aff33ed1"],

Cell[BoxData[
 RowBox[{"AcyclicGraphQ", "[", "%", "]"}]], "Input",
 ExpressionUUID -> "0d4b23f7-fa9c-432a-a008-ed2c25230238"],

Cell[BoxData[
 RowBox[{"IGFeedbackArcSet", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "05729f6c-e12f-4a86-8015-038f61b2e368"],

Cell[BoxData[
 RowBox[{"EdgeDelete", "[", 
  RowBox[{"g", ",", "%"}], "]"}]], "Input",
 ExpressionUUID -> "e364e0cc-0ded-465a-8925-894c71969f9b"],

Cell[BoxData[
 RowBox[{"AcyclicGraphQ", "[", "%", "]"}]], "Input",
 ExpressionUUID -> "e17be125-5a5b-48ff-b111-6d85636ecbc3"]
}, Closed]],

Cell[CellGroupData[{

Cell["Chordal graphs", "Subsection",
 ExpressionUUID -> "9a99d4cb-d46e-42fa-b022-d58b172824b7"],

Cell["\<\
The maximum cardinality search algorithm visits the vertices of the graph in \
such an order so that every time the vertex with the most already visited \
neighbors is visited next. The visiting order is animated below:\
\>", "Text",
 ExpressionUUID -> "81cddfa8-d15a-4b48-8c60-88bd57062f7b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8, 9, 10}, {
        Null, SparseArray[
         Automatic, {10, 10}, 0, {
          1, {{0, 7, 9, 14, 15, 15, 16, 16, 17, 17, 17}, {{2}, {3}, {4}, {
            5}, {6}, {9}, {10}, {3}, {6}, {4}, {5}, {7}, {8}, {10}, {8}, {
            7}, {9}}}, {1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
           1}}]}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{1.701679475037652, 0.8260879357521795}, {
         1.0129069790428793`, 0.0014765014337609905`}, {1.302137880167063, 
         0.82550322495179}, {1.9891395817563833`, 0.}, {1.9190652882622004`, 
         1.7282901125912526`}, {0.4543054799878108, 0.3626527729689047}, {0., 
         0.9265105414569058}, {2.550199662950018, 0.3612980310766506}, {
         3.004367978190639, 0.926728084419895}, {1.0848780974451706`, 
         1.7273098555045692`}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 5}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 6}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 9}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{1, 10}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{2, 6}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 5}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 7}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 8}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{3, 10}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{4, 8}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{6, 7}, 0.030270836788843694`]}, 
           {Arrowheads[0.], ArrowBox[{8, 9}, 0.030270836788843694`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.030270836788843694`], 
           DiskBox[2, 0.030270836788843694`], 
           DiskBox[3, 0.030270836788843694`], 
           DiskBox[4, 0.030270836788843694`], 
           DiskBox[5, 0.030270836788843694`], 
           DiskBox[6, 0.030270836788843694`], 
           DiskBox[7, 0.030270836788843694`], 
           DiskBox[8, 0.030270836788843694`], 
           DiskBox[9, 0.030270836788843694`], 
           DiskBox[10, 0.030270836788843694`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]]]}], ";"}]], "Input",
 ExpressionUUID -> "0fce27a0-98e7-4fe3-8dce-831d5c66ec47"],

Cell[BoxData[
 RowBox[{"seq", "=", 
  RowBox[{"InversePermutation", "@", 
   RowBox[{"IGMaximumCardinalitySearch", "[", "g", "]"}]}]}]], "Input",
 ExpressionUUID -> "30435639-d8c5-49ee-b466-96563691454b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"HighlightGraph", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Graph", "[", 
       RowBox[{"g", ",", 
        RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Take", "[", 
       RowBox[{"seq", ",", 
        RowBox[{"-", "i"}]}], "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"{", 
     RowBox[{"i", ",", "1", ",", "10"}], "}"}]}], "\[IndentingNewLine]", 
   "]"}], "//", "ListAnimate"}]], "Input",
 CellTags->"DeleteOutput",
 ExpressionUUID -> "2de71771-339e-467f-96d8-744c5605e6ad"]
}, Closed]],

Cell[CellGroupData[{

Cell["Clustering coefficient", "Subsection",
 ExpressionUUID -> "19fe885a-55e5-40c9-bf3b-d66753e85b6d"],

Cell[BoxData[
 RowBox[{"?", "IG*ClusteringCoefficient"}]], "Input",
 ExpressionUUID -> "10bf6724-a607-4f46-beb9-fad64ac86937"],

Cell["Clustering coefficient calculations ignore edge directions.", "Text",
 ExpressionUUID -> "bc5924ef-634b-49c2-9956-c1d3386dbb54"],

Cell[TextData[{
 Cell[BoxData["IGWeightedClusteringCoefficient"],
  ExpressionUUID -> "333ebc58-be32-408d-a0fc-518726708bcc"],
 " computes the weighted local clustering coefficient, as defined by A. \
Barrat et al. (2004) ",
 ButtonBox["http://arxiv.org/abs/cond-mat/0311416",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://arxiv.org/abs/cond-mat/0311416"], None},
  ButtonNote->"http://arxiv.org/abs/cond-mat/0311416"]
}], "Text",
 ExpressionUUID -> "bd7dae8b-0f6a-4cc1-a93c-53bdbb98c056"]
}, Closed]],

Cell[CellGroupData[{

Cell["Shortest paths", "Subsection",
 ExpressionUUID -> "10dedaaf-7fbb-4f1f-94f1-0c16b328e498"],

Cell[CellGroupData[{

Cell["IGDistanceMatrix", "Subsubsection",
 ExpressionUUID -> "b935e1a4-c500-4077-a09e-2c407f6d79c2"],

Cell[BoxData[
 RowBox[{"?", "IGDistanceMatrix"}]], "Input",
 ExpressionUUID -> "bf38bf87-18e1-4a79-be24-1d24f448f6a4"],

Cell[TextData[{
 Cell[BoxData["IGDistanceMatrix"],
  ExpressionUUID -> "897fcbc6-29d2-436b-94fb-f47581065efb"],
 " takes the following ",
 Cell[BoxData["Method"],
  ExpressionUUID -> "9420b132-7829-413a-98d3-dbd681885ced"],
 " options:"
}], "Text",
 ExpressionUUID -> "160a6897-8736-4ab5-ad4a-935b67ccdd70"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["Automatic"],
  ExpressionUUID -> "397e8bf6-836f-4098-8f4c-bc71dc4554d1"],
 " selects a method automatically. As of version 0.3.0, ",
 Cell[BoxData["\"\<Unweighted\>\""],
  ExpressionUUID -> "d02a8df2-d9e6-4fb9-b993-562bc14c18ab"],
 " is selected for unweighted graphs, ",
 Cell[BoxData["\"\<Dijkstra\>\""],
  ExpressionUUID -> "ac5bea27-66bc-4a67-a53e-5bd2f6eafcc4"],
 " for weighted graphs with only positive weights, and ",
 Cell[BoxData["\"\<Johnson\>\""],
  ExpressionUUID -> "07dd10f2-678c-484a-8252-a9d590345bad"],
 " otherwise."
}], "Item",
 ExpressionUUID -> "5be53772-aab1-44e8-8279-cd43e81a323d"],

Cell[TextData[{
 Cell[BoxData["\"\<Unweighted\>\""],
  ExpressionUUID -> "63ccc5fd-9974-464e-b4cc-3ae0a34c1a46"],
 " ignores weights"
}], "Item",
 ExpressionUUID -> "813c2943-b0b0-480e-88a9-1e7fc228e26b"],

Cell[TextData[{
 Cell[BoxData["\"\<Dijkstra\>\""],
  ExpressionUUID -> "1ac42e9d-7968-4707-94a1-71459f69213a"],
 " uses Dijkstra\[CloseCurlyQuote]s algorithm. All weights must be \
non-negative."
}], "Item",
 ExpressionUUID -> "d2ef51e3-9f35-41a0-a443-ea28e826ace2"],

Cell[TextData[{
 Cell[BoxData["\"\<BellmanFord\>\""],
  ExpressionUUID -> "2d4edffb-bdd1-416c-b3a4-10a773db2b52"],
 " uses the Bellman\[Dash]Ford algorithm. Negative weights are supported but \
all cycles must have a non-negative total weight."
}], "Item",
 ExpressionUUID -> "7030249d-91d0-4076-8695-1d96537e44fc"],

Cell[TextData[{
 Cell[BoxData["\"\<Johnson\>\""],
  ExpressionUUID -> "253f4ca9-88df-432c-86a7-9281691733c9"],
 " uses the Johnson algorithm. Negative weights are supported but all cycles \
must have a non-negative total weight."
}], "Item",
 ExpressionUUID -> "3a5925b9-214b-478a-b269-2ba1f8d16b53"]
}, Open  ]],

Cell[TextData[{
 "The igraph C core may override explicit method settings when appropriate. \
For example, if the graph is not weighted, it always uses ",
 Cell[BoxData["\"\<Unweighted\>\""],
  ExpressionUUID -> "eacbf9d6-b3fe-4ddb-87b7-7066f01fb9e3"],
 "."
}], "Text",
 ExpressionUUID -> "2dc4892e-443b-4ff7-9be5-aae5db4acd97"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGDistanceCounts", "Subsubsection",
 ExpressionUUID -> "0e91f636-9386-4272-b276-f28fe8386464"],

Cell[BoxData[
 RowBox[{"?", "IGDistanceCounts"}]], "Input",
 ExpressionUUID -> "65975675-a228-4972-b425-eb5468013ce7"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGDistanceCounts", "[", "graph", "]"}]],
  ExpressionUUID -> "b62f489b-0057-4d1d-8345-dd6627de17b4"],
 " counts all-pair ",
 StyleBox["unweighted",
  FontSlant->"Italic"],
 " shortest path lengths in the graph.",
 "\n",
 Cell[BoxData[
  RowBox[{"IGDistanceCounts", "[", 
   RowBox[{"graph", ",", " ", 
    RowBox[{"{", 
     RowBox[{
      SubscriptBox["v", "1"], ",", 
      SubscriptBox["v", "2"], ",", "\[Ellipsis]"}], "}"}]}], "]"}]],
  ExpressionUUID -> "a2342ca7-c0da-42eb-8ff9-3f32ae27e4d7"],
 " counts unweighted shortest path lengths for paths starting at the given \
vertices."
}], "Text",
 ExpressionUUID -> "41c5ccbd-380a-413a-999c-83f87b6d6594"],

Cell[TextData[{
 "For weighted path lengths, or to restrict the computation to both certain \
start and end vertex sets, use ",
 Cell[BoxData[
  RowBox[{"IGDistanceHistogram", "[", "]"}]],
  ExpressionUUID -> "73910394-edb1-4e17-a2af-f5485f4da6e3"],
 "."
}], "Text",
 ExpressionUUID -> "37cd4097-2acd-413b-8be5-8d31cd4cb60d"],

Cell[TextData[{
 "Compute how the shortest path length distribution changes as we rewire a \
grid graph ",
 Cell[BoxData["k"],
  ExpressionUUID -> "a86dc571-63e7-4bac-b184-4e4bc6840b47"],
 " times."
}], "Text",
 ExpressionUUID -> "696ffba3-971a-4ff2-b66b-8371a5799130"],

Cell[BoxData[
 RowBox[{"Table", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ListPlot", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Normalize", "[", 
      RowBox[{
       RowBox[{"IGDistanceCounts", "@", 
        RowBox[{"IGRewire", "[", 
         RowBox[{
          RowBox[{"GridGraph", "[", 
           RowBox[{"{", 
            RowBox[{"50", ",", "50"}], "}"}], "]"}], ",", "k"}], "]"}]}], ",",
        "Total"}], "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Joined", "\[Rule]", "True"}], ",", 
     RowBox[{"Filling", "\[Rule]", "Bottom"}], ",", 
     RowBox[{"PlotLabel", "\[Rule]", 
      RowBox[{
       RowBox[{"StringTemplate", "[", "\"\<rewiring steps: ``\>\"", "]"}], 
       "[", "k", "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"{", 
      RowBox[{"0", ",", "5", ",", "10", ",", "20", ",", "50", ",", "100"}], 
      "}"}]}], "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "28d267c0-cc2f-4741-b7ef-23c2372556bd"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGNeighborhoodSize", "Subsubsection",
 ExpressionUUID -> "dcbccaed-5065-4614-ab80-0b93ea3a958e"],

Cell[BoxData[
 RowBox[{"?", "IGNeighborhoodSize"}]], "Input",
 ExpressionUUID -> "2c10b222-eb81-48ee-9756-309b93102fbd"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGDistanceHistogram", "Subsubsection",
 ExpressionUUID -> "c38bad31-b75c-4c75-acf3-bf5a3ba2e3d1"],

Cell[BoxData[
 RowBox[{"?", "IGDistanceHistogram"}]], "Input",
 ExpressionUUID -> "ba2f1ca5-72d1-4735-b7d4-2cf94e1746b5"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGDistanceHistogram", "[", "]"}]],
  ExpressionUUID -> "25cb93a0-d64e-4f01-87d0-18219c1c0bc5"],
 " computes the weighted shortest path length histogram between the specified \
start and end vertex sets. The start and end vertex sets do not need to be \
the same. Note that if the graph is undirected, path lengths between ",
 Cell[BoxData["s"],
  ExpressionUUID -> "9422f920-1242-49c6-81f8-e1d3e9037938"],
 " and ",
 Cell[BoxData["t"],
  ExpressionUUID -> "209b6f0b-27fe-4494-9dbb-685c4105b967"],
 " will be double counted (from ",
 Cell[BoxData[
  RowBox[{"s", "\[Rule]", "t"}]],
  ExpressionUUID -> "518d6efe-5cff-40d5-b18d-1120291315db"],
 " and ",
 Cell[BoxData[
  RowBox[{"t", "\[Rule]", "s"}]],
  ExpressionUUID -> "37addf7a-c0f6-4e28-b3e4-db3325b48bb0"],
 ") if ",
 Cell[BoxData["s"],
  ExpressionUUID -> "c59e870c-c922-4207-b5d4-0353fd6a4273"],
 " and ",
 Cell[BoxData["t"],
  ExpressionUUID -> "4482b13f-f2a0-4b1e-b2f1-5c4171477d5f"],
 " appear both in the starting and ending vertex sets."
}], "Text",
 ExpressionUUID -> "b7bc7c96-c8cd-4265-bcef-4dd007b8e114"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGDistanceHistogram", "[", "]"}]],
  ExpressionUUID -> "db65ce64-e22e-41be-bed9-5eba5943c54f"],
 " is useful when the result of ",
 Cell[BoxData[
  RowBox[{"IGDistanceMatrix", "[", "]"}]],
  ExpressionUUID -> "f78d2073-6335-4992-8f3f-ee40d282f28f"],
 " (or ",
 Cell[BoxData[
  RowBox[{"GraphDistanceMatrix", "[", "]"}]],
  ExpressionUUID -> "2774db91-8839-4ad6-8a88-c700129d7421"],
 ") does not fit in memory."
}], "Text",
 ExpressionUUID -> "8a3c36fc-2234-4d6d-b389-4c66916df2be"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGAveragePathLength", "Subsubsection",
 ExpressionUUID -> "4686218b-7e7d-4770-b2c8-95babae094d9"],

Cell[BoxData[
 RowBox[{"?", "IGAveragePathLength"}]], "Input",
 ExpressionUUID -> "07d80361-a18a-4795-8674-0732f9da9159"],

Cell[TextData[{
 "If the graph is unconnected, vertex pairs between which there is no path \
are excluded from the calculation. This is different from the behaviour of ",
 Cell[BoxData[
  RowBox[{"MeanGraphDistance", "[", "]"}]],
  ExpressionUUID -> "052da50a-f50c-41d4-9f15-da4c56fa2247"],
 ", which returns ",
 Cell[BoxData["\[Infinity]"],
  ExpressionUUID -> "3ed4da95-e4d4-40ff-a7fe-65e8e0dcdc0a"],
 " in this case."
}], "Text",
 ExpressionUUID -> "dad4bf86-ac94-4742-afdb-c33579afdae0"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGGirth", "Subsubsection",
 ExpressionUUID -> "a4f28778-090d-4fcb-9375-fe3a0169e54d"],

Cell[BoxData[
 RowBox[{"?", "IGGirth"}]], "Input",
 ExpressionUUID -> "d00b4c74-2925-4d40-99db-5d615923fa94"],

Cell[BoxData[
 RowBox[{"IGGirth", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4, 5}, {
       Null, {{1, 2}, {2, 3}, {3, 1}, {2, 4}, {4, 5}, {5, 3}}}, {VertexLabels -> {
          Placed["Name", Center]}, VertexShapeFunction -> {None}, 
        VertexSize -> {Large}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[{{1.944934484934091, 0.4869131293713701}, {
           1.0809082023413574`, 0.035904784667003864`}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.944934484934091, 0.4869131293713701}, {
           1.0809613151982074`, 0.9376118609509367}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.0809082023413574`, 0.035904784667003864`}, {
           1.0809613151982074`, 0.9376118609509367}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.0809082023413574`, 0.035904784667003864`}, {
           0.00007263143566471619, 0.}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.0809613151982074`, 0.9376118609509367}, {0., 
           0.9737145167850567}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.00007263143566471619, 0.}, {0., 0.9737145167850567}}, 
           0.1803414155696349]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
          
          StyleBox[
           DiskBox[{1.944934484934091, 0.4869131293713701}, 
            0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], 
          InsetBox["1", {1.944934484934091, 0.4869131293713701},
           BaseStyle->"Graphics"]}, {
          
          StyleBox[
           DiskBox[{1.0809082023413574`, 0.035904784667003864`}, 
            0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], 
          InsetBox["2", {1.0809082023413574`, 0.035904784667003864`},
           BaseStyle->"Graphics"]}, {
          
          StyleBox[
           DiskBox[{1.0809613151982074`, 0.9376118609509367}, 
            0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], 
          InsetBox["3", {1.0809613151982074`, 0.9376118609509367},
           BaseStyle->"Graphics"]}, {
          StyleBox[DiskBox[{0.00007263143566471619, 0.}, 0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], InsetBox["4", {0.00007263143566471619, 0.},
           BaseStyle->"Graphics"]}, {
          StyleBox[DiskBox[{0., 0.9737145167850567}, 0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], InsetBox["5", {0., 0.9737145167850567},
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{101.66796875, Automatic}], "]"}]], "Input",
 ExpressionUUID -> "7700fbe0-bec6-4640-9f79-ebe08f73d6aa"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGDiameter and IGFindDiameter", "Subsubsection",
 ExpressionUUID -> "8e6cdc2f-d3af-4714-b3be-eb90d72d07d1"],

Cell[BoxData[
 RowBox[{"?", "IGDiameter"}]], "Input",
 ExpressionUUID -> "359e3abf-c245-4837-8178-c62f116e8445"],

Cell["\<\
The diameter of a graph is the length of the longest shortest path between \
any two vertices.\
\>", "Text",
 ExpressionUUID -> "c765727c-97fd-49d1-9557-f1e5a15666a2"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "2f237fd3-df8e-4d6e-8d54-d8fa54cda059"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["Method"],
  ExpressionUUID -> "e8575fe2-5efa-41b1-9793-e9857616949f"],
 " can take the values ",
 Cell[BoxData["\"\<Unweighted\>\""],
  ExpressionUUID -> "71adc33e-ef57-4eb1-8a71-f2c3fb7da5e2"],
 ", ",
 Cell[BoxData["\"\<Dijkstra\>\""],
  ExpressionUUID -> "d81425f0-8415-42c7-8677-d2a21010532a"],
 " or ",
 Cell[BoxData["Automatic"],
  ExpressionUUID -> "d0ca7577-2f10-4249-8013-34887f3b1294"],
 ". ",
 Cell[BoxData["\"\<Dijkstra\>\""],
  ExpressionUUID -> "f4659918-f7b3-4a14-a648-aa030754e290"],
 " takes edge weights into account. ",
 Cell[BoxData["Automatic"],
  ExpressionUUID -> "64ef51e5-2fac-45e2-8998-eca2b926ace6"],
 " chooses based on whether the graph is weighted."
}], "Item",
 ExpressionUUID -> "5c026d0d-9d08-497b-a456-cad1e2c600a5"],

Cell[TextData[{
 Cell[BoxData["\"\<ByComponents\>\""],
  ExpressionUUID -> "a0dedacd-6351-436f-a6fd-b269afe8308e"],
 " controls how unconnected graphs are handled. If ",
 Cell[BoxData["False"],
  ExpressionUUID -> "5d1a8f18-6712-41d2-8084-a25706a91564"],
 ", ",
 Cell[BoxData["Infinity"],
  ExpressionUUID -> "e3d040a3-0ec3-47b5-9cb9-9cfa06ed4f20"],
 " is returned. If ",
 Cell[BoxData["True"],
  ExpressionUUID -> "5222b9b1-8092-4b25-bc53-6e4f4b971890"],
 ", the largest diameter within a component is returned."
}], "Item",
 ExpressionUUID -> "72ccc55c-8d0d-49c6-a3ec-9f33316a31d5"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"IGDiameter", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4, 5}, {
       Null, {{1, 2}, {2, 3}, {3, 1}, {2, 4}, {4, 5}, {5, 3}}}, {VertexLabels -> {
          Placed["Name", Center]}, VertexShapeFunction -> {None}, 
        VertexSize -> {Large}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[{{1.944934484934091, 0.4869131293713701}, {
           1.0809082023413574`, 0.035904784667003864`}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.944934484934091, 0.4869131293713701}, {
           1.0809613151982074`, 0.9376118609509367}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.0809082023413574`, 0.035904784667003864`}, {
           1.0809613151982074`, 0.9376118609509367}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.0809082023413574`, 0.035904784667003864`}, {
           0.00007263143566471619, 0.}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.0809613151982074`, 0.9376118609509367}, {0., 
           0.9737145167850567}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.00007263143566471619, 0.}, {0., 0.9737145167850567}}, 
           0.1803414155696349]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
          
          StyleBox[
           DiskBox[{1.944934484934091, 0.4869131293713701}, 
            0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], 
          InsetBox["1", {1.944934484934091, 0.4869131293713701},
           BaseStyle->"Graphics"]}, {
          
          StyleBox[
           DiskBox[{1.0809082023413574`, 0.035904784667003864`}, 
            0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], 
          InsetBox["2", {1.0809082023413574`, 0.035904784667003864`},
           BaseStyle->"Graphics"]}, {
          
          StyleBox[
           DiskBox[{1.0809613151982074`, 0.9376118609509367}, 
            0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], 
          InsetBox["3", {1.0809613151982074`, 0.9376118609509367},
           BaseStyle->"Graphics"]}, {
          StyleBox[DiskBox[{0.00007263143566471619, 0.}, 0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], InsetBox["4", {0.00007263143566471619, 0.},
           BaseStyle->"Graphics"]}, {
          StyleBox[DiskBox[{0., 0.9737145167850567}, 0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], InsetBox["5", {0., 0.9737145167850567},
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{101.66796875, Automatic}], "]"}]], "Input",
 ExpressionUUID -> "7992f9e2-8a1d-4b56-8f43-7ff804755b58"],

Cell[BoxData[
 RowBox[{"?", "IGFindDiameter"}]], "Input",
 ExpressionUUID -> "609ce17c-112b-4070-8e1f-d1ac451e5107"],

Cell[BoxData[
 RowBox[{"IGFindDiameter", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4, 5}, {
       Null, {{1, 2}, {2, 3}, {3, 1}, {2, 4}, {4, 5}, {5, 3}}}, {VertexLabels -> {
          Placed["Name", Center]}, VertexShapeFunction -> {None}, 
        VertexSize -> {Large}}]]}, 
     TagBox[GraphicsGroupBox[{
        {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
         {Arrowheads[0.], 
          ArrowBox[{{1.944934484934091, 0.4869131293713701}, {
           1.0809082023413574`, 0.035904784667003864`}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.944934484934091, 0.4869131293713701}, {
           1.0809613151982074`, 0.9376118609509367}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.0809082023413574`, 0.035904784667003864`}, {
           1.0809613151982074`, 0.9376118609509367}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.0809082023413574`, 0.035904784667003864`}, {
           0.00007263143566471619, 0.}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{1.0809613151982074`, 0.9376118609509367}, {0., 
           0.9737145167850567}}, 0.1803414155696349]}, 
         {Arrowheads[0.], 
          ArrowBox[{{0.00007263143566471619, 0.}, {0., 0.9737145167850567}}, 
           0.1803414155696349]}}, 
        {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
          
          StyleBox[
           DiskBox[{1.944934484934091, 0.4869131293713701}, 
            0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], 
          InsetBox["1", {1.944934484934091, 0.4869131293713701},
           BaseStyle->"Graphics"]}, {
          
          StyleBox[
           DiskBox[{1.0809082023413574`, 0.035904784667003864`}, 
            0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], 
          InsetBox["2", {1.0809082023413574`, 0.035904784667003864`},
           BaseStyle->"Graphics"]}, {
          
          StyleBox[
           DiskBox[{1.0809613151982074`, 0.9376118609509367}, 
            0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], 
          InsetBox["3", {1.0809613151982074`, 0.9376118609509367},
           BaseStyle->"Graphics"]}, {
          StyleBox[DiskBox[{0.00007263143566471619, 0.}, 0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], InsetBox["4", {0.00007263143566471619, 0.},
           BaseStyle->"Graphics"]}, {
          StyleBox[DiskBox[{0., 0.9737145167850567}, 0.1803414155696349],
           StripOnInput->False,
           ShowContents->False], InsetBox["5", {0., 0.9737145167850567},
           BaseStyle->"Graphics"]}}}],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None,
   ImageSize->{101.66796875, Automatic}], "]"}]], "Input",
 ExpressionUUID -> "fb5edda6-1396-4529-b024-0243f3f15ac1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{
    TemplateBox[{"\"dodecahedral graph\"",RowBox[{"Entity", "[", 
        RowBox[{"\"Graph\"", ",", "\"DodecahedralGraph\""}], "]"}],
      "\"Entity[\\\"Graph\\\", \\\"DodecahedralGraph\\\"]\"","\"graph\""},
     "Entity"], "[", "\"\<Graph\>\"", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.70385392413232*^9, 3.703853924811719*^9}},
 ExpressionUUID -> "c1db7b73-7e71-4d78-9aeb-5b4ade423194"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"PathGraph", "@", 
    RowBox[{"IGFindDiameter", "[", "g", "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<DehighlightFade\>\""}], ",", 
   RowBox[{"PlotTheme", "\[Rule]", "\"\<RoyalColor\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.703853913860821*^9, 3.7038539543811827`*^9}, {
  3.7038539870119467`*^9, 3.7038540680323544`*^9}, {3.703854120785037*^9, 
  3.703854161189163*^9}},
 ExpressionUUID -> "5033ef36-a981-4a9a-a61c-f7668e6c9bbb"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGEccentricity", "Subsubsection",
 ExpressionUUID -> "df3a682f-780b-4ec4-864e-b675bfc7eb4c"],

Cell[BoxData[
 RowBox[{"?", "IGEccentricity"}]], "Input",
 ExpressionUUID -> "7c95587f-bb56-48eb-a7eb-7de481add4c9"],

Cell[TextData[{
 "The eccentricity of a vertex is the longest shortest path to any other \
vertex. IGEccentricity computes the ",
 StyleBox["unweighted",
  FontSlant->"Italic"],
 " eccentricity of each vertex within the connected component where it is \
contained. "
}], "Text",
 ExpressionUUID -> "27b683b9-8bef-47a4-b163-2d670c32cc27"],

Cell[BoxData[
 RowBox[{"IGEccentricity", "@", 
  RowBox[{"CycleGraph", "[", "8", "]"}]}]], "Input",
 ExpressionUUID -> "a07934e7-1800-4a8e-9aaf-01258b1dd926"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGRadius", "Subsubsection",
 ExpressionUUID -> "36e4540e-7112-414a-95f0-63a91eb028da"],

Cell[BoxData[
 RowBox[{"?", "IGRadius"}]], "Input",
 ExpressionUUID -> "99e256e2-e5f3-4151-abaf-9630d1c82a59"],

Cell["\<\
The radius of a graph is the smallest eccentricity of any of its vertices.\
\>", "Text",
 ExpressionUUID -> "f0b63ee0-641b-4665-901a-067ae645abd4"],

Cell["For unconnected graphs, 0 is returned.", "Text",
 ExpressionUUID -> "fc9d1fe2-6531-4581-aa21-c78f164844ab"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Bipartite graphs", "Subsection",
 ExpressionUUID -> "617326a1-b986-4e38-8dd1-f07f55b31874"],

Cell[BoxData[
 RowBox[{"?", "IGBipartite*"}]], "Input",
 ExpressionUUID -> "78833861-7c13-432a-a604-530eae472e74"],

Cell[CellGroupData[{

Cell["IGBipartiteQ", "Subsubsection",
 ExpressionUUID -> "4f9f00f3-c844-429a-bc91-ba5e9c540793"],

Cell[BoxData[
 RowBox[{"?", "IGBipartiteQ"}]], "Input",
 ExpressionUUID -> "8a64afd4-5154-48b7-acc3-d9e8427d9741"],

Cell["Generate a graph and verify that it is bipartite.", "Text",
 ExpressionUUID -> "b30577ce-5f4e-4cf6-bc58-8e5eb7380063"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"IGBipartiteGameGNM", "[", 
   RowBox[{"5", ",", "5", ",", "10", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]], "Input",
 ExpressionUUID -> "8139a392-ef82-4299-99f1-122071cbfcab"],

Cell[BoxData[
 RowBox[{"IGBipartiteQ", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "e5f21391-5eb0-4376-a811-0f13429c4732"],

Cell["\<\
Verify that no edges run between two disjoint vertex subsets of the graph.\
\>", "Text",
 ExpressionUUID -> "022695fa-9c87-48b7-91e3-f9d4867dae60"],

Cell[BoxData[
 RowBox[{"IGBipartiteQ", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "b596f52f-ce34-48f6-89d6-1fadc5c84d8f"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGBipartitePartitions", "Subsubsection",
 ExpressionUUID -> "083840f6-8adb-4b68-bcef-b238bf1b6d6b"],

Cell[BoxData[
 RowBox[{"?", "IGBipartitePartitions"}]], "Input",
 ExpressionUUID -> "1a821be9-ab60-4c58-8dac-93669d6dcfed"],

Cell["Find a bipartite partitioning of a graph.", "Text",
 ExpressionUUID -> "b073ccab-797a-4b31-96d5-e56c488e9cf2"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4, 5, 6, 7, 8}, {
        Null, {{2, 5}, {3, 5}, {4, 5}, {2, 6}, {3, 6}, {1, 7}, {4, 7}, {1, 
         8}}}, {GraphLayout -> {
          "Dimension" -> 2, "VertexLayout" -> "BipartiteEmbedding"}, 
         VertexLabels -> {
          6 -> Placed["Name", After], 3 -> Placed["Name", Before], 5 -> 
           Placed["Name", After], 8 -> Placed["Name", After], 7 -> 
           Placed["Name", After], 4 -> Placed["Name", Before], 2 -> 
           Placed["Name", Before], 1 -> Placed["Name", Before]}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
          {Arrowheads[0.], 
           ArrowBox[{{0., -0.38401699437494763`}, {1.0240453183331937`, 
            0.1280056647916492}}, 0.01416776390182925]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., -0.38401699437494763`}, {1.0240453183331937`, 
            0.38401699437494763`}}, 0.01416776390182925]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., -0.1280056647916492}, {
            1.0240453183331937`, -0.38401699437494763`}}, 
            0.01416776390182925]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., -0.1280056647916492}, {
            1.0240453183331937`, -0.1280056647916492}}, 0.01416776390182925]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.1280056647916492}, {
            1.0240453183331937`, -0.38401699437494763`}}, 
            0.01416776390182925]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.1280056647916492}, {
            1.0240453183331937`, -0.1280056647916492}}, 0.01416776390182925]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.38401699437494763`}, {
            1.0240453183331937`, -0.38401699437494763`}}, 
            0.01416776390182925]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.38401699437494763`}, {1.0240453183331937`, 
            0.1280056647916492}}, 0.01416776390182925]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[
          0.7]}], {DiskBox[{0., -0.38401699437494763`}, 0.01416776390182925], 
           InsetBox["1", 
            Offset[{-2, 0}, {-0.01416776390182925, -0.38401699437494763`}], 
            ImageScaled[{1, 0.5}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., -0.1280056647916492}, 0.01416776390182925], 
           InsetBox["2", 
            Offset[{-2, 0}, {-0.01416776390182925, -0.1280056647916492}], 
            ImageScaled[{1, 0.5}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.1280056647916492}, 0.01416776390182925], 
           InsetBox["3", 
            Offset[{-2, 0}, {-0.01416776390182925, 0.1280056647916492}], 
            ImageScaled[{1, 0.5}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{0., 0.38401699437494763`}, 0.01416776390182925], 
           InsetBox["4", 
            Offset[{-2, 0}, {-0.01416776390182925, 0.38401699437494763`}], 
            ImageScaled[{1, 0.5}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.0240453183331937`, -0.38401699437494763`}, 
            0.01416776390182925], 
           InsetBox["5", 
            Offset[{2, 0}, {1.0382130822350228`, -0.38401699437494763`}], 
            ImageScaled[{0, 0.5}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.0240453183331937`, -0.1280056647916492}, 
            0.01416776390182925], 
           InsetBox["6", 
            Offset[{2, 0}, {1.0382130822350228`, -0.1280056647916492}], 
            ImageScaled[{0, 0.5}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.0240453183331937`, 0.1280056647916492}, 
            0.01416776390182925], 
           InsetBox["7", 
            Offset[{2, 0}, {1.0382130822350228`, 0.1280056647916492}], 
            ImageScaled[{0, 0.5}],
            BaseStyle->"Graphics"]}, {
           DiskBox[{1.0240453183331937`, 0.38401699437494763`}, 
            0.01416776390182925], 
           InsetBox["8", 
            Offset[{2, 0}, {1.0382130822350228`, 0.38401699437494763`}], 
            ImageScaled[{0, 0.5}],
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{89.078125, Automatic}]}], ";"}]], "Input",
 ExpressionUUID -> "5b10e55b-2001-48b4-a814-e76511c5b7ca"],

Cell[BoxData[
 RowBox[{"IGBipartitePartitions", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "ffc8be47-d15e-47a0-8725-5519b6afa1ee"],

Cell["\<\
Ensure that the partitions are returned in such an order that the first one \
contains vertex 5.\
\>", "Text",
 ExpressionUUID -> "9dbd4e53-403e-490e-8ed8-bda8d3001475"],

Cell[BoxData[
 RowBox[{"IGBipartitePartitions", "[", 
  RowBox[{"g", ",", "5"}], "]"}]], "Input",
 ExpressionUUID -> "b6ea903c-7722-40ca-ac47-9628e3e9b700"],

Cell[TextData[{
 Cell[BoxData["$Failed"],
  ExpressionUUID -> "c7e7b8b7-891b-4d79-9ee8-d1f35e8112f1"],
 " is returned for non-bipartite graphs."
}], "Text",
 ExpressionUUID -> "f9e69639-42d1-4fde-87fc-f37e5693048c"],

Cell[BoxData[
 RowBox[{"IGBipartitePartitions", "[", 
  RowBox[{"CompleteGraph", "[", "4", "]"}], "]"}]], "Input",
 ExpressionUUID -> "bc83ba68-454a-4daa-bafa-2f0f2c4e523a"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGBipartiteProjections", "Subsubsection",
 ExpressionUUID -> "01e0318f-80b4-46d7-bf34-ca6a9e5a33e3"],

Cell[BoxData[
 RowBox[{"?", "IGBipartiteProjections"}]], "Input",
 ExpressionUUID -> "5c53eb91-8beb-4ec6-952b-9d992751cfa1"],

Cell["\<\
The following bipartite graph described the relationship between diseases and \
genes.\
\>", "Text",
 ExpressionUUID -> "c68641b4-34bc-431d-805b-afd93dd5c373"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{
    "\"\<NetworkGraph\>\"", ",", "\"\<BipartiteDiseasomeNetwork\>\""}], "}"}],
    "]"}]}]], "Input",
 ExpressionUUID -> "220b5f62-e0ca-4f45-979e-7149782b9985"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parts", "=", 
   RowBox[{"Values", "@", 
    RowBox[{"GroupBy", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Thread", "[", 
       RowBox[{
        RowBox[{
         RowBox[{"IGVertexProp", "[", "\"\<Type\>\"", "]"}], "[", "g", "]"}], 
        "\[Rule]", 
        RowBox[{"VertexList", "[", "g", "]"}]}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"First", "\[Rule]", "Last"}]}], "\[IndentingNewLine]", 
     "]"}]}]}], ";"}]], "Input",
 CellChangeTimes->{{3.722626184490192*^9, 3.7226262808705*^9}},
 ExpressionUUID -> "8b8ecc01-230d-4b5a-bed7-63b35ed2451a"],

Cell["Construct a disease-disease and gene-gene network from it.", "Text",
 ExpressionUUID -> "8f9e806b-7fdc-43ae-945b-3a047b0902a3"],

Cell[BoxData[
 RowBox[{"IGBipartiteProjections", "[", 
  RowBox[{"g", ",", "parts"}], "]"}]], "Input",
 ExpressionUUID -> "5c2710d0-da0c-4573-a841-fce065e86191"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGBipartiteIncidenceMatrix and IGBipartiteIncidenceGraph", \
"Subsubsection",
 ExpressionUUID -> "1f2ccd35-d8f0-42aa-b55d-c66254836476"],

Cell[BoxData[
 RowBox[{"?", "IGBipartiteIncidenceGraph"}]], "Input",
 ExpressionUUID -> "bcf23fbe-c395-4e90-a172-d7e7794b7440"],

Cell[BoxData[
 RowBox[{"?", "IGBipartiteIncidenceMatrix"}]], "Input",
 ExpressionUUID -> "7ec81a43-762e-465a-8309-92f5ab14e53c"],

Cell[TextData[{
 "Compute an incidence matrix. The default partitioning used by ",
 Cell[BoxData["IGBipartiteIncidenceMatrix"],
  ExpressionUUID -> "3a74ddf5-9e96-4153-b4c6-9de74d3f13d2"],
 " is the one returned by ",
 Cell[BoxData["IGBipartitePartitions"],
  ExpressionUUID -> "67ea32de-b689-4fc2-96a7-318e762fa9d4"],
 "."
}], "Text",
 ExpressionUUID -> "19a6b76c-c297-42fb-a1bf-f3f0bd938e7a"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"IGBipartiteGameGNM", "[", 
   RowBox[{"5", ",", "5", ",", "10", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]], "Input",
 ExpressionUUID -> "e0e214f0-07e1-4e4e-92c0-d3447f961957"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bm", "=", 
   RowBox[{"IGBipartiteIncidenceMatrix", "[", "g", "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"MatrixForm", "[", 
  RowBox[{"bm", ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"IGBipartitePartitions", "[", "g", "]"}]}]}], "]"}]}], "Input",
 ExpressionUUID -> "14c079b8-644c-4485-9294-a5986596813c"],

Cell["Reconstruct a graph from an incidence matrix.", "Text",
 ExpressionUUID -> "e4ee9ae1-22a1-48da-b487-6a8cc8210fd0"],

Cell[BoxData[
 RowBox[{"IGBipartiteIncidenceGraph", "[", 
  RowBox[{"bm", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<BipartiteEmbedding\>\""}]}], 
  "]"}]], "Input",
 ExpressionUUID -> "d7d2c6b0-9837-42dd-9601-a2037d5a7475"],

Cell["\<\
Compute an incidence matrix using a given partitioning / vertex ordering. It \
is allowed to pass only a subset of vertices.\
\>", "Text",
 ExpressionUUID -> "694e75b6-6503-4f81-ad6a-3e8d26a94d28"],

Cell[BoxData[
 RowBox[{"IGBipartiteIncidenceMatrix", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2", ",", "3"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"6", ",", "7", ",", "8"}], "}"}]}], "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "21108a56-c86b-4a39-b6a4-74fe9d0ad106"],

Cell["\<\
Reconstruct the bipartite graph while specifying vertex names.\
\>", "Text",
 ExpressionUUID -> "26eadf19-5fec-45c7-8605-fd3e0a7bd553"],

Cell[BoxData[
 RowBox[{"IGBipartiteIncidenceGraph", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "e", ",", "f"}], "}"}]}], "}"}], ",", "%", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 ExpressionUUID -> "fb0d1c7b-35c7-4dd9-b4a4-c21983991b64"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Similarity measures", "Subsection",
 ExpressionUUID -> "90c6f602-0e3b-4557-ab02-8fd596af0eff"],

Cell[BoxData[
 RowBox[{"?", "IGBibliographicCoupling"}]], "Input",
 ExpressionUUID -> "ed746e09-1ec1-44b5-9f4c-f621dea7124c"],

Cell[BoxData[
 RowBox[{"?", "IGCocitationCoupling"}]], "Input",
 ExpressionUUID -> "bab62883-39ad-4d12-982e-7399a359e9a3"],

Cell[BoxData[
 RowBox[{"?", "IGDiceSimilarity"}]], "Input",
 ExpressionUUID -> "8486cca9-9a40-4d49-8bec-00845d5d2207"],

Cell["\<\
The Dice similarity coefficient of two vertices is twice the number of common \
neighbors divided by the sum of the degrees of the vertices.\
\>", "Text",
 ExpressionUUID -> "6c16ae25-867b-4d57-86a3-89e0ac0885d2"],

Cell[BoxData[
 RowBox[{"?", "IGJaccardSimilarity"}]], "Input",
 ExpressionUUID -> "71590b8d-7af9-428f-9a09-4096d9a6da9e"],

Cell["\<\
The Jaccard similarity coefficient of two vertices is the number of common \
neighbors divided by the number of vertices that are neighbors of at least \
one of the two vertices being considered.\
\>", "Text",
 ExpressionUUID -> "2c887069-f601-45f5-a32b-d3f9d27c66e3"],

Cell[BoxData[
 RowBox[{"?", "IGInverseLogWeightedSimilarity"}]], "Input",
 ExpressionUUID -> "7b322ae5-d73a-43a8-bd90-47aa76b00d21"],

Cell["\<\
The inverse log-weighted similarity of two vertices is the number of their \
common neighbors, weighted by the inverse logarithm of their degrees. It is \
based on the assumption that two vertices should be considered more similar \
if they share a low-degree common neighbor, since high-degree common \
neighbors are more likely to appear even by pure chance.\
\>", "Text",
 ExpressionUUID -> "394cf961-6191-43ca-ad48-b7ee709c5b49"],

Cell["\<\
Isolated vertices will have zero similarity to any other vertex. \
Self-similarities are not calculated.\
\>", "Text",
 ExpressionUUID -> "906c1d88-56d7-4110-89f0-72ad31f8ca8a"],

Cell[TextData[{
 "Reference: Lada A. Adamic and Eytan Adar: Friends and neighbors on the Web, \
",
 StyleBox["Social Networks",
  FontSlant->"Italic"],
 ", 25(3):211-230, 2003."
}], "Text",
 ExpressionUUID -> "09657536-6581-486e-b24b-765b9b5399c4"]
}, Closed]],

Cell[CellGroupData[{

Cell["Graph components", "Subsection",
 ExpressionUUID -> "91780ffe-fd91-4ad3-b91a-2ead4e339ef1"],

Cell[CellGroupData[{

Cell["Vertex separators", "Subsubsection",
 ExpressionUUID -> "67a5604c-678f-409b-b906-f10b1f2ab1e8"],

Cell["\<\
A vertex separator is a set of vertices whose removal disconnects the graph.\
\>", "Text",
 ExpressionUUID -> "fa87f0ca-20bd-47cb-b12d-0b67204ec59e"],

Cell[BoxData[
 RowBox[{"?", "IGMinimalSeparators"}]], "Input",
 ExpressionUUID -> "1384bcc9-a03c-40bb-98bd-af8f008c9686"],

Cell[BoxData[
 RowBox[{"?", "IGMinimumSeparators"}]], "Input",
 ExpressionUUID -> "fcfa351a-6bd5-4e39-80ca-22cefdaf5d40"],

Cell[BoxData[
 RowBox[{"?", "IGVertexSeparatorQ"}]], "Input",
 ExpressionUUID -> "9437f05a-2929-48d6-acc6-df29f939a053"],

Cell[BoxData[
 RowBox[{"?", "IGMinimalVertexSeparatorQ"}]], "Input",
 ExpressionUUID -> "4c868359-5704-4318-b954-058108032575"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<Friendship\>\""}], "}"}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "a1378993-1eb9-43a9-bfb4-10a258e2e36b"],

Cell[BoxData[
 RowBox[{"separators", "=", 
  RowBox[{"IGMinimumSeparators", "[", "g", "]"}]}]], "Input",
 ExpressionUUID -> "acd2f24f-3b4b-447e-b2a6-dfe78ae2e9eb"],

Cell["Removing any of these vertex sets will disconnect the graph:", "Text",
 ExpressionUUID -> "8ae3fde5-f10b-4d90-afb8-f30664e32c40"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VertexDelete", "[", 
    RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", "separators"}]], "Input",
 ExpressionUUID -> "b7bf351d-39aa-48a9-bf9a-52404b65fc67"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IGVertexSeparatorQ", "[", 
    RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", "separators"}]], "Input",
 ExpressionUUID -> "17f20b95-9163-48a2-ab19-a8a5da97cccb"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IGMinimalVertexSeparatorQ", "[", 
    RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", "separators"}]], "Input",
 ExpressionUUID -> "f15d4b79-788b-4ce9-81d5-1c1c0966d4aa"],

Cell["\<\
Removing Anna, Nora and Larry also disconnects the graph, thus this vertex \
set is a separator:\
\>", "Text",
 ExpressionUUID -> "b539f95c-dadf-4627-b7eb-eaa8844ced8a"],

Cell[BoxData[
 RowBox[{"IGVertexSeparatorQ", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Anna\>\"", ",", "\"\<Nora\>\"", ",", "\"\<Larry\>\""}], 
    "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "16d0a77a-db51-4439-8d51-e89d9a002c75"],

Cell["But it is not minimal:", "Text",
 ExpressionUUID -> "c51ac6a0-c522-409b-a619-c91409cab091"],

Cell[BoxData[
 RowBox[{"IGMinimalVertexSeparatorQ", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{"\"\<Anna\>\"", ",", "\"\<Nora\>\"", ",", "\"\<Larry\>\""}], 
    "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "019c2df9-2c5a-4456-af32-c950bf110ed5"],

Cell[TextData[{
 Cell[BoxData["IGMinimumSeparators"],
  ExpressionUUID -> "b8b7cdc3-ed74-4252-82eb-9b6f0ea4a057"],
 " returns only those vertex separators which are of the smallest possible \
size in the graph. ",
 Cell[BoxData["IGMinimalSeparators"],
  ExpressionUUID -> "ad020e41-37c9-4a2b-b826-69cbcf034e5b"],
 " returns all separators which cannot be made smaller by removing a vertex \
from them. The former is a subset of the latter."
}], "Text",
 ExpressionUUID -> "6d26302a-3cfb-4c33-8afd-1dd5e114f4a3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{0, 1, 2, 3, 4, 5, 6}, {
        Null, {{1, 2}, {2, 3}, {3, 4}, {3, 5}, {5, 6}, {4, 6}, {6, 7}, {7, 
         1}}}, {VertexLabels -> {
           Placed["Name", Center]}, VertexShapeFunction -> {None}, 
         VertexSize -> {Large}}]]}, 
      TagBox[GraphicsGroupBox[{
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
          {Arrowheads[0.], 
           ArrowBox[{{2.4672573199232506`, 0.8378444909707423}, {
            1.8812749619341707`, 0.}}, 0.125485749580099]}, 
          {Arrowheads[0.], 
           ArrowBox[{{2.4672573199232506`, 0.8378444909707423}, {
            1.8829073080344623`, 1.6753663185872556`}}, 0.125485749580099]}, 
          {Arrowheads[0.], 
           ArrowBox[{{1.8812749619341707`, 0.}, {0.7724059938006376, 
            0.09750948642949642}}, 0.125485749580099]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0.7724059938006376, 0.09750948642949642}, {0., 
            0.8386855499318042}}, 0.125485749580099]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0.7724059938006376, 0.09750948642949642}, {
            0.6274286920883272, 0.8389501936810161}}, 0.125485749580099]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0., 0.8386855499318042}, {0.7736623620480478, 
            1.5791956151476407`}}, 0.125485749580099]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0.6274286920883272, 0.8389501936810161}, {
            0.7736623620480478, 1.5791956151476407`}}, 0.125485749580099]}, 
          {Arrowheads[0.], 
           ArrowBox[{{0.7736623620480478, 1.5791956151476407`}, {
            1.8829073080344623`, 1.6753663185872556`}}, 
            0.125485749580099]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], {
           
           StyleBox[
            DiskBox[{2.4672573199232506`, 0.8378444909707423}, 
             0.125485749580099],
            StripOnInput->False,
            ShowContents->False], 
           InsetBox["0", {2.4672573199232506`, 0.8378444909707423},
            BaseStyle->"Graphics"]}, {
           StyleBox[DiskBox[{1.8812749619341707`, 0.}, 0.125485749580099],
            StripOnInput->False,
            ShowContents->False], InsetBox["1", {1.8812749619341707`, 0.},
            BaseStyle->"Graphics"]}, {
           
           StyleBox[
            DiskBox[{0.7724059938006376, 0.09750948642949642}, 
             0.125485749580099],
            StripOnInput->False,
            ShowContents->False], 
           InsetBox["2", {0.7724059938006376, 0.09750948642949642},
            BaseStyle->"Graphics"]}, {
           StyleBox[DiskBox[{0., 0.8386855499318042}, 0.125485749580099],
            StripOnInput->False,
            ShowContents->False], InsetBox["3", {0., 0.8386855499318042},
            BaseStyle->"Graphics"]}, {
           
           StyleBox[
            DiskBox[{0.6274286920883272, 0.8389501936810161}, 
             0.125485749580099],
            StripOnInput->False,
            ShowContents->False], 
           InsetBox["4", {0.6274286920883272, 0.8389501936810161},
            BaseStyle->"Graphics"]}, {
           
           StyleBox[
            DiskBox[{0.7736623620480478, 1.5791956151476407`}, 
             0.125485749580099],
            StripOnInput->False,
            ShowContents->False], 
           InsetBox["5", {0.7736623620480478, 1.5791956151476407`},
            BaseStyle->"Graphics"]}, {
           
           StyleBox[
            DiskBox[{1.8829073080344623`, 1.6753663185872556`}, 
             0.125485749580099],
            StripOnInput->False,
            ShowContents->False], 
           InsetBox["6", {1.8829073080344623`, 1.6753663185872556`},
            BaseStyle->"Graphics"]}}}],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{171.3828125, Automatic}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7027269099017878`*^9, 3.702726915800008*^9}},
 ExpressionUUID -> "c8d2102b-4f70-4ae9-88c4-a41558d6e80e"],

Cell[BoxData[
 RowBox[{"IGMinimalSeparators", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.702726916648171*^9, 3.7027269182479563`*^9}},
 ExpressionUUID -> "3a281316-4ae9-4761-9726-eed0d2c1a1b3"],

Cell[BoxData[
 RowBox[{"IGMinimumSeparators", "[", "g", "]"}]], "Input",
 CellChangeTimes->{{3.7027269205294847`*^9, 3.7027269234227457`*^9}},
 ExpressionUUID -> "1a2bc2eb-7962-458b-abca-6a7189c46428"],

Cell[BoxData[
 RowBox[{"SubsetQ", "[", 
  RowBox[{"%%", ",", "%"}], "]"}]], "Input",
 CellChangeTimes->{{3.702726927581896*^9, 3.702726943974859*^9}},
 ExpressionUUID -> "ba5ac79a-bc98-4536-afa9-ec9213676008"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGArticulationPoints", "Subsubsection",
 ExpressionUUID -> "bd0338d2-52b7-4e76-b065-09f4b43ceda8"],

Cell[TextData[{
 Cell[BoxData["IGArticulationPoints"],
  ExpressionUUID -> "eaa70700-d0b2-4a10-b7d8-cf51454c45b7"],
 " finds vertices whose removal increases the number of connected components \
in the graph. Edge directions are ignored."
}], "Text",
 ExpressionUUID -> "fa64c355-cce0-4447-97bc-cc314e71b2fa"],

Cell[BoxData[
 RowBox[{"?", "IGArticulationPoints"}]], "Input",
 ExpressionUUID -> "1f40b69b-3a3e-4cd6-ab01-e95965d89dfe"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "2"}], ",", 
      RowBox[{"2", "\[Rule]", "3"}], ",", 
      RowBox[{"3", "\[Rule]", "1"}], ",", 
      RowBox[{"3", "\[Rule]", "4"}], ",", 
      RowBox[{"4", "\[Rule]", "5"}], ",", 
      RowBox[{"5", "\[Rule]", "6"}], ",", 
      RowBox[{"6", "\[Rule]", "4"}]}], "}"}], ",", 
    RowBox[{"DirectedEdges", "\[Rule]", "False"}], ",", 
    RowBox[{"VertexLabels", "\[Rule]", "Automatic"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "d94bfef9-914e-45fe-99ff-1dada8dc0445"],

Cell[BoxData[
 RowBox[{"IGArticulationPoints", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "c7b78f25-8fad-45d0-9c9a-3abc72cb8e33"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"VertexDelete", "[", 
    RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", "%"}]], "Input",
 ExpressionUUID -> "229be5b8-0898-424d-a6e7-8f2a8ab108e1"],

Cell["Articulation points are also size-1 separators.", "Text",
 ExpressionUUID -> "dab89576-c518-4c81-8e38-387cc6437293"],

Cell[BoxData[
 RowBox[{"IGMinimumSeparators", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "0fab1c3d-dc4e-49b9-af3b-2ac24556c1bb"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Motifs and subgraphs", "Section",
 ExpressionUUID -> "e7c2581f-cfb4-4e5d-936c-183f16dcd057"],

Cell[CellGroupData[{

Cell["Motifs", "Subsection",
 ExpressionUUID -> "e46915c2-1f47-4c99-8a40-dcbc10b4018b"],

Cell[BoxData[
 RowBox[{"?", "IGMotifs"}]], "Input",
 ExpressionUUID -> "ee299216-bf38-4ebb-b5ab-57e01033adc6"],

Cell[TextData[{
 "IGMotifs counts connected induced subgraphs. As of version 0.3.0, only size \
3 and 4 motifs are supported directly. See ",
 Cell[BoxData["IGLADSubisomorphismCount"],
  ExpressionUUID -> "2f8fbd7d-31cd-4da4-8274-df4b6653adfe"],
 " to count larger induced subgraphs and ",
 Cell[BoxData["IGLADFindSubisomorphisms"],
  ExpressionUUID -> "b40ba473-f177-40d4-a0f6-9d75e1c03154"],
 " to find where a certain motif occurs in a graph."
}], "Text",
 ExpressionUUID -> "a5bd6538-94e9-4217-8764-7cefa5ba0b7e"],

Cell[TextData[{
 "Motif counts are returned ordered by their ",
 Cell[BoxData["IGIsoclass"],
  ExpressionUUID -> "d2b816a2-c089-4c2b-9c80-963e47b8b3cd"],
 ". ",
 Cell[BoxData["Indeterminate"],
  ExpressionUUID -> "34eacf64-5860-4e69-8337-37de27854a26"],
 " is returned for non-connected subgraphs."
}], "Text",
 ExpressionUUID -> "5855e762-ac06-449c-bf4b-52c88ee5a839"],

Cell[TextData[{
 "To count non-connected size-3 subgraphs, use ",
 Cell[BoxData["IGTriadCensus"],
  ExpressionUUID -> "0dc9c2f6-8ad6-4870-ac28-3623ec004f5c"],
 "."
}], "Text",
 ExpressionUUID -> "d0dc5c9e-8c01-43c2-949b-cc9c25eb6644"],

Cell[CellGroupData[{

Cell["Example", "Subsubsection",
 ExpressionUUID -> "70d3bc8d-c1aa-447b-9438-75fa06b512f6"],

Cell["\<\
Let us find the size-4 motifs that stand out in the E. coli metabolic network \
by comparing the motif counts to that of a rewired graph:\
\>", "Text",
 ExpressionUUID -> "64f715f7-be7c-42d3-87c7-14af2fee52ee"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", "\"\<MetabolicNetworkEscherichiaColi\>\""}],
      "}"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "b5701d72-79e0-4d67-a9ad-2e2b21c215fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"rg", "=", 
   RowBox[{"IGRewire", "[", 
    RowBox[{"g", ",", "50000"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "cbaa7a98-645c-47de-bab5-ff380be0c0a3"],

Cell[BoxData[
 RowBox[{"ratios", "=", 
  RowBox[{"N", "@", 
   RowBox[{"Quiet", "[", 
    FractionBox[
     RowBox[{"IGMotifs", "[", 
      RowBox[{"g", ",", "4"}], "]"}], 
     RowBox[{"IGMotifs", "[", 
      RowBox[{"rg", ",", "4"}], "]"}]], "]"}]}]}]], "Input",
 ExpressionUUID -> "1365527c-c878-4ed0-9acd-70d1e4179bc1"],

Cell[BoxData[
 RowBox[{"largeRatios", "=", 
  RowBox[{"Select", "[", 
   RowBox[{"ratios", ",", 
    RowBox[{
     RowBox[{"#", ">", "5"}], "&"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "9b8b512f-fb81-4820-9cd9-aac4c9bf3ea5"],

Cell["\<\
There are two motifs that are more than 30 times more common in the metabolic \
network than in the rewired graph.\
\>", "Text",
 ExpressionUUID -> "318375f2-8e26-4edd-b0ff-60ccdbb7c852"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Extract", "[", 
    RowBox[{
     RowBox[{"IGData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<AllDirectedGraphs\>\"", ",", "4"}], "}"}], "]"}], ",", 
     RowBox[{"FirstPosition", "[", 
      RowBox[{"ratios", ",", "#"}], "]"}]}], "]"}], "&"}], "/@", 
  "largeRatios"}]], "Input",
 CellChangeTimes->{{3.6642667484180593`*^9, 3.664266777741116*^9}, {
  3.664266860768724*^9, 3.664266868234413*^9}, {3.664266954052833*^9, 
  3.664266964982087*^9}},
 ExpressionUUID -> "2e744019-c3ad-450c-b0b7-bec13a35dcdd"],

Cell["\<\
The Davidson\[Dash]Harel algorithm attempts to reduce edge crossings and can \
draw these subgraphs in a clearer way:\
\>", "Text",
 ExpressionUUID -> "f77515b0-4c71-4c57-a56c-c2066dbec830"],

Cell[BoxData[
 RowBox[{"IGLayoutDavidsonHarel", "/@", "%"}]], "Input",
 ExpressionUUID -> "f40f9042-75ff-42d6-8a08-23aa6fe180dc"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Triad and dyad census", "Subsection",
 ExpressionUUID -> "8cd5d282-78c1-4c5c-83c9-9a89d86d80d8"],

Cell[BoxData[
 RowBox[{"?", "IGTriadCensus"}]], "Input",
 ExpressionUUID -> "7b393f07-63b9-43ee-b204-0a7eb7321821"],

Cell[BoxData[
 RowBox[{"?", "IGDyadCensus"}]], "Input",
 ExpressionUUID -> "3309c364-699d-41c0-8bf0-6294475d4a5b"],

Cell[TextData[{
 "See ",
 Cell[BoxData[
  RowBox[{"IGData", "[", "\"\<MANTriadLabels\>\"", "]"}]],
  ExpressionUUID -> "aebfa97e-da10-4213-9a12-3de405b1c768"],
 " for the mapping between MAN labels and graphs."
}], "Text",
 ExpressionUUID -> "cc42accb-adeb-4bf6-9e79-b4504995878a"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGTriadCensus", "[", "g", "]"}]],
  ExpressionUUID -> "d6795aba-b53d-4e13-a516-4e00b2864ffe"],
 " does not return triad counts in the same order as ",
 Cell[BoxData[
  RowBox[{"IGMotifs", "[", 
   RowBox[{"g", ",", "3"}], "]"}]],
  ExpressionUUID -> "12ceee3a-b462-42fa-8de5-a1aa1a24eb83"],
 ", i.e. ordered according to the triads\[CloseCurlyQuote] ",
 Cell[BoxData[
  RowBox[{"IGIsoclass", "[", "]"}]],
  ExpressionUUID -> "4647c0b7-ef17-4816-8ef4-1a11fc4c88b8"],
 ". To get the result ordered by isoclass, use"
}], "Text",
 ExpressionUUID -> "6bb383db-d92c-4e6b-99a6-dd077c15db61"],

Cell[BoxData[
 RowBox[{"Lookup", "[", 
  RowBox[{
   RowBox[{"IGTriadCensus", "[", "g", "]"}], ",", 
   RowBox[{"Keys", "@", 
    RowBox[{"IGData", "[", "\"\<MANTriadLabels\>\"", "]"}]}]}], 
  "]"}]], "Input",
 Evaluatable->False,
 ExpressionUUID -> "23e6e6a4-b437-446c-8551-2dfbe0679580"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGData", "[", "\"\<MANTriadLabels\>\"", "]"}]],
  ExpressionUUID -> "6c5ba777-59e2-4244-ae89-3b2bc51142b6"],
 " are ordered according to isoclass."
}], "Text",
 ExpressionUUID -> "fa5a5512-9605-4a1d-ab13-48e6fc8ccd57"]
}, Closed]],

Cell[CellGroupData[{

Cell["Finding triangles", "Subsection",
 ExpressionUUID -> "2efa0eb9-604a-4ee7-8c15-46a90648eead"],

Cell[BoxData[
 RowBox[{"?", "IGTriangles"}]], "Input",
 ExpressionUUID -> "eb7af878-3430-45bf-837c-e36eed636e14"],

Cell[BoxData[
 RowBox[{"?", "IGAdjacentTriangleCount"}]], "Input",
 ExpressionUUID -> "69f5a620-1673-4a29-9503-39db6c7120c6"],

Cell["\<\
Label a graph\[CloseCurlyQuote]s vertices based on the number of adjacent \
triangles.\
\>", "Text",
 ExpressionUUID -> "5409c123-b5fc-4d1c-aa7d-432a620078b6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"RandomGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"8", ",", "16"}], "}"}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "808292ba-5b2d-46d5-aa39-364d01855668"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Placed", "[", 
     RowBox[{"#", ",", "Center"}], "]"}], "&"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "IGAdjacentTriangleCount"}], ",", "g"}],
   "]"}]], "Input",
 ExpressionUUID -> "2a9d54cd-7b6c-4cd8-92f9-599ca36d4866"],

Cell["Highlight all triangles in the graph.", "Text",
 ExpressionUUID -> "c680a371-df41-4bcf-bec4-566e7126bfda"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Subgraph", "[", 
      RowBox[{"g", ",", "#"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}], ",", 
     RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}]}], "]"}], 
   "&"}], "/@", 
  RowBox[{"IGTriangles", "[", "g", "]"}]}]], "Input",
 ExpressionUUID -> "1e998d1a-5c3b-4070-8f64-21ffef1a462c"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Isomorphism", "Section",
 ExpressionUUID -> "9e4da9b6-8c20-4afc-8b85-62de48aa1e5b"],

Cell["\<\
igraph implements three isomorphism testing algorithms: BLISS, VF2 and LAD. \
These support slightly different functionality.\
\>", "Text",
 ExpressionUUID -> "55258a0e-b492-4242-95a3-4d27550619ab"],

Cell[TextData[{
 StyleBox["Naming:",
  FontWeight->"Bold"],
 " Most of IGraph/M's isomorphism related functions include the name of the \
algorithm as a prefix, e.g. ",
 Cell[BoxData["IGBlissIsomorphicQ"],
  ExpressionUUID -> "983156bc-8087-42df-9fb4-8e7a1bfa7cfd"],
 ". Functions named as ",
 Cell[BoxData["\[Ellipsis]GetIsomorphism"],
  ExpressionUUID -> "070e8acd-9bbe-4172-9a0c-54fd46c2342b"],
 " will find a single isomorphism. Functions named as ",
 Cell[BoxData["\[Ellipsis]FindIsomorphisms"],
  ExpressionUUID -> "70dd4a27-c774-4a9e-8294-02257682ed0a"],
 " can find multiple isomorphisms. Both return a result in a format \
compatible with the built-in ",
 Cell[BoxData["FindGraphIsomorphism"],
  ExpressionUUID -> "97c96f69-2434-4c3b-a4b0-1044ad39c384"],
 "."
}], "Text",
 ExpressionUUID -> "31a4c015-6d72-4139-a1e9-d5039be6119d"],

Cell[TextData[{
 "Additionally, ",
 Cell[BoxData[
  RowBox[{"IGIsomorphicQ", "[", "]"}]],
  ExpressionUUID -> "ea218061-431e-4c53-bb11-6614f03a5604"],
 " and ",
 Cell[BoxData[
  RowBox[{"IGSubisomorphicQ", "[", "]"}]],
  ExpressionUUID -> "fa4e7a5d-c76e-4d92-89f4-353439e94837"],
 " try to select the best algorithm for the given graphs. For graphs without \
multiple edges, they use igraph\[CloseCurlyQuote]s default algorithm \
selection. For multigraphs, they use VF2 after internally transforming the \
multigraphs to an edge coloured simple graph."
}], "Text",
 ExpressionUUID -> "7fafb07c-326b-407b-96e0-04af295bc978"],

Cell[BoxData[
 RowBox[{"?", "IGIsomorphicQ"}]], "Input",
 ExpressionUUID -> "a7b1fecc-6ac4-4920-818e-13dca30c019e"],

Cell[BoxData[
 RowBox[{"?", "IGSubisomorphicQ"}]], "Input",
 ExpressionUUID -> "1a022ad3-34cc-4a72-8514-c5a37aba8716"],

Cell[CellGroupData[{

Cell["BLISS", "Subsection",
 ExpressionUUID -> "2a1476b1-0a79-428a-b5d7-b4151a6df319"],

Cell[TextData[{
 "See ",
 ButtonBox["http://www.tcs.hut.fi/Software/bliss/",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.tcs.hut.fi/Software/bliss/"], None},
  ButtonNote->"http://www.tcs.hut.fi/Software/bliss/"],
 " and ",
 ButtonBox["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470920858320",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470920858320"], 
    None},
  ButtonNote->
   "http://igraph.org/c/doc/igraph-Isomorphism.html#idm470920858320"],
 " for details. This algorithm is described in the following paper:"
}], "Text",
 ExpressionUUID -> "7190498f-663a-488a-8849-09bc2cae5369"],

Cell[TextData[{
 "T. Junttila, P. Kaski, Engineering an Efficient Canonical Labeling Tool for \
Large and Sparse Graphs, 2007 Proceedings of the Ninth Workshop on Algorithm \
Engineering and Experiments, ",
 ButtonBox["doi:10.1137/1.9781611972870.13",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://doi.org/10.1137/1.9781611972870.13"], None},
  ButtonNote->"https://doi.org/10.1137/1.9781611972870.13"],
 "."
}], "Item",
 ExpressionUUID -> "1152e247-b245-4fe7-b807-027cf517975f"],

Cell[TextData[{
 "Bliss generally outperforms ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s built-in isomorphisms functions (including finding and \
counting automorphisms) as of ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 11.2. However, this advantage will only be apparent for large and \
difficult graphs. For small ones the overhead of having to copy the graph and \
convert it to igraph\[CloseCurlyQuote]s internal format is much larger than \
the actual computation time."
}], "Text",
 ExpressionUUID -> "eaff43b3-96f4-4ea3-9a68-79c633333478"],

Cell[BoxData[
 RowBox[{"?", "IGBliss*"}]], "Input",
 ExpressionUUID -> "0cd71477-a8a5-4ce4-954f-dde03487b472"],

Cell[TextData[{
 "All Bliss functions take a ",
 Cell[BoxData["\"\<SplittingHeuristics\>\""],
  ExpressionUUID -> "18d33a5e-4bad-431a-8f1a-b17924856cae"],
 " option, which can influence the performance of the method. Possible values \
are:"
}], "Text",
 ExpressionUUID -> "4660f92b-443e-4540-93a1-82cc5ef8f262"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<First\>\""],
  ExpressionUUID -> "6a56ba67-4730-4fc8-af2c-806e25f6f332"],
 " \[Dash] First non-unit cell. Very fast but may result in large search \
spaces on difficult graphs. Use for large but easy graphs."
}], "Item",
 ExpressionUUID -> "c06b075a-c307-449a-bcb1-7b3e9beb7f28"],

Cell[TextData[{
 Cell[BoxData["\"\<FirstSmallest\>\""],
  ExpressionUUID -> "6fa3a1f0-b1f8-4ac5-bd32-fcaec240f6d9"],
 " \[Dash] First smallest non-unit cell. Fast, should usually produce smaller \
search spaces than ",
 Cell[BoxData["\"\<First\>\""],
  ExpressionUUID -> "1f7da745-831b-4f80-ac25-d3ecc0eec47b"],
 "."
}], "Item",
 ExpressionUUID -> "e85ed53d-38ee-4174-a72a-2d25895e7c02"],

Cell[TextData[{
 Cell[BoxData["\"\<FirstLargest\>\""],
  ExpressionUUID -> "83b3d119-2484-4898-876d-83af9a9fad83"],
 " \[Dash] First largest non-unit cell. Fast, should usually produce smaller \
search spaces than ",
 Cell[BoxData["\"\<First\>\""],
  ExpressionUUID -> "d42a7cd5-eb66-42f3-b1a6-44a7bf328465"],
 "."
}], "Item",
 ExpressionUUID -> "64e9b12d-bf71-4eca-a86f-fd0c32f9783e"],

Cell[TextData[{
 Cell[BoxData["\"\<FirstMaximallyConnected\>\""],
  ExpressionUUID -> "78f0c2dd-3cd0-40d0-bd07-65bde66b50b4"],
 " \[Dash] First maximally non-trivially connected non-unit cell. Not so \
fast, should usually produce smaller search spaces than ",
 Cell[BoxData["\"\<First\>\""],
  ExpressionUUID -> "aa36c6a1-e892-41fe-b621-b71b48653e55"],
 ", ",
 Cell[BoxData["\"\<FirstSmallest\>\""],
  ExpressionUUID -> "d8356bb5-e012-4150-9d77-ab491927b6fb"],
 " and ",
 Cell[BoxData["\"\<FirstLargest\>\""],
  ExpressionUUID -> "e5f89ef7-aab3-4195-b84f-2d69d8d228e9"],
 "."
}], "Item",
 ExpressionUUID -> "1389dd2e-3283-4ec6-a33c-50e2a7c5b4c1"],

Cell[TextData[{
 Cell[BoxData["\"\<FirstSmallestMaximallyConnected\>\""],
  ExpressionUUID -> "80268e47-8076-4a3d-9a2f-2e557a123b1f"],
 " \[Dash] First smallest maximally non-trivially connected non-unit cell. \
Not so fast, should usually produce smaller search spaces than ",
 Cell[BoxData["\"\<First\>\""],
  ExpressionUUID -> "a32429f9-9fdb-4eb4-b049-658c0e41bbcf"],
 ", ",
 Cell[BoxData["\"\<FirstSmallest\>\""],
  ExpressionUUID -> "cc1b06a0-fb4b-4c44-b9cc-781d31652533"],
 " and ",
 Cell[BoxData["\"\<FirstLargest\>\""],
  ExpressionUUID -> "d15b3035-7379-48db-867e-e5d86d4b98ca"],
 "."
}], "Item",
 ExpressionUUID -> "343ec89a-7bc4-454b-8f52-24112cb8d617"],

Cell[TextData[{
 Cell[BoxData["\"\<FirstLargestMaximallyConnected\>\""],
  ExpressionUUID -> "2d8f7001-275f-441c-9427-74e9cf643850"],
 " \[Dash] First largest maximally non-trivially connected non-unit cell. Not \
so fast, should usually produce smaller search spaces than ",
 Cell[BoxData["\"\<First\>\""],
  ExpressionUUID -> "7e4b7d7d-186e-46f5-94b2-8c256a83382a"],
 ", ",
 Cell[BoxData["\"\<FirstSmallest\>\""],
  ExpressionUUID -> "7a6433d7-3f1f-45df-b9a2-3d8e4e785632"],
 " and ",
 Cell[BoxData["\"\<FirstLargest\>\""],
  ExpressionUUID -> "58341016-92e2-43e5-894e-031a470d1aba"],
 "."
}], "Item",
 ExpressionUUID -> "e604953d-5b00-44d4-8a35-b810c9e70b2c"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Note:",
  FontWeight->"Bold"],
 " The result of the ",
 Cell[BoxData["IGBlissCanonicalLabeling"],
  ExpressionUUID -> "0df01f29-e0a0-48b5-af00-313a37bbf68e"],
 ", ",
 Cell[BoxData["IGBlissCanonicalPermutation"],
  ExpressionUUID -> "865df3ac-7760-4c05-92a3-363a365ce1fb"],
 " and ",
 Cell[BoxData["IGBlissanonicalGraph"],
  ExpressionUUID -> "f74c5109-0206-4b58-b21b-1fffb9fb394c"],
 " functions depend on the choice of ",
 Cell[BoxData["\"\<SplittingHeuristics\>\""],
  ExpressionUUID -> "b3518ffb-c2c0-4c23-af19-f197bce12f28"],
 ". See the ",
 ButtonBox["Bliss documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.tcs.hut.fi/Software/bliss/doxy/classbliss_1_1Graph.html#\
a08da370e34106cd7db479eca7c7375cc"], None},
  ButtonNote->
   "http://www.tcs.hut.fi/Software/bliss/doxy/classbliss_1_1Graph.html#\
a08da370e34106cd7db479eca7c7375cc"],
 " for more information. "
}], "Text",
 ExpressionUUID -> "eac59b8a-c2b2-4541-98f6-c9d8e5715548"],

Cell[CellGroupData[{

Cell["Basic examples", "Subsubsection",
 ExpressionUUID -> "d5c95749-df16-4f56-afe2-103a8f398d77"],

Cell["Let us take the cuboctahedral graph from GraphData \[Ellipsis]", "Text",
 
 ExpressionUUID -> "61c23989-401b-4bdb-b513-90fe38709165"],

Cell[BoxData[
 RowBox[{"g1", "=", 
  RowBox[{"GraphData", "[", "\"\<CuboctahedralGraph\>\"", "]"}]}]], "Input",
 ExpressionUUID -> "51a66455-c890-462c-af80-1b31e2e3cd67"],

Cell["\[Ellipsis] and also generate it based on its LCF notation.", "Text",
 ExpressionUUID -> "555ed5b3-3158-4d7c-ae71-93f2797d9f12"],

Cell[BoxData[
 RowBox[{"g2", "=", 
  RowBox[{"IGLCF", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"4", ",", "2"}], "}"}], ",", "6"}], "]"}]}]], "Input",
 ExpressionUUID -> "6e77a2e3-30dc-4559-862c-9d57a7fd2911"],

Cell["The two graphs are isomorphic:", "Text",
 ExpressionUUID -> "35e27d5c-4c63-4757-8ad1-10562613605a"],

Cell[BoxData[
 RowBox[{"IGBlissIsomorphicQ", "[", 
  RowBox[{"g1", ",", "g2"}], "]"}]], "Input",
 ExpressionUUID -> "dc132312-a08b-4f0d-8dde-103328a3836a"],

Cell["One particular mapping between them is the following:", "Text",
 ExpressionUUID -> "35ea45b1-4fa7-474a-98ae-8db128c05ad4"],

Cell[BoxData[
 RowBox[{"IGBlissGetIsomorphism", "[", 
  RowBox[{"g1", ",", "g2"}], "]"}]], "Input",
 ExpressionUUID -> "23f55e3d-3a4d-4364-8838-23880dd4286f"],

Cell["\<\
How many mappings are there in total? The same number as the number of \
automorphisms of either graph.\
\>", "Text",
 ExpressionUUID -> "8e601f12-d6d8-4921-b6b4-d1bac8643009"],

Cell[BoxData[
 RowBox[{"IGBlissAutomorphismCount", "[", "g1", "]"}]], "Input",
 ExpressionUUID -> "498779bd-0341-4949-ad32-f9524ba44753"],

Cell[TextData[{
 "Bliss cannot generate all 48 of these mapping ",
 StyleBox["directly",
  FontSlant->"Italic"],
 ".  We can either use VF2 for this \[Ellipsis]"
}], "Text",
 ExpressionUUID -> "5301391e-b76d-475c-8cdf-224477c5c52d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGVF2FindIsomorphisms", "[", 
   RowBox[{"g1", ",", "g2"}], "]"}], "//", "Length"}]], "Input",
 ExpressionUUID -> "351e74d7-e1de-4d12-b086-118f84e8585c"],

Cell[TextData[{
 "\[Ellipsis] or we can use the automorphism group computed by Bliss.  The ",
 Cell[BoxData[
  RowBox[{"IGBlissAutomorphismGroup", "[", "]"}]],
  ExpressionUUID -> "79b3ee6a-337f-4bf1-a907-252d706cd5ee"],
 " function will return a generating set of permutations."
}], "Text",
 ExpressionUUID -> "0714d669-a049-4252-b0ba-bdf46cd49b21"],

Cell[BoxData[
 RowBox[{"generators", "=", 
  RowBox[{"IGBlissAutomorphismGroup", "[", "g1", "]"}]}]], "Input",
 ExpressionUUID -> "5d0218a6-69a5-45b6-b286-7fdefc6bbd39"],

Cell[TextData[{
 "We can feed this directly to the built-in function ",
 Cell[BoxData[
  RowBox[{"PermutationGroup", "[", "]"}]],
  ExpressionUUID -> "4195cbcf-9d53-4770-842f-90e22e88f84c"]
}], "Text",
 ExpressionUUID -> "9a198537-cbad-4d20-9ed9-0be4dbc9295f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"PermutationGroup", "[", "generators", "]"}], "//", 
  "GroupOrder"}]], "Input",
 ExpressionUUID -> "3aa087c4-8a50-4fa4-838f-e37714c18918"],

Cell["\<\
Ask for all 48 vertex permutations that create isomorphic graphs:\
\>", "Text",
 ExpressionUUID -> "9a932a4e-a127-4fb3-b26d-dc023eba3383"],

Cell[BoxData[
 RowBox[{"perms", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"PermutationList", "[", 
     RowBox[{"#", ",", 
      RowBox[{"VertexCount", "[", "g1", "]"}]}], "]"}], "&"}], "/@", 
   RowBox[{"GroupElements", "@", 
    RowBox[{"PermutationGroup", "[", "generators", "]"}]}]}]}]], "Input",
 ExpressionUUID -> "bb0a7a80-721c-484f-98ac-e24fd685e6b0"],

Cell["\<\
Permuting the adjacency matrix with any of these leaves it invariant.\
\>", "Text",
 ExpressionUUID -> "e90b81d6-c1e7-4287-b3fe-5b6612f88639"],

Cell[BoxData[
 RowBox[{"Equal", "@@", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"AdjacencyMatrix", "[", "g1", "]"}], "[", 
      RowBox[{"[", 
       RowBox[{"#", ",", "#"}], "]"}], "]"}], "&"}], "/@", "perms"}], 
   ")"}]}]], "Input",
 ExpressionUUID -> "8c425de4-93b2-4c4c-b3e2-166976a318fa"],

Cell["\<\
Bliss works by computing a canonical labelling of vertices. Then isomorphism \
can be tested for by comparing the canonically relabelled graphs.\
\>", "Text",
 ExpressionUUID -> "02f27dfc-97b2-4ed1-98ad-b992a9a9c9dd"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGBlissCanonicalGraph", "[", "g1", "]"}], "===", 
  RowBox[{"IGBlissCanonicalGraph", "[", "g2", "]"}]}]], "Input",
 ExpressionUUID -> "a83d88a6-9a84-4a04-ae1b-91ce10522cd7"],

Cell[TextData[{
 Cell[BoxData["IGBlissCanonicalGraph"],
  ExpressionUUID -> "8a28eecc-6278-4f5a-8637-64fb8df82d7d"],
 " returns graphs in a consistent format so that two graphs are isomorphic if \
and only if their canonical graphs will compare equal with ",
 Cell[BoxData["==="],
  ExpressionUUID -> "0148c060-be8f-4b24-9474-4bdf3f9e03a7"],
 ". Note that in Mathematica, graphs may not compare equal "
}], "Text",
 ExpressionUUID -> "a95c8b64-4699-469a-9b56-34956aa04080"],

Cell["The corresponding permutation and labelling are", "Text",
 ExpressionUUID -> "f6cac807-1603-4000-a0cd-edc331d0d100"],

Cell[BoxData[
 RowBox[{"IGBlissCanonicalPermutation", "[", "g1", "]"}]], "Input",
 ExpressionUUID -> "c84b2c0e-6564-4c1c-a061-6cea205436ab"],

Cell[BoxData[
 RowBox[{"IGBlissCanonicalLabeling", "[", "g1", "]"}]], "Input",
 ExpressionUUID -> "0b169b07-bc3e-4423-bef2-e2a35fc546cc"],

Cell["Notice that the canonical labelling is simply", "Text",
 ExpressionUUID -> "941bb6ef-5704-4735-8968-84f4ef1c5d00"],

Cell[BoxData[
 RowBox[{"AssociationThread", "[", 
  RowBox[{
   RowBox[{"VertexList", "[", "g1", "]"}], ",", 
   RowBox[{"IGBlissCanonicalPermutation", "[", "g1", "]"}]}], "]"}]], "Input",
 
 ExpressionUUID -> "72e49e4f-ab55-405f-8fda-f595a110881a"],

Cell[TextData[{
 "Also notice that it is a mapping from ",
 Cell[BoxData["g1"],
  ExpressionUUID -> "1314fa74-83db-490c-8d0a-be0f2e55d8cc"],
 " to ",
 Cell[BoxData[
  RowBox[{"IGBlissCanonicalGraph", "[", "g1", "]"}]],
  ExpressionUUID -> "8db42437-797a-4fd5-a6b2-d2cd6d246994"],
 ":"
}], "Text",
 ExpressionUUID -> "51c03f36-dfcb-4ac5-93f6-d85cda431d5d"],

Cell[BoxData[
 RowBox[{"MemberQ", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IGVF2FindIsomorphisms", "[", 
    RowBox[{"g1", ",", 
     RowBox[{"IGBlissCanonicalGraph", "[", "g1", "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"IGBlissCanonicalLabeling", "[", "g1", "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "df9c8e1c-0ef2-4fd5-af67-c4d420869f8f"],

Cell[TextData[{
 "The canonical graph returned by ",
 Cell[BoxData["IGBlissCanonicalGraph"],
  ExpressionUUID -> "87cbdb90-12b3-465f-b539-d0eb98aadc67"],
 " always has vertices labelled by the integers ",
 Cell[BoxData[
  RowBox[{"1", ",", "2", ",", "\[Ellipsis]"}]],
  ExpressionUUID -> "afa80189-7420-40cb-8aee-6e7b65fccbc6"],
 " It can also be used to filter duplicates from a list of graphs "
}], "Text",
 ExpressionUUID -> "bfe4f085-a373-4ef5-8a6f-4222ff6171d7"],

Cell["\<\
For example, let us generate all possible adjacency matrices of 3-vertex \
simple directed graphs.\
\>", "Text",
 ExpressionUUID -> "c6804d24-d2e6-45d1-962d-193f7d87757e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "fills", " ", "nondiagonal", " ", "entries", " ", "of", " ", "n", " ", 
    "by", " ", "n", " ", "matrix", " ", "from", " ", "vector"}], " ", "*)"}], 
  "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"toMat", "[", 
    RowBox[{"vec_", ",", "n_"}], "]"}], ":=", 
   RowBox[{"SparseArray", "@", 
    RowBox[{"Partition", "[", 
     RowBox[{
      RowBox[{"Flatten", "@", 
       RowBox[{"Riffle", "[", 
        RowBox[{
         RowBox[{"Partition", "[", 
          RowBox[{"vec", ",", "n"}], "]"}], ",", "0", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", 
           RowBox[{"-", "1"}], ",", "2"}], "}"}]}], "]"}]}], ",", "n"}], 
     "]"}]}]}]}]], "Input",
 ExpressionUUID -> "10a3450a-24d9-44fc-b296-426fecad97e4"],

Cell[TextData[{
 "There are ",
 Cell[BoxData[
  RowBox[{
   SuperscriptBox["2", 
    RowBox[{"3", " ", "2"}]], "=", 
   RowBox[{
    SuperscriptBox["2", "6"], "=", "64"}]}]],
  ExpressionUUID -> "0a6edb17-be43-418e-8465-4b1d358a8b47"],
 " such matrices. "
}], "Text",
 ExpressionUUID -> "43e948d5-7a87-45f7-9982-935fbf11f175"],

Cell[BoxData[
 RowBox[{
  RowBox[{"graphs", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"AdjacencyGraph", "[", 
      RowBox[{
       RowBox[{"toMat", "[", 
        RowBox[{"#", ",", "3"}], "]"}], ",", 
       RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}], "&"}], "/@", 
    RowBox[{"IntegerDigits", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Range", "[", 
        RowBox[{"2", "^", "6"}], "]"}], "-", "1"}], ",", "2", ",", "6"}], 
     "]"}]}]}], ";"}]], "Input",
 ExpressionUUID -> "7f1a4f38-f6ab-4b96-bed9-0f3c39d4147e"],

Cell["But only 16 of them correspond to non-isomorphic graphs", "Text",
 ExpressionUUID -> "166f2531-f154-427b-9012-2e27a608f4a1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteDuplicatesBy", "[", 
   RowBox[{"graphs", ",", "IGBlissCanonicalGraph"}], "]"}], "//", 
  "Length"}]], "Input",
 ExpressionUUID -> "d2e0319b-b3e8-4d4c-a652-4ba233191579"],

Cell[TextData[{
 "When ",
 Cell[BoxData["IGBlissCanonicalGraph"],
  ExpressionUUID -> "f4b2a3a4-01ca-4edc-97e0-8b94bbe9a518"],
 " is given a vertex coloured graph, it will encode the colours into a vertex \
property named ",
 Cell[BoxData["\"\<Color\>\""],
  ExpressionUUID -> "685a5cb9-29b8-4611-83c5-defbfce11ec0"],
 ". This allows distinguishing between graphs whose canonical graphs are \
identical in structure, but differ in colouring."
}], "Text",
 ExpressionUUID -> "1c86912e-c0e1-4101-8c1a-ad78c392d4d7"],

Cell["Take for example the following coloured graphs:", "Text",
 ExpressionUUID -> "4503d641-06ca-449d-bb5b-f3bb590c7ab6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
       RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "}"}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GraphStyle", "\[Rule]", "\"\<BasicBlack\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colg1", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Properties", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<color\>\"", "\[Rule]", "1"}], "}"}]}], ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<color\>\"", "\[Rule]", "3"}], "}"}]}], ",", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<color\>\"", "\[Rule]", "2"}], "}"}]}]}], "}"}]}]}], 
    "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"colg2", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Properties", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<color\>\"", "\[Rule]", "1"}], "}"}]}], ",", 
        RowBox[{"2", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<color\>\"", "\[Rule]", "3"}], "}"}]}], ",", 
        RowBox[{"3", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"\"\<color\>\"", "\[Rule]", "1"}], "}"}]}]}], "}"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 ExpressionUUID -> "95ef81d8-f634-446a-a134-f252cd49d705"],

Cell["Visualize them for clarity:", "Text",
 ExpressionUUID -> "c3d52d5b-6cd3-4828-ab18-485ce2b8089c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGVertexMap", "[", 
   RowBox[{
    RowBox[{"ColorData", "[", "97", "]"}], ",", 
    RowBox[{"VertexStyle", "\[Rule]", 
     RowBox[{"IGVertexProp", "[", "\"\<color\>\"", "]"}]}]}], "]"}], "/@", 
  RowBox[{"{", 
   RowBox[{"colg1", ",", "colg2"}], "}"}]}]], "Input",
 ExpressionUUID -> "01c5f210-16f3-4a2d-b49d-79ceeae0c74e"],

Cell["\<\
The vertex and edge lists of their canonical graphs are identical:\
\>", "Text",
 ExpressionUUID -> "9ba9ebcb-11f8-455a-8df6-5f3ffd0355bc"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"cang1", "=", 
   RowBox[{"IGBlissCanonicalGraph", "[", 
    RowBox[{"{", 
     RowBox[{"colg1", ",", 
      RowBox[{"\"\<VertexColors\>\"", "\[Rule]", "\"\<color\>\""}]}], "}"}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"cang2", "=", 
   RowBox[{"IGBlissCanonicalGraph", "[", 
    RowBox[{"{", 
     RowBox[{"colg2", ",", 
      RowBox[{"\"\<VertexColors\>\"", "\[Rule]", "\"\<color\>\""}]}], "}"}], 
    "]"}]}], ";"}]}], "Input",
 ExpressionUUID -> "019786a5-fe32-414a-b760-62b467cd2856"],

Cell[BoxData[{
 RowBox[{"VertexList", "/@", 
  RowBox[{"{", 
   RowBox[{"cang1", ",", "cang2"}], "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"EdgeList", "/@", 
  RowBox[{"{", 
   RowBox[{"cang1", ",", "cang2"}], "}"}]}]}], "Input",
 ExpressionUUID -> "b0798d38-0b6d-48e8-99a3-582dc48aee8f"],

Cell["\<\
But they differ in colouring, and therefore do not compare equal:\
\>", "Text",
 ExpressionUUID -> "d9197c0f-6876-4b4d-80d6-0014f3e5c0aa"],

Cell[BoxData[
 RowBox[{"IGVertexPropertyList", "[", "cang1", "]"}]], "Input",
 ExpressionUUID -> "ca4ff6c5-5f3a-4bc1-a39d-0387e555ae81"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGVertexProp", "[", "\"\<Color\>\"", "]"}], "/@", 
  RowBox[{"{", 
   RowBox[{"cang1", ",", "cang2"}], "}"}]}]], "Input",
 ExpressionUUID -> "0417928f-1076-4b59-98dc-05a0325ca129"],

Cell[BoxData[
 RowBox[{"cang1", "===", "cang2"}]], "Input",
 ExpressionUUID -> "9c34baf7-c468-4017-9ea6-8195fd9d7227"]
}, Closed]],

Cell[CellGroupData[{

Cell["Additional examples", "Subsubsection",
 ExpressionUUID -> "48797576-aea0-45f7-9854-2413c295b9e0"],

Cell["\<\
Let us visualize the vertex equivalence classes induced by a graph\
\[CloseCurlyQuote]s automorphism group.\
\>", "Text",
 ExpressionUUID -> "d470fe00-85ef-4480-97b8-65efab62afbc"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"GraphData", "[", 
      RowBox[{"{", 
       RowBox[{"\"\<Mycielski\>\"", ",", " ", "4"}], "}"}], "]"}]}], "}"}], 
   ",", 
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"GroupOrbits", "@", 
      RowBox[{"PermutationGroup", "@", 
       RowBox[{"IGBlissAutomorphismGroup", "[", "g", "]"}]}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
     RowBox[{"GraphStyle", "\[Rule]", "\"\<BasicBlack\>\""}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "28236d5f-b5e0-4115-8519-775449e0d325"],

Cell["\<\
Visualize the edge equivalence classes of a polyhedron, induced by its graph\
\[CloseCurlyQuote]s automorphism group.\
\>", "Text",
 ExpressionUUID -> "1c6cd318-482f-4fc7-823a-9a38069ea8fb"],

Cell[BoxData[
 RowBox[{"mesh", "=", 
  RowBox[{"PolyhedronData", "[", 
   RowBox[{"\"\<TruncatedOctahedron\>\"", ",", "\"\<Region\>\""}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "7ccf1cfa-b503-4424-912b-47f31d6171d7"],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", "=", 
     RowBox[{"IGMeshGraph", "[", 
      RowBox[{"mesh", ",", 
       RowBox[{"VertexStyle", "\[Rule]", "Black"}]}], "]"}]}], "}"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"g", ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"EdgeList", "[", "g", "]"}], "[", 
        RowBox[{"[", "#", "]"}], "]"}], "&"}], "/@", 
      RowBox[{"GroupOrbits", "@", 
       RowBox[{"PermutationGroup", "@", 
        RowBox[{"IGBlissAutomorphismGroup", "@", 
         RowBox[{"LineGraph", "[", "g", "]"}]}]}]}]}]}], 
    "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "3e6c7cb2-2610-4017-b238-e8cfb9d64465"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["VF2", "Subsection",
 ExpressionUUID -> "49c36198-96ef-4f90-b6be-30831da3c7c8"],

Cell[BoxData[
 RowBox[{"?", "IGVF2*"}]], "Input",
 ExpressionUUID -> "b92173ac-7d82-44c1-b9da-4682b5d885a9"],

Cell[TextData[{
 "VF2 supports vertex coloured and edge coloured graphs. A colour \
specification consists of one of more of the ",
 Cell[BoxData["\"\<VertexColors\>\""],
  ExpressionUUID -> "274a277b-1caa-4e44-ad99-690eee7058c4"],
 " and ",
 Cell[BoxData["\"\<EdgeColors\>\""],
  ExpressionUUID -> "ae0cf130-c5d1-4ea1-a6bc-57e632d37418"],
 " options. Allowed formats for these options are a list of integers, an \
association assigning integers to the vertices/edges, or ",
 Cell[BoxData["None"],
  ExpressionUUID -> "ac6439b4-388b-41b4-8c88-376ab807cbbb"],
 ". When using associations, it is not necessarily to specify a colour for \
each vertex/edge. The omitted ones are assumed to have colour ",
 Cell[BoxData["0"],
  ExpressionUUID -> "72d4bfce-de72-47c4-ab76-f55dea287145"],
 "."
}], "Text",
 ExpressionUUID -> "db518849-c9e8-43b3-bdc2-52032d29413c"],

Cell[CellGroupData[{

Cell["Examples", "Subsubsection",
 ExpressionUUID -> "bc4f59aa-890b-4efe-b60b-11aa21e035ba"],

Cell[TextData[{
 "The following graph has two automorphisms: ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"1", ",", "2"}], "}"}]],
  ExpressionUUID -> "715c8a85-947a-46eb-8cba-16e8afe241b1"],
 " and ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"2", ",", "1"}], "}"}]],
  ExpressionUUID -> "fb8aa546-6b7e-4d63-8641-32c8e997de7e"],
 "."
}], "Text",
 ExpressionUUID -> "75c86397-1fb5-4242-818b-3e48242e2724"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{"{", 
     RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{"IGVF2IsomorphismCount", "[", 
  RowBox[{"g", ",", "g"}], "]"}]}], "Input",
 ExpressionUUID -> "97854f64-66bc-4af7-82fe-06136f3db474"],

Cell[TextData[{
 "If we colour one of the vertices, the permutation ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"2", ",", "1"}], "}"}]],
  ExpressionUUID -> "0d8f662c-f6e0-479a-9017-37c71d6eae5a"],
 " becomes forbidden, so only one automorphism remains."
}], "Text",
 ExpressionUUID -> "45777bf2-7afe-403e-8b21-0dee3fc7a931"],

Cell[BoxData[
 RowBox[{"IGVF2IsomorphismCount", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"g", ",", 
     RowBox[{"\"\<VertexColors\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"g", ",", 
     RowBox[{"\"\<VertexColors\>\"", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]}]}], "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "7813a8be-5ad0-453b-bc3a-3aac8f18ab13"],

Cell["\<\
Multigraphs are not directly supported for isomorphism checking, but we can \
map the multigraph isomorphism problem into an edge-coloured graph \
isomorphism one by designating the multiplicity of each edge as its colour.\
\>", "Text",
 ExpressionUUID -> "a2df0040-4b1d-49fc-be59-30102bf4f65a"],

Cell[BoxData[
 RowBox[{"g1", "=", 
  RowBox[{"EdgeAdd", "[", 
   RowBox[{
    RowBox[{"PathGraph", "[", 
     RowBox[{
      RowBox[{"Range", "[", "5", "]"}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
    RowBox[{"2", "\[UndirectedEdge]", "3"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "3aec297a-8885-4c1d-b2f0-e1815dc9bd2e"],

Cell[BoxData[
 RowBox[{"g2", "=", 
  RowBox[{"EdgeAdd", "[", 
   RowBox[{
    RowBox[{"PathGraph", "[", 
     RowBox[{
      RowBox[{"Range", "[", "5", "]"}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}], ",", 
    RowBox[{"4", "\[UndirectedEdge]", "3"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "9508940d-7921-4e06-b517-882f559d137c"],

Cell[BoxData[
 RowBox[{"IGVF2IsomorphicQ", "[", 
  RowBox[{"g1", ",", "g2"}], "]"}]], "Input",
 ExpressionUUID -> "cb4dc092-ec28-4477-81b3-33ba7cb0b42f"],

Cell[TextData[{
 "Since ",
 Cell[BoxData["g1"],
  ExpressionUUID -> "dedabe33-5287-4991-bd46-481531f8d428"],
 " and ",
 Cell[BoxData["g2"],
  ExpressionUUID -> "f2939457-9948-462b-9d0d-f5161090cb3f"],
 " are undirected, we need to bring their edges into a sorted canonical form \
before counting them. This ensures that ",
 Cell[BoxData[
  RowBox[{"4", "\[UndirectedEdge]", "3"}]],
  ExpressionUUID -> "21c3821d-39c2-46f1-855e-7766e64c7b62"],
 " and ",
 Cell[BoxData[
  RowBox[{"3", "\[UndirectedEdge]", "4"}]],
  ExpressionUUID -> "6a6fcc05-17b9-4b63-aa96-05b7af315a72"],
 " are treated as the same edge."
}], "Text",
 ExpressionUUID -> "e9c3bc5f-94c4-4baa-b3e3-97f159562107"],

Cell[BoxData[
 RowBox[{"colors1", "=", 
  RowBox[{"Counts", "[", 
   RowBox[{"Sort", "/@", 
    RowBox[{"EdgeList", "[", "g1", "]"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "0e0e170c-ad73-4fe7-ba55-ce7f36f1fa8b"],

Cell[BoxData[
 RowBox[{"colors2", "=", 
  RowBox[{"Counts", "[", 
   RowBox[{"Sort", "/@", 
    RowBox[{"EdgeList", "[", "g2", "]"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "a820114c-dce4-43cc-8a00-592540e8f541"],

Cell[BoxData[
 RowBox[{"IGVF2IsomorphicQ", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graph", "@", 
      RowBox[{"Keys", "[", "colors1", "]"}]}], ",", 
     RowBox[{"\"\<EdgeColors\>\"", "\[Rule]", "colors1"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Graph", "@", 
      RowBox[{"Keys", "[", "colors2", "]"}]}], ",", 
     RowBox[{"\"\<EdgeColors\>\"", "\[Rule]", "colors2"}]}], "}"}]}], 
  "]"}]], "Input",
 ExpressionUUID -> "9961eb1f-b027-4eb2-b65f-1fe067fc78af"],

Cell[TextData[{
 Cell[BoxData["IGIsomorphicQ"],
  ExpressionUUID -> "f3b01436-935b-4a4c-9358-75fc6f4ad70a"],
 " and ",
 Cell[BoxData["IGSubisomorphicQ"],
  ExpressionUUID -> "3c2d1cfb-5ba9-4eeb-b390-755eb0f3f4e5"],
 " check multigraph isomorphism in a similar way, based on edge colouring."
}], "Text",
 ExpressionUUID -> "3849ca25-3497-4786-9380-fbe8814428d5"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["LAD", "Subsection",
 ExpressionUUID -> "d18bc4d4-7a91-4c45-8218-6e6567afa156"],

Cell[TextData[{
 "See ",
 ButtonBox["http://liris.cnrs.fr/csolnon/LAD.html",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://liris.cnrs.fr/csolnon/LAD.html"], None},
  ButtonNote->"http://liris.cnrs.fr/csolnon/LAD.html"],
 " and ",
 ButtonBox["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470934622128",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/c/doc/igraph-Isomorphism.html#idm470934622128"], 
    None},
  ButtonNote->
   "http://igraph.org/c/doc/igraph-Isomorphism.html#idm470934622128"]
}], "Text",
 ExpressionUUID -> "f224e2d2-ebd3-447e-a77e-68b161c5fb3b"],

Cell[BoxData[
 RowBox[{"?", "IGLAD*"}]], "Input",
 ExpressionUUID -> "a591c284-dd03-4182-a328-415ede5216ad"],

Cell[TextData[{
 "With the ",
 Cell[BoxData[
  RowBox[{"\"\<Induced\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "805011cf-5d35-40fa-a295-fa44111dfe52"],
 " option LAD will search for induced subgraphs."
}], "Text",
 ExpressionUUID -> "7bbcc2b6-9987-4619-85d9-faaa7701a348"],

Cell[BoxData[
 RowBox[{"IGLADSubisomorphicQ", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Tiny], ",", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> "CircularEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.4999999999999994}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.020399597244776385`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Tiny]}], "]"}]], "Input",
 ExpressionUUID -> "36420d8d-5df0-4094-bed3-6df52943d2d2"],

Cell[BoxData[
 RowBox[{"IGLADSubisomorphicQ", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Tiny], ",", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, 
         SparseArray[
         Automatic, {3, 3}, 0, {
          1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
        GraphLayout -> "CircularEmbedding"}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-0.8660254037844384, -0.4999999999999994}, {
         0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
         1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.020399597244776385`]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.020399597244776385`]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.020399597244776385`], 
           DiskBox[2, 0.020399597244776385`], 
           DiskBox[3, 0.020399597244776385`]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Tiny], ",", 
   RowBox[{"\"\<Induced\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "07db529c-0e0b-4471-bf8f-6d8e6bb067c9"],

Cell[BoxData[
 RowBox[{"IGLADSubisomorphicQ", "[", 
  RowBox[{
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
         2.4492935982947064`*^-16}, {2., 0.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Tiny], ",", " ", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3, 4}, {Null, 
         SparseArray[
         Automatic, {4, 4}, 0, {
          1, {{0, 3, 5, 8, 10}, {{2}, {3}, {4}, {1}, {3}, {1}, {2}, {4}, {
            3}, {1}}}, Pattern}]}, {
        GraphLayout -> "CircularEmbedding", GridLinesStyle -> Directive[
           GrayLevel[0.5, 0.4]]}]]}, 
      TagBox[
       GraphicsGroupBox[
        GraphicsComplexBox[{{-1., 1.0106430996148606`*^-15}, {
         6.049014748177263*^-16, -1.}, {
         1., -1.133107779529596*^-15}, {-7.044813998280222*^-16, 1.}}, {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
           {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{1, 3}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{1, 4}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}, 
           {Arrowheads[0.], ArrowBox[{3, 4}, 0.02261146496815286]}}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
           DiskBox[3, 0.02261146496815286], 
           DiskBox[4, 0.02261146496815286]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FrameTicks->None,
    GridLinesStyle->Directive[
      GrayLevel[0.5, 0.4]],
    ImageSize->Tiny], ",", 
   RowBox[{"\"\<Induced\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "4f29e4e3-0ca2-4aaa-af9b-5806e0cf4edf"],

Cell["Highlight subgraphs in a grid graph.", "Text",
 ExpressionUUID -> "71da37af-772e-46b3-871c-3e66ffa6c50c"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"GridGraph", "[", 
    RowBox[{"{", 
     RowBox[{"3", ",", "3"}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"Subgraph", "[", 
      RowBox[{"g", ",", "#"}], "]"}], ",", 
     RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<Thick\>\""}]}], "]"}], 
   "&"}], "/@", 
  RowBox[{"Union", "[", 
   RowBox[{
    RowBox[{"Sort", "@*", "Values"}], "/@", 
    RowBox[{"IGLADFindSubisomorphisms", "[", 
     RowBox[{
      RowBox[{"GridGraph", "[", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2"}], "}"}], "]"}], ",", "g"}], "]"}]}], 
   "]"}]}]}], "Input",
 ExpressionUUID -> "a9720685-1deb-457d-ba30-88cd3e825c3e"]
}, Closed]],

Cell[CellGroupData[{

Cell["Coloured graphs", "Subsection",
 ExpressionUUID -> "f045b34b-b47c-4ce1-81ea-e185ec5f49bd"],

Cell[TextData[{
 "All three included isomorphism algorithms support vertex coloured graphs, \
and VF2 supports edge coloured graphs as well. A coloured graph is specified \
as ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"g", ",", " ", 
    RowBox[{"\"\<VertexColors\>\"", "\[Rule]", "\[Ellipsis]"}], ",", 
    RowBox[{"\"\<EdgeColors\>\"", "\[Rule]", "\[Ellipsis]"}]}], "}"}]],
  ExpressionUUID -> "487d76bd-268b-4deb-8373-89b469aaa82c"],
 ", where both vertex and edge colour specifications are optional. Colours \
are represented by integers and may be specified in one of the following ways:"
}], "Text",
 ExpressionUUID -> "8d2f7ece-aafa-4c36-9e55-d54975664655"],

Cell[CellGroupData[{

Cell[TextData[{
 "A list of integers, given in the same order as ",
 Cell[BoxData[
  RowBox[{"VertexList", "[", "g", "]"}]],
  ExpressionUUID -> "5ba7c10c-692f-42f2-9a7e-654014883d15"],
 " (or ",
 Cell[BoxData[
  RowBox[{"EdgeList", "[", "g", "]"}]],
  ExpressionUUID -> "38b9af16-6773-4fd8-8f0f-065f9c64f96e"],
 " if specifying edge colours)."
}], "Item",
 ExpressionUUID -> "89b9a3f0-9f95-4254-87c5-f9bfbb7254e3"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", "\[UndirectedEdge]", "b"}], "}"}]}], "]"}], ",", 
    RowBox[{"\"\<VertexColors\>\"", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]}]}], "}"}]],
  ExpressionUUID -> "885815b2-984a-49f7-81cd-2d8ddae7a8cb"],
 "."
}], "ItemParagraph",
 ExpressionUUID -> "6e969ba4-2017-4e20-9a81-6d239ddbdefe"],

Cell[TextData[{
 "An association assigning integers to vertices (or edges). Vertices (or \
edges) not present in the association are assumed to have colour ",
 Cell[BoxData["0"],
  ExpressionUUID -> "18d521a0-f7b4-4798-a6b6-6ec3648a4af8"],
 "."
}], "Item",
 ExpressionUUID -> "da4377a7-fecc-4754-9413-83e5fac99862"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Graph", "[", 
     RowBox[{"{", 
      RowBox[{"a", "\[UndirectedEdge]", "b"}], "}"}], "]"}], ",", 
    RowBox[{"\"\<VertexColors\>\"", "\[Rule]", 
     RowBox[{"\[LeftAssociation]", 
      RowBox[{
       RowBox[{"a", "\[Rule]", "1"}], ",", 
       RowBox[{"b", "\[Rule]", "2"}]}], "\[RightAssociation]"}]}]}], "}"}]],
  ExpressionUUID -> "1723233b-aa4a-4287-bacc-e45d43e0a7d4"],
 "."
}], "ItemParagraph",
 ExpressionUUID -> "53758c03-b1c3-42a1-b4c5-cb181ea7fc78"],

Cell[TextData[{
 "The name of a a vertex (or edge) property. Vertices (or edges) without an \
assigned property value are assumed to have colour ",
 Cell[BoxData["0"],
  ExpressionUUID -> "099280b7-fb7d-4d47-b031-0c8eede50383"],
 ". "
}], "Item",
 ExpressionUUID -> "5d49306c-b381-4367-b6eb-168ef0a10c2e"],

Cell[TextData[Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Property", "[", 
        RowBox[{"a", ",", 
         RowBox[{"\"\<color\>\"", "\[Rule]", "1"}]}], "]"}], ",", 
       RowBox[{"Property", "[", 
        RowBox[{"b", ",", 
         RowBox[{"\"\<color\>\"", "\[Rule]", "2"}]}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"a", "\[UndirectedEdge]", "b"}], "}"}]}], "]"}], ",", 
   RowBox[{"\"\<VertexColors\>\"", "\[Rule]", "\"\<color\>\""}]}], "}"}]],
 ExpressionUUID -> "25424014-2071-4399-a02f-55f067c6f62b"]], "ItemParagraph",
 ExpressionUUID -> "08227a3e-0a35-45a4-a1d6-529aab0d85ff"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<VertexColors\>\"", "\[Rule]", "None"}]],
  ExpressionUUID -> "6f7d6488-7364-436f-93ed-1e7da5037694"],
 " indicates no colouring."
}], "Item",
 ExpressionUUID -> "392e1681-4d96-45f7-b3e7-dbee51ccd029"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Example. ",
  FontWeight->"Bold"],
 "Define a graph along with the colours of its vertices."
}], "Text",
 ExpressionUUID -> "83022294-78e8-45e0-b8e9-df3a2e22acef"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"CycleGraph", "[", "4", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vcols", "=", 
   RowBox[{"\[LeftAssociation]", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"1", "\[Rule]", "1"}], ",", 
     RowBox[{"2", "\[Rule]", "1"}], ",", "\[IndentingNewLine]", 
     RowBox[{"3", "\[Rule]", "2"}], ",", 
     RowBox[{"4", "\[Rule]", "2"}]}], "\[IndentingNewLine]", 
    "\[RightAssociation]"}]}], ";"}]}], "Input",
 ExpressionUUID -> "5d0f53c5-234b-4f47-8166-f86ab246c6da"],

Cell["Visualize it.", "Text",
 ExpressionUUID -> "84c1b297-7c48-4b39-94ad-af426cc7bbce"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"g", ",", "\[IndentingNewLine]", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"Normal", "[", 
     RowBox[{
      RowBox[{"ColorData", "[", "24", "]"}], "/@", "vcols"}], "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{"\"\<Name\>\"", ",", "Center"}], "]"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "7217ab43-2f4d-4333-86a3-3f9f104bbd38"],

Cell["\<\
Compute its automorphism group, taking vertex colours into account.\
\>", "Text",
 ExpressionUUID -> "bbe3852e-ebfb-4a45-a5bb-50018ed40dcc"],

Cell[BoxData[
 RowBox[{"IGBlissAutomorphismGroup", "[", 
  RowBox[{"{", 
   RowBox[{"g", ",", 
    RowBox[{"\"\<VertexColors\>\"", "\[Rule]", "vcols"}]}], "}"}], 
  "]"}]], "Input",
 ExpressionUUID -> "d64cd80d-fa49-4e11-99ac-0026cd505b66"]
}, Closed]],

Cell[CellGroupData[{

Cell["Edge and vertex transitivity", "Subsection",
 ExpressionUUID -> "79711ed1-25f1-4dd1-bee5-9d2754ff54e0"],

Cell[CellGroupData[{

Cell["IGVertexTransitiveQ", "Subsubsection",
 ExpressionUUID -> "7b32e271-78c8-4568-9380-e5f5a0002573"],

Cell[BoxData[
 RowBox[{"?", "IGVertexTransitiveQ"}]], "Input",
 ExpressionUUID -> "c93eb1f1-ec96-4012-88eb-1a1fba2078ec"],

Cell[BoxData[
 RowBox[{"IGVertexTransitiveQ", "[", 
  Graphics3DBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4, 5, 6}, {
       Null, {{1, 2}, {2, 3}, {3, 1}, {4, 5}, {5, 6}, {6, 4}, {1, 4}, {2, 
        5}, {3, 6}}}, {GraphLayout -> {"Dimension" -> 3}}]]}, 
     TagBox[
      GraphicsGroup3DBox[
       GraphicsComplex3DBox[{{1.0869615340607288`, 0.7811654957389979, 
        0.9508116723640363}, {1.0898598511506954`, 0.8669288298090742, 
        0.002203878342136756}, {1.0914900405521404`, 0.0013890239809158933`, 
        0.40228439998755583`}, {0., 0.7790672571899876, 0.9498507250481623}, {
        0.0019660079632800587`, 0.8648196171161563, 0.}, {
        0.003835095936344013, 0., 0.40066402089054426`}}, {
         {Hue[0.6, 0.2, 0.8], 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0869615340607288`, 0.7811654957389979, 
            0.9508116723640363}, {1.0898598511506954`, 0.8669288298090742, 
            0.002203878342136756}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0869615340607288`, 0.7811654957389979, 
            0.9508116723640363}, {1.0914900405521404`, 0.0013890239809158933`,
             0.40228439998755583`}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0869615340607288`, 0.7811654957389979, 
            0.9508116723640363}, {0., 0.7790672571899876, 
            0.9498507250481623}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0898598511506954`, 0.8669288298090742, 
            0.002203878342136756}, {1.0914900405521404`, 
            0.0013890239809158933`, 0.40228439998755583`}}}], 
            0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0898598511506954`, 0.8669288298090742, 
            0.002203878342136756}, {0.0019660079632800587`, 
            0.8648196171161563, 0.}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0914900405521404`, 0.0013890239809158933`, 
            0.40228439998755583`}, {0.003835095936344013, 0., 
            0.40066402089054426`}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{0., 0.7790672571899876, 
            0.9498507250481623}, {0.0019660079632800587`, 0.8648196171161563, 
            0.}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{0., 0.7790672571899876, 
            0.9498507250481623}, {0.003835095936344013, 0., 
            0.40066402089054426`}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{0.0019660079632800587`, 0.8648196171161563, 
            0.}, {0.003835095936344013, 0., 0.40066402089054426`}}}], 
            0.029574235656201153`]}}, 
         {Hue[0.6, 0.6, 1], SphereBox[1, 0.029574235656201153`], 
          SphereBox[2, 0.029574235656201153`], 
          SphereBox[3, 0.029574235656201153`], 
          SphereBox[4, 0.029574235656201153`], 
          SphereBox[5, 0.029574235656201153`], 
          SphereBox[6, 0.029574235656201153`]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   Boxed->False,
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   ImageSize->{159.1785475064865, 164.},
   Lighting->Dynamic[
     FEPrivate`If[
      FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Windows"], {{"Directional", 
        GrayLevel[0.7], 
        ImageScaled[{1, 1, 0}]}, {"Point", 
        GrayLevel[0.9], 
        ImageScaled[{0, 0, 3.5}], {0, 0, 0.07}}}, {{"Directional", 
        GrayLevel[0.7], 
        ImageScaled[{1, 1, 0}]}, {"Point", 
        GrayLevel[0.9], 
        ImageScaled[{0, 0, 0}], {0, 0, 0.07}}}]],
   ViewPoint->{1.6054375543825434`, -0.9097573583241039, -2.8363553740589955`},
   ViewVertical->{
    0.9870603011882955, -0.146593327504995, -0.12371554044216537`}], 
  "]"}]], "Input",
 ExpressionUUID -> "970b0cf9-d768-469f-a867-894818ee9e56"],

Cell[BoxData[
 RowBox[{"IGVertexTransitiveQ", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
     TagBox[
      GraphicsGroupBox[
       GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
        2.4492935982947064`*^-16}, {2., 0.}}, {
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
          {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
          {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
          DiskBox[3, 0.02261146496815286]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None], "]"}]], "Input",
 ExpressionUUID -> "9ce90dda-2526-421b-b7d7-acf16358dd9b"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGEdgeTransitiveQ", "Subsubsection",
 ExpressionUUID -> "cd3b57ef-aad4-4eae-8d76-1b9a85e49fa2"],

Cell[BoxData[
 RowBox[{"?", "IGEdgeTransitiveQ"}]], "Input",
 ExpressionUUID -> "5ce596be-5633-4d75-8065-f3bf6714ce9e"],

Cell[BoxData[
 RowBox[{"IGEdgeTransitiveQ", "[", 
  Graphics3DBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3, 4, 5, 6}, {
       Null, {{1, 2}, {2, 3}, {3, 1}, {4, 5}, {5, 6}, {6, 4}, {1, 4}, {2, 
        5}, {3, 6}}}, {GraphLayout -> {"Dimension" -> 3}}]]}, 
     TagBox[
      GraphicsGroup3DBox[
       GraphicsComplex3DBox[{{1.0869615340607288`, 0.7811654957389979, 
        0.9508116723640363}, {1.0898598511506954`, 0.8669288298090742, 
        0.002203878342136756}, {1.0914900405521404`, 0.0013890239809158933`, 
        0.40228439998755583`}, {0., 0.7790672571899876, 0.9498507250481623}, {
        0.0019660079632800587`, 0.8648196171161563, 0.}, {
        0.003835095936344013, 0., 0.40066402089054426`}}, {
         {Hue[0.6, 0.2, 0.8], 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0869615340607288`, 0.7811654957389979, 
            0.9508116723640363}, {1.0898598511506954`, 0.8669288298090742, 
            0.002203878342136756}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0869615340607288`, 0.7811654957389979, 
            0.9508116723640363}, {1.0914900405521404`, 0.0013890239809158933`,
             0.40228439998755583`}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0869615340607288`, 0.7811654957389979, 
            0.9508116723640363}, {0., 0.7790672571899876, 
            0.9498507250481623}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0898598511506954`, 0.8669288298090742, 
            0.002203878342136756}, {1.0914900405521404`, 
            0.0013890239809158933`, 0.40228439998755583`}}}], 
            0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0898598511506954`, 0.8669288298090742, 
            0.002203878342136756}, {0.0019660079632800587`, 
            0.8648196171161563, 0.}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{1.0914900405521404`, 0.0013890239809158933`, 
            0.40228439998755583`}, {0.003835095936344013, 0., 
            0.40066402089054426`}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{0., 0.7790672571899876, 
            0.9498507250481623}, {0.0019660079632800587`, 0.8648196171161563, 
            0.}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{0., 0.7790672571899876, 
            0.9498507250481623}, {0.003835095936344013, 0., 
            0.40066402089054426`}}}], 0.029574235656201153`]}, 
          {Arrowheads[0.], 
           Arrow3DBox[TubeBox[{{{0.0019660079632800587`, 0.8648196171161563, 
            0.}, {0.003835095936344013, 0., 0.40066402089054426`}}}], 
            0.029574235656201153`]}}, 
         {Hue[0.6, 0.6, 1], SphereBox[1, 0.029574235656201153`], 
          SphereBox[2, 0.029574235656201153`], 
          SphereBox[3, 0.029574235656201153`], 
          SphereBox[4, 0.029574235656201153`], 
          SphereBox[5, 0.029574235656201153`], 
          SphereBox[6, 0.029574235656201153`]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   Boxed->False,
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   ImageSize->{159.1785475064865, 164.},
   Lighting->Dynamic[
     FEPrivate`If[
      FEPrivate`SameQ[FEPrivate`$OperatingSystem, "Windows"], {{"Directional", 
        GrayLevel[0.7], 
        ImageScaled[{1, 1, 0}]}, {"Point", 
        GrayLevel[0.9], 
        ImageScaled[{0, 0, 3.5}], {0, 0, 0.07}}}, {{"Directional", 
        GrayLevel[0.7], 
        ImageScaled[{1, 1, 0}]}, {"Point", 
        GrayLevel[0.9], 
        ImageScaled[{0, 0, 0}], {0, 0, 0.07}}}]],
   ViewPoint->{1.6054375543825434`, -0.9097573583241039, -2.8363553740589955`},
   ViewVertical->{
    0.9870603011882955, -0.146593327504995, -0.12371554044216537`}], 
  "]"}]], "Input",
 ExpressionUUID -> "fc568f25-eecc-4f44-8e4a-4b0dd2acf790"],

Cell[BoxData[
 RowBox[{"IGEdgeTransitiveQ", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3}, {Null, {{1, 2}, {2, 3}}}]]}, 
     TagBox[
      GraphicsGroupBox[
       GraphicsComplexBox[{{0., 3.6739403974420594`*^-16}, {1., 
        2.4492935982947064`*^-16}, {2., 0.}}, {
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
          {Arrowheads[0.], ArrowBox[{1, 2}, 0.02261146496815286]}, 
          {Arrowheads[0.], ArrowBox[{2, 3}, 0.02261146496815286]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          DiskBox[1, 0.02261146496815286], DiskBox[2, 0.02261146496815286], 
          DiskBox[3, 0.02261146496815286]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None], "]"}]], "Input",
 ExpressionUUID -> "0694fcef-86ba-429b-9fab-15289a382511"],

Cell["\<\
The Folkman graph is not vertex transitive but it is edge transitive.\
\>", "Text",
 ExpressionUUID -> "0fa1eeda-d359-4a74-9334-5e714f2bdf71"],

Cell[BoxData[
 RowBox[{"Through", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"IGVertexTransitiveQ", ",", "IGEdgeTransitiveQ"}], "}"}], "@", 
   RowBox[{"GraphData", "[", "\"\<FolkmanGraph\>\"", "]"}]}], "]"}]], "Input",
 
 ExpressionUUID -> "c0a6f1f4-6683-40e5-aeca-d27ab3d4aa42"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGSymmetricQ", "Subsubsection",
 ExpressionUUID -> "a523d1a8-0391-401b-b0d6-93ef8600d3d0"],

Cell[BoxData[
 RowBox[{"?", "IGSymmetricQ"}]], "Input",
 ExpressionUUID -> "941c40d8-78d4-489c-af18-e5ee8977a179"],

Cell[BoxData[
 RowBox[{"IGSymmetricQ", "[", 
  RowBox[{"GraphData", "[", "\"\<DodecahedralGraph\>\"", "]"}], 
  "]"}]], "Input",
 ExpressionUUID -> "93527d18-6b80-4eef-92ee-7ead962ab1ad"],

Cell["Make a table of symmetric graphs up to size 7:", "Text",
 ExpressionUUID -> "f14c6a0c-66c0-4fa8-93da-c359c8d5991c"],

Cell[BoxData[
 RowBox[{"Grid", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Graph", "[", 
        RowBox[{"#", ",", 
         RowBox[{"ImageSize", "\[Rule]", "50"}], ",", 
         RowBox[{"PlotTheme", "\[Rule]", "\"\<Business\>\""}]}], "]"}], "&"}],
       "/@", 
      RowBox[{"Select", "[", 
       RowBox[{
        RowBox[{"GraphData", "/@", 
         RowBox[{"GraphData", "[", "k", "]"}]}], ",", "IGSymmetricQ"}], 
       "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "7"}], "}"}]}], "\[IndentingNewLine]", 
    "]"}], ",", 
   RowBox[{"Frame", "\[Rule]", "All"}], ",", 
   RowBox[{"ItemSize", "\[Rule]", "All"}]}], "]"}]], "Input",
 ExpressionUUID -> "ea4e6295-fe16-4400-aaf3-56a4ad3e7fb7"]
}, Closed]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Maximum flow and connectivity", "Section",
 ExpressionUUID -> "0b190476-19cd-4672-980b-9408a1bb1330"],

Cell[CellGroupData[{

Cell["Cohesive blocks", "Subsection",
 ExpressionUUID -> "749612d1-1d4e-45fd-aa81-f377d962e463"],

Cell[TextData[{
 "The following examples are based on the ones ",
 ButtonBox["in the R/igraph documentation",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://igraph.org/r/doc/cohesive_blocks.html"], None},
  ButtonNote->"http://igraph.org/r/doc/cohesive_blocks.html"],
 "."
}], "Text",
 ExpressionUUID -> "35c28e10-0ecf-4124-b128-24bfba50255a"],

Cell["\<\
This is the network from the Moody-White paper:

J. Moody and D. R. White. Structural cohesion and embeddedness: A \
hierarchical concept of social groups. American Sociological Review, \
68(1):103\[Dash]127, Feb 2003.\
\>", "Text",
 ExpressionUUID -> "1e4c02e1-254a-4808-a67a-a64d5c6b06db"],

Cell[BoxData[
 RowBox[{
  RowBox[{"mw", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<2\>\""}], ",", 
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<3\>\""}], ",", 
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<4\>\""}], ",", 
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<5\>\""}], ",", 
       RowBox[{"\"\<1\>\"", "\[UndirectedEdge]", "\"\<6\>\""}], ",", 
       RowBox[{"\"\<2\>\"", "\[UndirectedEdge]", "\"\<3\>\""}], ",", 
       RowBox[{"\"\<2\>\"", "\[UndirectedEdge]", "\"\<4\>\""}], ",", 
       RowBox[{"\"\<2\>\"", "\[UndirectedEdge]", "\"\<5\>\""}], ",", 
       RowBox[{"\"\<2\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<3\>\"", "\[UndirectedEdge]", "\"\<4\>\""}], ",", 
       RowBox[{"\"\<3\>\"", "\[UndirectedEdge]", "\"\<6\>\""}], ",", 
       RowBox[{"\"\<3\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<4\>\"", "\[UndirectedEdge]", "\"\<5\>\""}], ",", 
       RowBox[{"\"\<4\>\"", "\[UndirectedEdge]", "\"\<6\>\""}], ",", 
       RowBox[{"\"\<4\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<5\>\"", "\[UndirectedEdge]", "\"\<6\>\""}], ",", 
       RowBox[{"\"\<5\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<5\>\"", "\[UndirectedEdge]", "\"\<21\>\""}], ",", 
       RowBox[{"\"\<6\>\"", "\[UndirectedEdge]", "\"\<7\>\""}], ",", 
       RowBox[{"\"\<7\>\"", "\[UndirectedEdge]", "\"\<8\>\""}], ",", 
       RowBox[{"\"\<7\>\"", "\[UndirectedEdge]", "\"\<11\>\""}], ",", 
       RowBox[{"\"\<7\>\"", "\[UndirectedEdge]", "\"\<14\>\""}], ",", 
       RowBox[{"\"\<7\>\"", "\[UndirectedEdge]", "\"\<19\>\""}], ",", 
       RowBox[{"\"\<8\>\"", "\[UndirectedEdge]", "\"\<9\>\""}], ",", 
       RowBox[{"\"\<8\>\"", "\[UndirectedEdge]", "\"\<11\>\""}], ",", 
       RowBox[{"\"\<8\>\"", "\[UndirectedEdge]", "\"\<14\>\""}], ",", 
       RowBox[{"\"\<9\>\"", "\[UndirectedEdge]", "\"\<10\>\""}], ",", 
       RowBox[{"\"\<10\>\"", "\[UndirectedEdge]", "\"\<12\>\""}], ",", 
       RowBox[{"\"\<10\>\"", "\[UndirectedEdge]", "\"\<13\>\""}], ",", 
       RowBox[{"\"\<11\>\"", "\[UndirectedEdge]", "\"\<12\>\""}], ",", 
       RowBox[{"\"\<11\>\"", "\[UndirectedEdge]", "\"\<14\>\""}], ",", 
       RowBox[{"\"\<12\>\"", "\[UndirectedEdge]", "\"\<16\>\""}], ",", 
       RowBox[{"\"\<13\>\"", "\[UndirectedEdge]", "\"\<16\>\""}], ",", 
       RowBox[{"\"\<14\>\"", "\[UndirectedEdge]", "\"\<15\>\""}], ",", 
       RowBox[{"\"\<15\>\"", "\[UndirectedEdge]", "\"\<16\>\""}], ",", 
       RowBox[{"\"\<17\>\"", "\[UndirectedEdge]", "\"\<18\>\""}], ",", 
       RowBox[{"\"\<17\>\"", "\[UndirectedEdge]", "\"\<19\>\""}], ",", 
       RowBox[{"\"\<17\>\"", "\[UndirectedEdge]", "\"\<20\>\""}], ",", 
       RowBox[{"\"\<18\>\"", "\[UndirectedEdge]", "\"\<20\>\""}], ",", 
       RowBox[{"\"\<18\>\"", "\[UndirectedEdge]", "\"\<21\>\""}], ",", 
       RowBox[{"\"\<19\>\"", "\[UndirectedEdge]", "\"\<20\>\""}], ",", 
       RowBox[{"\"\<19\>\"", "\[UndirectedEdge]", "\"\<22\>\""}], ",", 
       RowBox[{"\"\<19\>\"", "\[UndirectedEdge]", "\"\<23\>\""}], ",", 
       RowBox[{"\"\<20\>\"", "\[UndirectedEdge]", "\"\<21\>\""}], ",", 
       RowBox[{"\"\<21\>\"", "\[UndirectedEdge]", "\"\<22\>\""}], ",", 
       RowBox[{"\"\<21\>\"", "\[UndirectedEdge]", "\"\<23\>\""}], ",", 
       RowBox[{"\"\<22\>\"", "\[UndirectedEdge]", "\"\<23\>\""}]}], "}"}], 
     ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 ExpressionUUID -> "d3db889a-9c0b-47e4-ad6d-129912cc0182"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"blocks", ",", "cohesion"}], "}"}], "=", 
  RowBox[{"IGCohesiveBlocks", "[", "mw", "]"}]}]], "Input",
 ExpressionUUID -> "a7f5aef6-dd66-437c-8ca5-31a4baa2fcd4"],

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", 
  RowBox[{"mw", ",", 
   RowBox[{"Rest", "@", "blocks"}], ",", 
   RowBox[{"CommunityRegionStyle", "\[Rule]", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"Opacity", "[", "0.5", "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "96", "]"}], "[", "i", "]"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"i", ",", 
        RowBox[{
         RowBox[{"Length", "[", "blocks", "]"}], "-", "1"}]}], "}"}]}], 
     "]"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "366e9ee0-74fd-44f1-901f-a0ada66b0d9e"],

Cell[BoxData["cohesion"], "Input",
 ExpressionUUID -> "ac22a0a8-35e6-4d40-9d21-ad28eae8cb0d"],

Cell["Science camp network:", "Text",
 ExpressionUUID -> "16bdfe71-763f-4315-be54-cd124ee2408a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"sc", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Pauline\>\"", "\[UndirectedEdge]", "\"\<Jennie\>\""}], 
       ",", 
       RowBox[{"\"\<Pauline\>\"", "\[UndirectedEdge]", "\"\<Ann\>\""}], ",", 
       RowBox[{"\"\<Jennie\>\"", "\[UndirectedEdge]", "\"\<Ann\>\""}], ",", 
       RowBox[{"\"\<Jennie\>\"", "\[UndirectedEdge]", "\"\<Michael\>\""}], 
       ",", 
       RowBox[{"\"\<Michael\>\"", "\[UndirectedEdge]", "\"\<Ann\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Jennie\>\""}], ",", 
       
       RowBox[{"\"\<Jennie\>\"", "\[UndirectedEdge]", "\"\<Lee\>\""}], ",", 
       RowBox[{"\"\<Michael\>\"", "\[UndirectedEdge]", "\"\<Lee\>\""}], ",", 
       RowBox[{"\"\<Harry\>\"", "\[UndirectedEdge]", "\"\<Bert\>\""}], ",", 
       RowBox[{"\"\<Harry\>\"", "\[UndirectedEdge]", "\"\<Don\>\""}], ",", 
       RowBox[{"\"\<Don\>\"", "\[UndirectedEdge]", "\"\<Bert\>\""}], ",", 
       RowBox[{"\"\<Gery\>\"", "\[UndirectedEdge]", "\"\<Russ\>\""}], ",", 
       RowBox[{"\"\<Russ\>\"", "\[UndirectedEdge]", "\"\<Bert\>\""}], ",", 
       RowBox[{"\"\<Michael\>\"", "\[UndirectedEdge]", "\"\<John\>\""}], ",", 
       
       RowBox[{"\"\<Gery\>\"", "\[UndirectedEdge]", "\"\<John\>\""}], ",", 
       RowBox[{"\"\<Russ\>\"", "\[UndirectedEdge]", "\"\<John\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Pam\>\""}], ",", 
       RowBox[{"\"\<Pam\>\"", "\[UndirectedEdge]", "\"\<Carol\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Carol\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Bill\>\""}], ",", 
       RowBox[{"\"\<Bill\>\"", "\[UndirectedEdge]", "\"\<Pauline\>\""}], ",", 
       
       RowBox[{"\"\<Bill\>\"", "\[UndirectedEdge]", "\"\<Michael\>\""}], ",", 
       
       RowBox[{"\"\<Bill\>\"", "\[UndirectedEdge]", "\"\<Lee\>\""}], ",", 
       RowBox[{"\"\<Harry\>\"", "\[UndirectedEdge]", "\"\<Steve\>\""}], ",", 
       RowBox[{"\"\<Steve\>\"", "\[UndirectedEdge]", "\"\<Don\>\""}], ",", 
       RowBox[{"\"\<Steve\>\"", "\[UndirectedEdge]", "\"\<Bert\>\""}], ",", 
       RowBox[{"\"\<Gery\>\"", "\[UndirectedEdge]", "\"\<Steve\>\""}], ",", 
       RowBox[{"\"\<Russ\>\"", "\[UndirectedEdge]", "\"\<Steve\>\""}], ",", 
       RowBox[{"\"\<Pam\>\"", "\[UndirectedEdge]", "\"\<Brazey\>\""}], ",", 
       RowBox[{"\"\<Brazey\>\"", "\[UndirectedEdge]", "\"\<Carol\>\""}], ",", 
       
       RowBox[{"\"\<Pam\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}], ",", 
       RowBox[{"\"\<Brazey\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}], ",", 
       RowBox[{"\"\<Carol\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}], ",", 
       RowBox[{"\"\<Holly\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}], ",", 
       RowBox[{"\"\<Gery\>\"", "\[UndirectedEdge]", "\"\<Pat\>\""}]}], "}"}], 
     ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
  ";"}]], "Input",
 ExpressionUUID -> "5b7b8b67-2690-4aad-823e-93ae63347f15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"blocks", ",", "cohesion"}], "}"}], "=", 
  RowBox[{"IGCohesiveBlocks", "[", "sc", "]"}]}]], "Input",
 ExpressionUUID -> "8a3e7e12-4e1a-4bab-b21e-514d2cddd8b4"],

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", 
  RowBox[{"sc", ",", 
   RowBox[{"Rest", "@", "blocks"}], ",", 
   RowBox[{"CommunityRegionStyle", "\[Rule]", 
    RowBox[{"ColorData", "[", "96", "]"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]], "Input",
 ExpressionUUID -> "6034ace6-37f8-4ca7-b073-e11116107fd9"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cliques and independent vertex sets", "Section",
 ExpressionUUID -> "16b0bdb7-4f87-4da4-b22b-de80d3b848a1"],

Cell[BoxData[
 RowBox[{"?", "IG*Clique*"}]], "Input",
 ExpressionUUID -> "6dd4c876-058f-478d-b99e-91d50fe50e59"],

Cell[CellGroupData[{

Cell["Counting cliques", "Subsubsection",
 ExpressionUUID -> "0b60d56e-9dd3-402b-90c5-7d690798509e"],

Cell[TextData[{
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 "\[CloseCurlyQuote]s ",
 Cell[BoxData["FindClique"],
  ExpressionUUID -> "2f35dea9-7d99-4ff1-855b-ce47d759b5d8"],
 " function only finds maximal cliques. IGraph/M provides functions for \
finding or counting all cliques, i.e. complete subgraphs, of a graph."
}], "Text",
 ExpressionUUID -> "625b1c77-e1a7-439c-8142-c8c9249aac02"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", "\"\<CoauthorshipsInNetworkScience\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "c440a45d-2782-4602-b5c6-29e0cad2bad2"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"VertexCount", "[", "g", "]"}], ",", 
   RowBox[{"EdgeCount", "[", "g", "]"}]}], "}"}]], "Input",
 ExpressionUUID -> "7295f3a3-9ffb-4ca8-83fc-533cf55c6d3a"],

Cell["\<\
Simply counting cliques is much more memory efficient (and faster) than \
returning all of them.\
\>", "Text",
 ExpressionUUID -> "0a1bc067-7d4c-4846-bf32-2f1b62ef6a91"],

Cell[BoxData[
 RowBox[{"IGCliqueSizeCounts", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "c34452ac-b313-4a3f-9a8b-14d8f62c0e91"],

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"%", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Range", "@", 
     RowBox[{"Length", "[", "%", "]"}]}]}]}], "]"}]], "Input",
 ExpressionUUID -> "fdd27353-f440-43f1-a13f-901c01e5340c"],

Cell[BoxData[
 RowBox[{"IGMaximalCliqueSizeCounts", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "6bfbfd1c-5f02-49de-bfc9-762b9119420d"],

Cell[BoxData[
 RowBox[{"BarChart", "[", 
  RowBox[{"%", ",", 
   RowBox[{"ChartLabels", "\[Rule]", 
    RowBox[{"Range", "@", 
     RowBox[{"Length", "[", "%", "]"}]}]}]}], "]"}]], "Input",
 ExpressionUUID -> "af0dab1d-9910-4a67-8d8b-1f1361d6b83e"],

Cell[BoxData[
 RowBox[{"IGLargestCliques", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "ef898861-f689-4a02-a613-450b90f13863"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cliques in directed graphs", "Subsubsection",
 ExpressionUUID -> "2b77d9c1-e9bb-4e82-b965-46bf38f9084a"],

Cell["The clique finder in IGraph/M ignores edge directions.", "Text",
 ExpressionUUID -> "0762d628-dacd-4781-bdef-811839b450a6"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"10", ",", "60"}], "}"}], ",", 
    RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "b6122baa-0d65-4f5e-8cfe-5c8f3597c3f8"],

Cell[BoxData[
 RowBox[{"IGMaximalCliques", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "19c06280-57d4-4715-9d71-aa1e01ddbfc1"],

Cell["\<\
To find cliques in directed graphs, convert them to undirected and keep \
reciprocal (bidirectional) edges only.\
\>", "Text",
 ExpressionUUID -> "6fd59783-9a74-4e8f-b410-618a0743622c"],

Cell[BoxData[
 RowBox[{"IGMaximalCliques", "@", 
  RowBox[{"IGUndirectedGraph", "[", 
   RowBox[{"g", ",", "\"\<Reciprocal\>\""}], "]"}]}]], "Input",
 ExpressionUUID -> "621a5b0e-f75f-4ce1-acea-2e2f9c3b3dc1"]
}, Closed]],

Cell[CellGroupData[{

Cell["Reconstruct bipartite graph of co-occurrence network", "Subsubsection",
 ExpressionUUID -> "333b0c2d-7035-4aec-be5c-8c2eea39a527"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<LesMiserables\>\""}], "}"}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "9faa9554-5915-4e20-9b8f-dd75e9242440"],

Cell[BoxData[
 RowBox[{"ExampleData", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<LesMiserables\>\""}], "}"}], 
   ",", "\"\<LongDescription\>\""}], "]"}]], "Input",
 ExpressionUUID -> "e30cfa85-21f2-4332-981a-82c1d8a3c6e1"],

Cell["\<\
The maximal cliques of the graph can approximate the scenes in which \
characters appear together.\
\>", "Text",
 ExpressionUUID -> "66507963-915f-4c87-92a9-d597d5044fa4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cliques", "=", 
   RowBox[{"IGMaximalCliques", "[", "g", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.677478709419025*^9, 3.67747871258996*^9}, {
  3.67747876255849*^9, 3.6774787656231318`*^9}},
 ExpressionUUID -> "825fe700-258a-42b5-9a42-b40cf6b77ec8"],

Cell["\<\
We can construct a bipartite graph of connections between potential scenes \
and characters\
\>", "Text",
 ExpressionUUID -> "8890e91f-0a06-44a4-8c06-14ff092b9b13"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGLayoutBipartite", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Graph", "@", 
     RowBox[{"Catenate", "[", 
      RowBox[{"Thread", "/@", 
       RowBox[{"Thread", "[", 
        RowBox[{
         RowBox[{"Range", "@", 
          RowBox[{"Length", "[", "cliques", "]"}]}], "<->", "cliques"}], 
        "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{"VertexSize", "\[Rule]", "0.5"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "220"}]}], "\[IndentingNewLine]", "]"}], "//", 
  RowBox[{"IGVertexMap", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Placed", "[", 
      RowBox[{"#", ",", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"IntegerQ", "[", "#", "]"}], ",", "Before", ",", "After"}], 
        "]"}]}], "]"}], "&"}], ",", 
    RowBox[{"VertexLabels", "\[Rule]", "VertexList"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "3bbe4e66-3e58-4d39-86d9-011ce1277555"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Layout algorithms", "Section",
 ExpressionUUID -> "b4849aad-4822-4c27-9f52-bcf827281ea6"],

Cell["The following functions are available:", "Text",
 ExpressionUUID -> "0af4fc5c-8cfe-40f2-9f26-7d49b090031e"],

Cell[BoxData[
 RowBox[{"?", "IGLayout*"}]], "Input",
 ExpressionUUID -> "36651920-f30a-4bdb-b5f0-717366b80fdd"],

Cell[TextData[{
 "If you are looking for the Sugiyama layout from igraph, try the built-in ",
 Cell[BoxData[
  RowBox[{"GraphLayout", " ", "\[Rule]", " ", "\"\<LayeredEmbedding\>\""}]],
  ExpressionUUID -> "2268a105-83e1-4b6e-938d-ae46d46a7227"],
 ", ",
 Cell[BoxData[
  RowBox[{
  "GraphLayout", " ", "\[Rule]", " ", "\"\<LayeredDigraphEmbedding\>\""}]],
  ExpressionUUID -> "a7491fa5-b34c-49a6-a36d-3694f5dee9d6"],
 ", or ",
 Cell[BoxData["LayeredGraphPlot"],
  ExpressionUUID -> "382b4c07-6ff4-4147-991a-f294ccf02369"],
 ". These are also based on the Sugiyama algorithm."
}], "Text",
 ExpressionUUID -> "86b86371-2bc2-469f-b002-b2ce5cd1e25e"],

Cell[CellGroupData[{

Cell["Common options and examples", "Subsection",
 ExpressionUUID -> "830ef229-53a9-42cb-b4e9-b339848a2d49"],

Cell[TextData[{
 "Layout functions also take any standard ",
 Cell[BoxData["Graph"],
  ExpressionUUID -> "b85a7fbc-2123-4e05-bf11-fc34c1d875ff"],
 " option."
}], "Text",
 ExpressionUUID -> "af6e4a89-90d8-4f43-9d63-44caf3d278a0"],

Cell["Many layout algorithms take the following options:", "Text",
 ExpressionUUID -> "d1a634b1-8dd7-4a82-84f7-8d288bacd05c"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<MaxIterations\>\""],
  ExpressionUUID -> "8c0ea791-f05b-4d0a-8db3-55c038a723a0"],
 " controls either the ",
 StyleBox["maximum",
  FontSlant->"Italic"],
 " number of iterations performed by the algorithm or the ",
 StyleBox["exact",
  FontSlant->"Italic"],
 " number of iterations, depending on the specific algorithm and settings. \
The option name is the same for all functions to make it easier to \
interchange them when visualizing dynamic graphs."
}], "Item",
 ExpressionUUID -> "0cf49c41-bbcc-45c1-8313-e86f694a2e42"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<Align\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "121b78ba-ac3e-407d-9ce9-459238b3cfeb"],
 " aligns the output horizontally. Examples:"
}], "Item",
 ExpressionUUID -> "d7177714-d7e3-41b7-8e05-f8778b3ecea2"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"IGLayoutFruchtermanReingold", "[", 
    RowBox[{"IGMakeLattice", "[", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}], "]"}], 
    RowBox[{"(*", 
     RowBox[{",", " ", 
      RowBox[{"\"\<Align\>\"", " ", "\[Rule]", " ", 
       RowBox[{"True", " ", "is", " ", "the", " ", "default"}]}]}], " ", 
     "*)"}], "]"}], ",", 
   RowBox[{"IGLayoutFruchtermanReingold", "[", 
    RowBox[{
     RowBox[{"IGMakeLattice", "[", 
      RowBox[{"{", 
       RowBox[{"2", ",", "4"}], "}"}], "]"}], ",", 
     RowBox[{"\"\<Align\>\"", "\[Rule]", "False"}]}], "]"}]}], "}"}]], "Input",
 ExpressionUUID -> "71d6abf8-efff-4732-9e1e-a51fb131e789"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<Continue\>\"", " ", "\[Rule]", " ", "True"}]],
  ExpressionUUID -> "c50e1b84-dfe3-423f-ba67-28f904ea4b4f"],
 " allows using existing vertex coordinates as starting points for algorithms \
that update vertex positions incrementally. We can use this to visualize how \
the layout algorithms work \[Ellipsis]"
}], "Item",
 ExpressionUUID -> "87ee959e-de55-4c27-ae33-21754b338d90"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGLayoutRandom", "@", 
    RowBox[{"RandomGraph", "[", 
     RowBox[{"BarabasiAlbertGraphDistribution", "[", 
      RowBox[{"100", ",", "1"}], "]"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{"ListAnimate", "@", 
  RowBox[{"NestList", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"IGLayoutGraphOpt", "[", 
      RowBox[{"#", ",", 
       RowBox[{"\"\<Continue\>\"", "\[Rule]", "True"}], ",", 
       RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "80"}]}], "]"}], "&"}], 
    ",", "g", ",", "40"}], "]"}]}]}], "Input",
 CellTags->"DeleteOutput",
 ExpressionUUID -> "465afc33-3f39-4698-a39d-ef3aaf8f35c9"],

Cell["\<\
\[Ellipsis] or to visualize dynamic graph processes such as adding edges to \
the graph one by one:\
\>", "ItemParagraph",
 ExpressionUUID -> "4e8f1ad5-d92e-4f38-9c8a-8e0473e5a590"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGLayoutKamadaKawai", "@", 
    RowBox[{"Graph", "[", 
     RowBox[{
      RowBox[{"Range", "[", "25", "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", "\[UndirectedEdge]", "25"}], "}"}], ",", 
      RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"ListAnimate", "@", 
  RowBox[{"NestList", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"IGLayoutKamadaKawai", "[", 
      RowBox[{
       RowBox[{"EdgeAdd", "[", 
        RowBox[{"#", ",", 
         RowBox[{"UndirectedEdge", "@@", 
          RowBox[{"RandomSample", "[", 
           RowBox[{
            RowBox[{"VertexList", "[", "#", "]"}], ",", "2"}], "]"}]}]}], 
        "]"}], ",", 
       RowBox[{"\"\<MaxIterations\>\"", "\[Rule]", "15"}], ",", 
       RowBox[{"\"\<Continue\>\"", "\[Rule]", "True"}], ",", 
       RowBox[{"\"\<Align\>\"", "\[Rule]", "False"}]}], "]"}], "&"}], ",", 
    "\[IndentingNewLine]", "g", ",", "\[IndentingNewLine]", "30"}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellTags->"DeleteOutput",
 ExpressionUUID -> "c3f288fb-7ab4-431b-8dd0-7e6b7f706b55"],

Cell[TextData[{
 "Visualize a planar graph without edge crossings using the \
Davidson\[Dash]Harel simulated annealing method, and taking starting \
coordinates from ",
 Cell[BoxData[
  RowBox[{"GraphLayout", " ", "\[Rule]", " ", "\"\<PlanarEmbedding\>\""}]],
  ExpressionUUID -> "cfd6ada6-1272-45f7-8be1-7ed8eb8ab70d"],
 "."
}], "Text",
 ExpressionUUID -> "e42590a9-d4e0-4371-8efc-9bb12bd11286"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Graph", "@", 
   RowBox[{"GraphData", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\"\<Fullerene\>\"", ",", 
       RowBox[{"{", 
        RowBox[{"60", ",", "1"}], "}"}]}], "}"}], ",", "\"\<EdgeList\>\""}], 
    "]"}]}]}]], "Input",
 ExpressionUUID -> "d8eca005-776a-4e40-8ff9-4c6526bbb70a"],

Cell["This layout avoids crossings, but it is not pleasing:", "Text",
 ExpressionUUID -> "6efb0742-04d6-4bf2-8b84-60bdad127e91"],

Cell[BoxData[
 RowBox[{"Graph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}]}], 
  "]"}]], "Input",
 ExpressionUUID -> "e19cad6e-870c-4cce-8187-560890d0649a"],

Cell["\<\
We can post process it while avoiding the introduction of any edge crossings:\
\
\>", "Text",
 ExpressionUUID -> "f084f1af-242d-471b-8bd1-3a2ded0e5dfd"],

Cell[BoxData[
 RowBox[{"IGLayoutDavidsonHarel", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IGVertexMap", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", 
     RowBox[{"VertexCoordinates", "\[Rule]", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Rescale", "@", 
         RowBox[{"GraphEmbedding", "[", 
          RowBox[{"#", ",", "\"\<PlanarEmbedding\>\""}], "]"}]}], "&"}], 
       ")"}]}], ",", "g"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"\"\<Continue\>\"", "\[Rule]", "True"}], ",", 
   RowBox[{"\"\<EdgeCrossingWeight\>\"", "\[Rule]", "1000"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "629fa14b-e7fb-40cb-af7f-2e2fdc5e5d6f"]
}, Closed]],

Cell[CellGroupData[{

Cell["Weighted graphs", "Subsection",
 ExpressionUUID -> "43ace6d6-c07f-4e1f-9714-2f2c06230028"],

Cell["\<\
Several of the graph layout algorithms in igraph can take edge weights into \
accounts. How the weights are used during layout differs between them.\
\>", "Text",
 ExpressionUUID -> "301d7c4a-39ea-4942-a592-71af06099c5c"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["IGLayoutFruchtermanReingold"],
  ExpressionUUID -> "d84dbc44-a29a-41e8-9053-6790612afff2"],
 " multiplies the attraction between vertices by the weights. Thus higher \
weights result in shorter edges."
}], "Item",
 ExpressionUUID -> "cf382e78-e0f5-495d-816e-6b4386ad472e"],

Cell[TextData[{
 Cell[BoxData["IGLayoutKamadaKawai"],
  ExpressionUUID -> "efc575c4-fd15-41c8-8872-455eecfd19aa"],
 " produces longer edges for higher weights"
}], "Item",
 ExpressionUUID -> "4da957c5-5afd-4106-b239-5cedb10cb56c"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Drawing trees", "Subsection",
 ExpressionUUID -> "7b6d868d-54b8-4f6c-85c1-fc8e2545db23"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGLayoutReingoldTilford", "[", "]"}]],
  ExpressionUUID -> "481b318b-df29-491e-9bcd-ee12684f96f4"],
 " and ",
 Cell[BoxData[
  RowBox[{"IGLayoutReingoldTilfordCircular", "[", "]"}]],
  ExpressionUUID -> "94c4c9d0-5b1c-455d-bb47-a5d0deeb258c"],
 " are designed for laying out trees. The following options are available:"
}], "Text",
 ExpressionUUID -> "d5c6c009-02c4-4e64-85bf-32c9444b3696"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<RootVertices\>\""],
  ExpressionUUID -> "a2c5935c-655e-4fa2-a072-1a525191abd7"],
 " allows nodes to be used as the root nodes in the layout. It must be a \
list, even if there is a single root node. Multiple root nodes are meant to \
be used with forests."
}], "Item",
 ExpressionUUID -> "4ad13fa3-4d4a-4793-a48b-0cc95fce7288"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "True"}]],
  ExpressionUUID -> "4b4cd110-b399-477b-8d6b-4fd2f6c1c183"],
 " lays out the graph so that directed edges are pointing form lower levels \
(near the root) towards higher ones (away from the root)."
}], "Item",
 ExpressionUUID -> "6f133d6b-5bdc-4cee-bfa7-66ed4560b99d"],

Cell[TextData[{
 Cell[BoxData["\"\<Rotation\>\""],
  ExpressionUUID -> "53900392-8cc6-47f4-bf07-40fad45aa5f5"],
 " controls the orientation of the layout. It must be given in radians."
}], "Item",
 ExpressionUUID -> "24eb238f-9420-44d8-adb8-72851d37c0b0"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Drawing bipartite graphs", "Subsection",
 ExpressionUUID -> "7535ef6e-9459-4493-af04-9bee2e7a0e9d"],

Cell[BoxData[
 RowBox[{"?", "IGLayoutBipartite"}]], "Input",
 ExpressionUUID -> "ded628a6-3c08-4426-9334-7b9876d5f883"],

Cell[TextData[{
 Cell[BoxData["IGLayoutBipartite"],
  ExpressionUUID -> "bdbb2675-0241-4f97-afa8-5dcd2d1bd06f"],
 " draws a bipartite graph, attempting to minimize the number of edge \
crossing using the Sugiyama algorithm."
}], "Text",
 ExpressionUUID -> "d7f8cbda-0fa2-42d0-8c9d-4592c9083eb2"],

Cell[BoxData[
 RowBox[{"IGLayoutBipartite", "[", 
  RowBox[{
   RowBox[{"IGBipartiteGameGNP", "[", 
    RowBox[{"10", ",", "10", ",", "0.2"}], "]"}], ",", 
   RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]], "Input",
 ExpressionUUID -> "e7a2ffb6-3f8c-46cb-9313-0f7504ca7e83"],

Cell["By default, a partitioning is computed automatically.", "Text",
 ExpressionUUID -> "342004a7-6551-407e-8e7c-f92a97a96797"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[UndirectedEdge]", "2"}], ",", 
       RowBox[{"3", "\[UndirectedEdge]", "4"}]}], "}"}], ",", 
     RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"IGLayoutBipartite", "[", "g", "]"}]}], "Input",
 ExpressionUUID -> "73ff6310-0a1f-47dd-95b3-60657bf1a4c7"],

Cell["The partitioning can also be specified explicitly.", "Text",
 ExpressionUUID -> "234cd149-67ef-49e2-a4f8-9a080d64555d"],

Cell[BoxData[
 RowBox[{"IGLayoutBipartite", "[", 
  RowBox[{"g", ",", 
   RowBox[{"\"\<BipartitePartitions\>\"", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"2", ",", "3"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"4", ",", "1"}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "ebd8d663-c71f-4203-ae34-69119afbb288"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "67835348-e663-4dbd-9240-1b5495205784"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<Orientation\>\""],
  ExpressionUUID -> "20f0c5db-de0a-4599-ad80-ef65c222d887"],
 " can be ",
 Cell[BoxData["Horizontal"],
  ExpressionUUID -> "cd6f8cb9-3ee5-4ca3-9f2b-76199a5f803b"],
 " or ",
 Cell[BoxData["Vertical"],
  ExpressionUUID -> "3919a8c1-7c06-48a3-abf5-e992262dc876"]
}], "Item",
 ExpressionUUID -> "fe6e2160-dcf2-4dea-8581-7ba39c36f3f2"],

Cell[TextData[{
 Cell[BoxData["\"\<PartitionGap\>\""],
  ExpressionUUID -> "7b6bac75-2d6f-4ffe-b34c-a7bd5eae52b6"],
 " controls the size of the gap between the two partitions"
}], "Item",
 ExpressionUUID -> "5c9ed2af-06d8-4d23-bb64-75e7c7d2673c"],

Cell[TextData[{
 Cell[BoxData["\"\<VertexGap\>\""],
  ExpressionUUID -> "81d0a69b-e649-42ec-92fb-ffb4a887a315"],
 " controls the minimum size of the gap between vertices in a partition"
}], "Item",
 ExpressionUUID -> "04e49d86-51af-41d4-a12b-4b91a0c8b817"],

Cell[TextData[{
 Cell[BoxData["MaxIterations"],
  ExpressionUUID -> "33ed47c6-9223-40c9-a73d-7f5c39c4d46a"],
 " controls the maximum number of iterations performed during edge crossing \
minimization."
}], "Item",
 ExpressionUUID -> "4974a08c-6e35-4e2f-8975-ed63240a96b8"],

Cell[TextData[{
 Cell[BoxData["\"\<BipartitePartitions\>\""],
  ExpressionUUID -> "476f5ceb-1823-43b1-9b87-bc7c2157535b"],
 " can be used to explicitly specify the partitioning of the graph."
}], "Item",
 ExpressionUUID -> "f6419198-3756-4fef-858e-cdda090e0c03"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Drawing large graphs", "Subsection",
 ExpressionUUID -> "9d0f4b9b-476b-4f1a-823b-39c3fa2bca91"],

Cell[TextData[{
 Cell[BoxData["IGLayoutDrL"],
  ExpressionUUID -> "b8258126-fe7c-49c4-9a76-4b62fd307af1"],
 " is designed specifically for visualizing large graphs with high \
clustering. The following image is created using DrL and shows a ",
 Cell[BoxData["36000"],
  ExpressionUUID -> "bda04e1e-95a9-47bc-b248-ec7189c12bee"],
 " node network of collaborations between condensed matter scientists."
}], "Text",
 ExpressionUUID -> "252f8403-c676-4403-922c-1d7f6f4ef918"],

Cell[TextData[Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
CcQb3vCGQmOHwNUoMW1EaK3mGTNmiL339PTkd9lx2ZpDN1508PoLB6QvhVAz
SNhOyC3tLxk9mDlE3ZzbjLxR9/BC0seuBP0LVmV4NW6yhtRI/edAxsw54yjY
7bg00tJC0toTEgyjOESH7u7ujtO1q7hH6B0dGSRGbSGojSxKh8PhcDhGHWzt
wl173jvcbRkiiM8YVShUEUCJIUst1dyUuouuHzp0+cGD7+sHkRhsrh6ihGdy
UKi7RvLEE0/EA4w+PDNiIvYUoP2vSxA2eP78+WedddbkyZPDvQ78+Rtf3XKR
XgPdrf+CqKwMipNPPjlKcjnqTdMZFut4FIQAWJ6ZPHUXNCb9C1Y1ZztOe/Or
53l7FATPRumJI4jYqPuJCYaLust4IZy5I1i4iosHu2MwlDye6dHhcDgcRyWO
Nd5ubAc0WtwcUUQ/ksUhBigv05Km15Y9GmyuHqLkECYlglsaIWTFn5CWaxwQ
Ztu+ljAzU/myZcs2btw4adIkPu64bM3B6y986S/eNCh9S7rQ2dmJsj1K2DX5
P8v3gpxbMTNt2NKIuutiE3VvKVg1dLaTFsZipeNg+SdSu2cak08LiYWls4PY
JjzQQ8889+TLv/7Gvl9UaVX/IIuMmwhTwpYA4P4iEDg/53WEsBDUkZZOx+Fw
OByOI4R4+7f3bfqnvVfcdvcgyhJGDjJu1RJfH27kVoXuUUrdS6h14cJGmUND
dUhWYzGJrbak3yg/HOwUWig2iKCIzJCkeaeYSHtm9FgtqDCMV1+JvZ922mna
Cxfx4PmH1WZztpOwRVuqSFnoNQ0z1Qqu3SjlzKFwBaDJqR6salk3xTwJCjB/
e8jJmb9glzAkIRS6kxaSLepvxg6Ftz/x0q8G6dKSZSR7QZVbwnnru8lmGLSB
WoCJY2ncGtnjDofD4XCMatyy7TyU7WGM29EKEsjYR5h5SflasiZ7q0L3Awfe
9eqrZWIYeHj+WKFffei5er4xjb6lYaZ8OOGEE9guXioCDKvURn3Mt59Fi0IK
l/n21FNPXbdu3fTp0wep7zjbxdUh28clq5E2XfXVEJLMOMjubtdVodc9StJm
qlOsoFTi2w+d7ZiNed5uhmE4uxFeLSZ0t7SQUWpYZXIlbbl7u14V+94S1E0N
cpQOiGX+txaiww9jaY/wiBhQnunR4XA4HEc3jIYd3cuRMHsebmnK2ymTFxiU
wCJP9WrkdTfeXihZb5SGcYhRbsTBu6DoJ554It1R+8WBUWXrTeHYxum6TiVL
Vk2cOPHcc89duXJlPyY7yiGOevNXHiKNDFtkXOh9S/5e2s/7UC0TxocWUneC
Vbu7u0s0M6GzvZ6kJCVE2nz7Fm6Z4e1RY7WMZcJBuZTZazDMQ9lBkydP5vLm
RNMFOxC3gBkRRxidamPimR4dDofDcdTDnKsDsljMiEWeBJpDshyoQSr6A8Xb
Dx58n/nb89SdjSaAGTLJeqso5+00GAZrUpkouYRESjs7O8XbG+1rGTgL5x2o
RGVUycaNG5csWTJQ00DIQnbv/4U529UFvS/JAFkI1D723roQetEbUfcoDVZF
M5OxBzHicLZjCLC4Uoa3Mw2kjxkGbnQ9apAWMkqYPLZVIeEfEOgQ06ZNM0LO
XcaAWBm2m7+dMv1zuVsIqmd6dDgcDscxgnq6ks7Rmn6BafrMxioxpED7ip1W
p9ah5xMCFvrVGecRyNVDlHM5SwiJSlmDY9t7enpEhkt4FGolpNd5qb+GJSS0
YoBnnnnm/Pnzj7A7u7/Q+w9/3fsPX1wMdUccogZMnDixpTNrXQhd7hZrWZG6
E6yqUVJPQxOAaQic7ZbREbVMOEFjvN22G0J1fWFayChh8hmtTl6T32+oHlK1
R+ncQT3JqppRXtn2cMKiH/oW3OwajZF8K/UDH/7wA7z+9m9/qZfeDHeLHA6H
wzGCYE/Po8/lvu2qi/UqlAC1NDvPMjFV6IFRFJOso1U2v3o9TSc4ktHUrIhT
sHAqhck3PmnSpDjNLl5YM6cDXhf3XbRIW/LC+OnTp2/cuHHevHn968sNm6d9
8wu93/zrw9RdvJ0kKqLuOqEiz/1Q44S5XKLg9gmF7lEwRPkaCFaVVUJQgJXU
yOBspzZ9zPP2KL1PC2NS4tK0kGzX7ieffHJ48Q+Uy33q1KnYFEjvkKLlZ5SM
t9twcSVUb0YYgjogLR92fOYzL2zb9mt7wdjvuuugXvro1N3hcDgcBntcHn3R
qXuuv3LPDZsa6cxbmluHfjdNBYMbmawpFl4ayrlHBW8vD02NUuKEk5mFU9XB
cePGibahGG9rvOysiSKoIbzkNMiNokRnz5595plnzpw5s9W+vMbbD7vc58Hb
cbmrtWpq/+aYwlUAwrHKiH9KqHuU6MAtWJU1iUhgyDWG7z3k7VF6q8LbQ391
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
ZjL7YOKQUKvGgGTu3/JpuDgIjsigZNasUXkYe4ktMICIA22eEXj7lgu7re/a
BPkaBruR/UacJpsa7oY4HA7HsY4SNttSdKo5SG06OOTScA9Ev02rsqd/RiQT
NXi01Wp9cp6E2+tpOhdze1ZRxWTqzOgcquweLpET5VafqVJDYZNCJzZLFNm3
qvPrn+vVS7RK5Iqs7EgvxKvRZnR1dYk/43ameegW8KCqGMuq8lG8TqeMCMdQ
kKN9//Zvf6mX5cogNQ3u1rBfJuglQzjHJWW6iaI5iokKbOUm08zYKSDSU9SR
NC9mB6kBaq2JMcRF1UcTllCDWljrm1s+vD5VYObMmRqxDKWkTlifiKuOQks0
YgsXLsT3bratuf3zbslGUy20hyGyySnj7eaCZuaLUwA5D4Mu1Ty1TXYWshOs
LYPKL1iwQFbJlClTkCjrROgy0HuNCandbXkj1a/zqO3cpxyd+9rsI5ktsgob
iegyRgdXaWYommYCLxHAV2S22GUM2tA4sUNzyebmwnuhXCRjlQxBU/sHzN7B
W5LP4XA4HBVRwttrrUSn1tOsKa9LloyvpzkbMxVCEprmV4lTgXrmsVvOFjJS
FqM99VyecNtS7oSvpdGRmWJViDfjYIdryy1rfiTUHRMptAWgx6TjW7FihSg0
znMdV5wN97Woqagmypn2NMs0bBDfL0n/1F9VojfieISyhpoZTkpHuvwojFrV
6ijo5621FIiStC2qkIVNiRI1yorDHyOC3ll29ziQmnQk6d9F8sl/EgXeVyJV
VWbHzev1UhfUGGrI8PY4WQ22FgTM2ilQ83C5Zy4wusl/HZ3d43R12kWLFq1e
vVqHs3GACYfnC1iAg00fxGmqHCY1mLlAuwKLhocb/RZUuUYY+m0FSI3CR053
HIDrVnuRJVJDzbpabckimAQp03jmWSy0AWOKrDLahbOGiacTbWnz8wgHEAMt
vIVrSZr38ou8hNw2na6qDc4iSuUIf6bM2M9MmpSLZGzfwW3okYGV2oZg5sLh
cDgcJSjXVVaPToWDRakw3mQMhbsjnsl4jDOtsrx/TZsakurQm21+znouz0ym
zhICX0tT+VkxtsfNNPP1RDBsLcn3tH/UPUqITSYtG82zZROXLFkifgu3h5Yj
LMfv3dvbK96lj6Qub0sTWUMdyUVDthlVSBZ08rp0pIsltfdNSI6XW8yQpVHD
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
Rjiw8wKR9kc+dZpVouN+8ssPbL1/JwJv1BQ2Cy9r4qtf+6QazBKfj16+Xi9Y
/YFPHHfolsOvlz5xHCu/wLoRG5f75HnuZ/Jax+nCpo16iowED7aOIjIMQ7Ng
UjiPCYcs8BAVOtwYxk4lREqK6YlSsu4qfBWXvv5/fu8rX3zxPz7z3X3wBIiZ
vhLzFMlcuXLl7U8/p5fomXj7woULRSFmz56t7evWrRMbF/P8uzvO+ofPv/HU
U09Va1Vm7dq1yKTF+vTmbW972/z58zdu3KivjEJDQeHeaGwg8Pmk623pokLI
gzl9akw9TRNqUihMxYxNVE/XTo3TZZ40CDiN1SqT1lBYlHXp0qVoXcLE4AiS
deinbtz03NYPPb3l/fdf+441a9aItz/8J+/VLm9+85s1MqtWrRLnZ6UqoDFn
FoAZCkFjol7QX32lkWQV2jChhwpo8AmJVUmaZx5vVYLH2y5C+lV4X5R4jGtp
MtX2NF2/RqYjzYpJhnadPjUDWU49iPXmiFSic0EBu6oLXe7hb2NTShynS791
pGvFFv7ohby9yi9Dvkzh+MRB6vjyChuBaaBy3m50nfFnSIlmZVKM/uqN3bz9
a0xFcGsM6iEcDodjBGJo1DJVjtLSLG09CKWsztszh6gHYnLoUJgbRF+JsT/7
g+143fNV5eu3bhpvjxo/oA/L2ndeUE/DGHEn8ghuSxJikK4N9ms56yytIqlR
yKchvkTqDEvmoDcmPbW80CGTz/vkgS0hamMLFSkcSVRG8Ey8r2JNOMHGprAI
wVAcC88ZlwBSR8gnDYMMiCjip2V5I+JetddH791x5/5/v/P5nxMXiXNbHRQ/
V0mxMvHSH++66NA/veXlXRdt2LBBtJwEhqpk+fLl55xzjji5CJ7ot3YU1T/t
tNPIJ0mydPHbt771rapEO4q12hQGFgdanQULFiDFt5ExVkn2mI6+C/Ggk4mC
eN44jV/OkEZMHk4x+WQ4X6hlBAIHdPTe3t4VK1ZY4hTW6ISOtqdLx8LbRdrF
0tWjs846S6Mkri7Gvnr1ag2L3qsehlfVEo2oMVQxEi2elKCnp4ezoDesfJqf
gsF00gXA6rfMiDGxQquYs2AYC8NUo2oTQ7SKIBRTy/AjoP9qgxqA1D88BFcj
sxLqLHMKdpFnaHneE97ROCl6lP4cmX3KxkwHiUg167vKT2KmTLlIpr1vFqlW
ga4p36oMXcf0JiEqZzZz0HqyxhYXQL/tiCogLZVL3B0Ox7GGoVHLVJkRbrUl
Nvddnbfnn0qh+wutbPi4F28XaTc/fNOm2o7G/K18eOgdN68XYxexPPjkJaFq
oi3NhoEAw7ZbLsSx6Wo7uKZZPAgdskhXmM/h5f/rv3REJoeGhGMIvCEBuRCN
yben+dVtPHEIF7r4okRCY+0nIYnxdqsT97upfWxfGB0GBWQYvorhgEIG1zHO
dtWM6Hr+/Pkfu++Rv3xk95IlS0iQiM5c3JvM1X//mXPQq2uEX3rswt2fO3fl
ypViquLn69atmzt3rkipxo31N/lKdFSDqarEb2fMmKFi559/vgi8GKCF0CLm
4SwsXrxY23U4Oy92akIFiF32OpxdQkbt4lS+npn2sjNOZh6kMvgwxbTp76IE
lsejI0goWk8CgXHC37P595/ectXDf/JesXSCW8XeoevqguwX/Re9J9UkSULE
uLAO1Dtt13vS9XCxaaBIzFIoL1EvaOe8efN0mlSDmmee+bY01Qx8r1BFViKK
xqJBomOaGXtvRm6UiGHUAPRR4cCyPC6HRr1jxJJrr/ButQu+EdNW+R1XjHn0
qtdlupD5lbC41KiyHyNz3zVqw5GIZDL123Rbhq7TGFRJLKzQiJNrR+5EOx2D
BE66S9wdDscxiKFRy/TDv1QOo+sVeXuhPz/079WTnNU4zawAhBOGEM6bl/D2
WhCdal/V0pUotdFIuwg8lBXuivMKXmfxj+anVQNeevRC7bXzlg3UI0aEmIH1
NFXJzk3HfX3ziQi/M1Qw02BTYnQEuZ2NRYutIRwyd3q+p3xr79Fdm64Vz2p7
uh69mRvhsOhAqGVwquOgw2lMUnERPLy+2qI3s2fPFskUJdP/9evXk1Bd3FLb
e3t7RRXQhxxO6pjw9h8//ma9/vHO81esWCGKjkJbXRP5VDv1X2RVvF10VLur
EpURURd111dnnnnm6aefLuou+gcJ4byoqdpL5dU8jbNx5vDaMO10lN5c5FE3
nbZN9DD4h4nfzev1smFBna5D4AO3Naq6E8hgWbBgAalabJrGbFjExnyrq2L7
dX+w88/eR/SutqvN6jKBnA997D36CtvkqRs3PX3jVXqvQ3NBkhdIPF8DToyw
LdPJNAGxCfm7QMfF7FJty5cvZw1cu8WYHLEUOpl7pLDCWrqsql2KtXT1AYYF
68koPVojnUQ1gPhiqye0zS10gnGj8kae8MK21dLI05C3h/da5qcVl3uV39vC
ZhSKZIxUD4hzGzGYiZGomXkf9E5NQ1/xtxNo0GgF6gGBS9wdDsexjJYIc/9Q
xZ3eUjNqaXRqRd7eaAo4M5nOY8serJbLoi1dGjJK/PAlonfraT3NaBGn4Nl6
2N/+6AWPfOo0npI4teCuCLbpWpzG4kEnVAY6Kuo+JoWYmOgHWQq1o8jD33/o
tVzcmcwkTce2HqSGUDNENXlYs5gOQabWHpzA4YwARJ0lShGEm3gbgteWZuS2
/2QIRMOPNAjNqmoQRRS1FleEbRLeqI2LFi3a/cGz/+6qM970pjchXFcBVSIe
q91hv49tPeM3T77lJ49fLNa9bt26c845R9wbXz2xpeJyUAtUIvp2/vz54rF4
+HXQtWvXiuq/853v/J3f+Z1ly5apAG5G5iZ0XHFRSlrXbIRraVBkSN6InYwC
Vm9XBQMrW2zXbRtxVCJTV6e4BmDIEF1tV8dlqiAXj4N0JYwn0b7sC0U/++yz
Z8yYofeqXFRWxo5Iu6wedfk7n3z/927+4KmnnqoBeerGq/QRddY9m3//yx/8
PVWlDuI8F/3WIOA857xzTaLwz+h8sIW1XX0hV6QGWQNOMVzu/MdWDW2cvDKE
WyOvx+CuqadpV4mYIDSbyzhK9P86rZkE76Zu4vK2Bpg8qdENkrHcQ3OJizxs
c+Y3wb4qFLrkkef2oagv06qolbTthailYT5jgxT3cbK8kQWcVpwMjZNMLxpz
ftz63aQq4OfCpTIOh+MYxNCoZZpSx1bNB3tGN+XthUIdE2yELneEB+a8Mu1B
lAZp6v/3fvA1vTK1hXQ9Thclr+cU9ZCWMIlfe7rEqjE0i0YM91KFZJ556dEL
7SHLKkIiSJMnT2YoyJqO7NmcY1XccZnBxy+K9zuvriF7Oa1iuXnj7ahkoaOQ
VUsmw0iGtgwsWm1WGVZ4wX7RUcQ2dRQ0MyqASEM8XLz9V596+3Ofuwbvur69
6Z4HP3Xvw6JhLz12oQZHLFFUU+xUbFOkVO9FHVUM1g1bU9uQu7NUk2rWGx1R
TFV8XscS4129evUf/uEfXnTRReL/ME/OvvpIEnhmJczsYn7BrDMbz1oSmxmK
Z9DJk+5Sx0KXQt+5xmyiweRG5G+RETF37lztYn7+KEjzrl0wMVSVGjw/AYsr
aRd4uxqvbspgEXV/6GPvee62Dz17y2Zx+699+J3i6ozGvVe/7SsfeqvGR7XJ
RpBNJPaLLYC03qJKMUOw9eJcykS9Udc0pKpK/1UV0wdRsMwuDnDYbIY2m2ws
YxcYgzUea35vJn1CZTWx0iT2ZwuzPFEq5cKkMn1Ryc+gEfUMYweh4zczixc6
Aar8zDb6sSr0PByJSKaWhlFbtAvDSJJP/arwG9JSnRhQOuOcvsGWuOtYQ/Dk
cjgcjhGIKrO3R4im1kGhlKW8vIWklZcstAhCR5+1kOldc60btzcC/OwPth/O
nf6z3WFV5rAyIUTY2XqwpGn4/K0HOQMtZ522I1SwMDEIOYfA+WxH7EgWkRcv
NT2JHrUsRYr0xWTP5Q/QwlODbCbjZkRsgMiZiFcWNiV5o1glNB71AmQmTuQl
0FrMFqYDUMWQwISRYbKDLO6immJ6s2bNmpFAnRIJFB19+LvP//bmSw/dfClH
V8knXvrVky//+qFnntt128Z/vPN88e2lS5dqQET7VYk4m6i7aiCfIZ1Sm7u6
ukQmVUBvcCqKqKgMwQLaS8z2vPPOu+yyy9auXSsC3JNA1aoNeBSR+5qemRkZ
bK7wbEaJ+J8VoxguHJhcEmRuxGOMJUKaHYwLuzy0EfKsyjUscE4CjS3dvf7T
JK4HtZbxVG1cJOqs+qiu6TSpF7JNnt5ylXj7O97xDvH27df9gQaElZU0Yp99
+OuffvBxjBRVRcIZZPOImrhHvrHvF7v3/cLO8thgzSl6RHC0jqtKdFCdULXK
DOGv3HfDvV+90RbGtZuukLHnCXN4K3E3URWTAvUU6hGaGW4ZbhAuTh1IA4j1
UZhS3oBipNHvZMjb477ZGu03pLqzPbPFVHaZ7aa5asnjUU+F60bXo/Snj2uJ
s9Y/1s0pgLejX2q1huqIE61gSUyEw+FwHN1o1d094IeAFrZUocWalVebf+Rl
eLUdtyNdIL4tWOIzCuyaH7/yDXg7lICHpnmSrTbzZUHXw36ZeNUyqpnYAIZv
yz5iRIQJXli2PiQPaL+RNBCohR4VGm/cr2kiu/xGHL8ZssSz0jy9+DbjJJ5U
vEh8jyyOYneiaqJ8iH8QmZhapi1dgwnvHOnfTebBOqeQTHFF1TBt2jT9F4fU
RlH039z+7oO3vQuViw6hLXrt/P5+EWxtwcGrXVRYRxTBRgNDYVzubCTJISRZ
fJJ05fhsocrLli275JJL3v3ud5966qmkB5+XQA1TbTifWYzVzixnHB0R0wEq
oFOjmjnL1nF0O6Q3IZU9eXVIlm7RwbUk0G/BggVj0nU/0eczzixXqgLkXZ+a
APUUcyXEt7I0FfJ+vVdf7rvm7Q9+9N3f+eQHxNtlnrCSrApoX9UvO+WvHvmG
qDu5NFesWIHXGm8/1B2l1hMHDhtNDz/z/Ja7txMMYhc8VqQ5cnWKVbPOi6rS
KdZX99x7/WvL/v5gu03uNGLshSZ/eBdzIGaFbD7CNDM66aSpJH/R6xOwL2G/
3HSFeWPMZBiTW+A1vFnCjyGZNNZdxS9RaBc0srtbEsnU+8aZhnc0MymEPIc/
BWP7LqhaBVz5ugHjdEW2lnZvCfz+DKqK3uFwOEYyhkAtU36IfjTAIhlLyhSS
0npuQRPe8Ci0dNPhvjxSYRr/9vLf3fvVGzMaGBOim2O50fPUiuHEM0dcnCaT
NxOAYngyd9y8ftdtG+1wcbq4JGJm0SHjJNA/o0B0p9HY1hrE4nFQ9Op2LCTE
NK8jyFaNGxOvJjvqIy5uKD15s2lbewr0xmKMIlQqjEeX1YWg+izTiXZl/fr1
opGw9K986/8RnxS91LdPvPSfT770n+eff77IKj5eVaXtGhPccSJsahgOdlI+
rly5cvHixdYemoq/HdUK0wF6r5KXXnrpm9/8ZlFNNXL58uVLliwhywoiH1Fo
9PNov7VF35pAHUmJmkTymbY08ThDBJB5w0BoiS0EpvLqlLrJ7AmMVMdVj5hY
YcFTxEvqHc58Erlw9ukd6w0R64qMQbz9ax9+5zM3vcbbSTKJO50QXdZjUndI
WES1+koWBMRb46mO7/jeC4fH/+VfP/HSr26658HwuuUM2lVnRgTGhSo5vPJv
ejexNpYaFjqu7SIvvG7zNzKXMfMX3H02C0ZV+PzVU320fDIqpl2wHDv6Zj3N
OPkbebZ3XDFm56Y+tkb402Fqlqa8vdEPYOFxzf4tp9aN6Dq/PJiWuClqKcLd
w/UCmqKWRr7oUkE9NdgSd3XBs0E6HI5jGUOglik/RKs+/1qyXmcJby95FIYf
TQljbvYwY4apav/t5cdhGnp9/4cP2KpMxsNh7IVPwMzhoHDt6fqYPOi33L19
975fPPzd563OcFLg0VtPF28PH9O0Cof2vHnzRBd5xDP7LwZoIQAmTSlsTKGP
0VKX4/DnQW/mDA9opsLpC/nb7Ult3n7OOCkNUdSonaRzmZxAbA3+AFE/IQGJ
H+GoqFlIWihKcMkll1x77bV3PLBLr9NOO+3zO3f/7de/Jf5M7Cp6eI5FWKsO
vWjRIhFFBCTLli0766yzVIy5CdT7TO6TTx63Mwp/VbVq1ap3v/vda9euFVmV
scBSUGo/CzCpF2qYatYbAj/J8GMpdLCkIPYIcrhiTRMCJ8f9rjc6xQcevWDn
LRtUkoDZULFAeXLgqC+qFnNDIHW8GkyqH6P67cnaWExDCKT9Z03Vr/7xf9v1
8SsuvPBCLCARWh0O2q+mUp5JHyZZmJ7QUBMEqsNtvX/nzmf3f/PFX35z/y+/
8Og3Vf7mrzykyzhKMroj1OECgJDX01RIGrof/OuD3Eo/+N8PYmZiZVjKl4q/
RSFDNjoap4scWdQw7F191AWg/yxYZrvTWiwp7oh8GxqR5Dxvt5JmFJvlW6Uj
mTuxUGBjU1eNJhML6XqUStC5FAvDBzK18ZtW0mwD9jsTRtz7Y4MF8gYDZLIa
gplih8PhGLEY7N/ARt7dfh8dctJShYWPJ3u8mu4FHW8YXhry9p/+bPezP9wu
6m4JD80pF5Vq9amcXcxfzWQ3vH3Hd1+I+67hAhAVI67oCNKqx0nmB8TDUcoZ
8ER97YGb77t/CxzGokczDSscojhd21RHwW+MooM2oJ/HNjF7h2BSm7a2XCuw
etFFEULUHfiHSYou/iBKqR3FivUt8hiVEa8TuYJwIu0gS+Gn7n347/73y69p
Y57df+aZZ4pXn3HGGZBtYjNxaFO5PuJlJdmjrBsCLVWS4FnaSf4T1CYQD5z/
+qgaVq9eLeq+Zs0amQk428mOSCQCNJ7WknRdu7MAK/1FpjI2XYWqLU3aY1IW
6A2e8MdvP/Plxy4SexeXVt9DBynqGh1FTVq6dKmOa1Qck0cNZv7FMvMz78OM
BgIGHVfv4e33XfP2R/70sgsuuGDDhg1feO5nd+7/94/eu4PzogMRIACdJtsP
bVaPyOjORtVGck4y4X/6wcd1XsTe0Y1Hqa1hxrVN3zz7wwcO/Pjrz+179PGv
/xUZSFBHW1R1g3u64HYO9WxcnESXm9+7liY+1YAQiPGNPzrr8U2n29yW/jNB
YNL9wvu3kZo6bxRzR1vDmurbGx2xukjG6Dqo54LiNSbEKZCqKF9nIy9HUy0i
4LjY3VzSUPemO/Yb/PRVnxFwOByOow9DoJYp8aT1g7cTeVf4VaO+FJLqepoH
hkewybYz8tH/4u0/373zsU+LtJBIHF10e7oCprnXMjDXHwsSmaPe+o7DCoIU
Km3wolsNUDhzZ+mgYj7Lly+n2ij1kn3/hw+IHcGT41QzH5KizFDYo9+cwPYs
xnNLDWEyk1qQOZz87eTb0YAQTIqAHLYJoTI+ydFZOBV+CI3XR9F4kUDRSyQZ
K1euFFfU+zse2AVp1+uvH/sHdVmE/Nxzz4W3i48hFzG9Db5utM0qLMb+Fw//
/+y9CZhdVZnuf6oqRBJA7b5qe7vtbrvbvnodAVFISCqVuZLKDAFEHFuGMCiD
gEqDKBqmzAkJIFOjghkqVUnNVUklYRDt239vP7atDEkgkDkBFLQbvMjz/9X5
sb9n50ypBCrE7rOe85znnH3WXnuttffZ+/2+9X7vt+byH62W6U2vPOPCOYqs
ntDM4TPdYK9x48bNmDEDA8HUq3qeNV5kwghiJYq/K1sMDqXzvNOxyN+kPzms
PLbQoAoeOiqZ9o9+9KMm1YrLxuF4UhisijH22UUK3sVmsj4009xL9g47GjJA
zzE95NicdNJJgwcPBrrfuf23vBb++9OSfIzhZdI8tIaAdo3LE3Kx6K2C9vwq
85+jz69vXby6iyEouqizXRTnJeQWRgFiX7fhLiwp7Bp2Zx60YjTG01GupUus
l/lf4LMLBP3z1PWPyCaT5b1rxrANXxlN59PhCZKU0mpOOaUYVcY/RU7NHBu5
BBG9xF23oEc9PO3pUJGC3nW5K8ooGf9S+vZe7A7crxfh/0ckuSeMznCu+poq
452qTw9RLuVSLuVymJdDw5YpuL03oVs5pV9W/LDgXsWOkt5ekZIlDFzqRt3g
aZbCj5Zdn8btn//854FzJuL82Mc+BroD1IEtgR+gviA5S2Y2XDFyxBjzpb9X
/GMdEYsU6wBIRyYp73V82Y67W9l0liAfUGL8Sk06vLJxttwDQWOIN4rDQ2hd
KyAweXgdnQcV3T07MmQq9g3CVdkGAMbhXl4xjNfjmxpFsyEVCIqzzbSdIqhQ
yEXleT74LjDmM7CQGf77v//7E0888dbmtQ/s+o8Nu/7jzo4HAJzHHnvsqFGj
mPwPf/jDqoUrLKnVIHjgEGo8Umpqav6xoePKZc3SRdRs1/tNEbe7Xf88p1Ka
N6f1rLPOmjJlCiA8uPEqWIr8mZ/w8+v9Nj7XRQRZ8RYHq3qMNpoecq0MdmFQ
SkcamBAyOE6jsp8UZlu2gzaLqypaQJVJuhypTeJtO8xXu8F83n/RqW1Xf2no
0KFcxnc8/es7t72IUWPggKGjMt6dH60Az5GEFq9JrQAaZ7qk6xjAyyjY4kpE
pC4VyNFnzMk9z63duacL41ehSP4yvNMrBugcqonaS8d73LX6J4kGFK7JV5jX
bmr+4kmd51UzUroqN8YJdIqKJfQpSJXZed2Al2YNaD5nH1hblRfHWgzzZ4rf
qUqQZOxt/1SOpPx1NKWZ4pIoeIhe9iSTSAaVMD00CjR7Qyarr0G14fN9/cAq
l3Ipl3I5zEtfs2WK4fOD8PYXC03drwsrKDE5C82xuB8wVRYon1esvHnH7k5B
+9Pb2s8+++xJkyaNGDEC5AOwPOmkk07OFj8LJoF/ymgAtGRfCMWDJ+OjuSqR
fDQ+LrRH7JKO3NDKS/fcogAg8MnoVPc6IknnJLk6PJm6Z439FNqFQGUssstj
8bMuXPnMwm9tDaEmxwVxGT55/PHHB27fuaczXJeOUUwbi/haJcIzJUqk0GgX
BDjkAwjwhBNOABPOr2/t3vZC55O7J06cWF1dPWHCBCD09OnTwfPgTKY90gPp
WLbbDpnJoQVq0hTV1Ffh13Dpu9EFAhnjImQjbecsa2p7YsfdXQ+NHDmS00pr
EvWNvXVypMqEgGdVIrPPr0GAV/lHMnlEs4qv+Bxamvr/ddpHnKxEIHcxYvfv
/u7vtA6MwNXM8WzabQ1Dsah2EFsYFCPlyjRlKhM4derUsWPHyiYybpQP1FGH
0xBODyH7RVNCYK8yPBWM+XUJgPGyIz1kCGaqUmDQodGZ+B9xnTy+qcHGuZAM
KOYy5nOQqXrpeK9KZJr8d0Sq2TR+rsgGbni1OxtM+Cc+8Qn6ZgV2N1SzGCUm
fzug/ZU5AyJlaiYxIvrtG9hejCpTmlOXY7bEDSGEp/J3GZBNoOyt5kDp5aXv
/DZegs8TuL1foqbV1xT3qmwaiD49RLmUS7mUy+FfDg1b5oC2FysCwuCpptvJ
Z4AEb7wEUSeIqTED+t90rja3Ltzw4D3ARXDOmWeeOX78+E9+8pM89wGEugoN
VwS0gAc+9KEPgTnBk0OGDBk8eDCIkcpsBNKrcBJgXjAmh7wqyZTq0ZtmDW6Z
MyQkpvWKVyR5Z3qyr7b0hDEK1dTrixhA3cjSm9PeOZsKNm/lvsIdgmp5LEZ+
SQV3td3gzRA5DIuAah76sSdW7tzTxUSpQxLebGVVBOeRH1Zvv2Db+EcjC3Tn
OqXgZA5E4/NWtAiea2tr2YjFxDtTSjXm+QMf+ABz+8EPfpBdQrwdAKmzkUng
J04Kv3L6sDJ4B7FTE9hJC6JfSSY6sRVpEXDOXd7c8vi221q6OeMcnZaBo7Lx
3UVvtrg9jDJhsyKW4k/J82bLcn7YywxH9IEearnokPfCkPWterxLJ1pAtMOQ
7afmz9FJkvo4ZTrtGVqsJtACF+cHswXrctSoUdieGEF85jLmJ4wvOUIKgzBM
ZlWLRrjOuIy91ZtKB6jAgbw2vE5cquCrbBwjYZ0xffiv5UFI9GSW19+0dPkN
YmxPn7536ofezn6xWUUiIBN0stCJjWu7Igm4zmQpFlaTiKVwaCbrwnXhoOAR
893mTWe/Zdd1A9pmHBV/Hw+X45yPcNf8PhcbUZBkwhL30vK/mdM9bSsvwpxV
ht6X/d5+5TgVjA/yHuKKTGWSnKI3BJvXU+iPzoe+O0S5lEu5lMsfRelrtkxB
L9P9S2eq0NL7ksP0tgSszferl34wSfnwyRsN9s+m1+RptWLlzZ1rbgOxvydb
hg8fDnQEloMeAYSgcaCgSE8Cg55tadugEbNGgrWOzxagPmAesATyBHay73HH
Hce7zljxGID8pQem8GqefXJ419Ue8ZkIbn/l4alUEO4CdUTpIjcnh5qyWytS
+SXDGyylRJApx0YEGMAsKM36UQEGHl2PYvMXT2r6wonShsXtHFckzFdlZDw7
4QbUJRtilVLxhc3CQvUVwVHC7/e///0K5oAemfNhw4adfPLJzDlQk8ln0jiW
yUCVMQQrcix25KSwi8mDgKkjR4405Sjzw+4cgr30ANMrjiKfRJxsV6lJteZH
twLaOb+cQU7cqaeeymcTEtF4OPZBemq86ORPRzjSmYjzDbsp9Cc544yFgVBN
mR1lcLQgtA4iK5MflATh6FxR2j6aDGEdBKuKLUrE0I51sFmGDh3KDDCWX826
gJfmD61xdKaX7XRJG0G7UuUcdmT2pBIF14tj6R6XX8QWdjSbFRVk+JsGi3bC
k9/UsoC/0hObG3ft7dq4edXjGxtA74B5/560aZgANWnc9YLeON6Fi/FP75/k
D0q73LVoqrIBI7GR3ipxKebU2j2yUCamYlSZXd95TXYpjWmP2Dd3an6FErcj
D+T/VHM7YkkqU0oy9taA04FJKtuDLr3ZXeieU7NfEmKvkehKpcyZQ0Bx5w/b
p4col3Ipl3L5oyh9zZbJad+URjt2dxxQI/2SRIcDkxTqPrsLcj7zD5pfgi8q
bhf5SDNobl3Y0rYIaC2OAiICIBUD56EPJmELsASgItv5bUkRAvn8lczAr1K4
dUUqmk1TwCfw/CeTsuH22r0dk3mtu3WMTlpaa507FDwvSOMzoH1X2wRBGuBK
qW0xVQC5UErRH+tPirEL88yR5E+6nTU3GJSf9RubtygoOkzmSzMn8OqXFU5X
B5JjgfpkYjA0NcBDlkR7RIAh/reo8R55eUzcCRQBUgId6Z6AdsyYMcyS6xeA
cGwoJp8PwEIOLYrmuLTgLqB90TXtnHDCCVRjqoHibGF6+QAWpaYaKcJgfeAu
LigdD2hv27iDHRkOmJZzPXXqVJNM0QItS7ORV8NBw5EbbAGOqwElaI8YBG2Z
WK+RTyUGtj+c9+4lo9WETzPhxcDaJs6tQxCUGiWtUaYwvghc/zkGAkekz8zh
lvlffnr+lznQRz/6UWaSmoyODzSu4r02oJQe865SFOThiF4tWiumuOWg4nzl
PV2tcGbM3KR80KRJk2prazc+uRrcnna8a934t1VgJy4JhVD263gPbO/1GeKl
IQsplSiT9aunOXJsZyAM3zUvFZAKOq7zqTJNZ7+lbcZR+c7ztPlfmRKAii3F
6IL2/MhUcof00XUvuC4TAadviJul9xFGaVdJ8PDZXbs+k51e/wJ9nRqpTHEv
l3Ipl3Kx9DVbJu16iuSJPLvTWWlKFAPlBMA6FSUMRM7EgiXAaolmeQ4KUH0m
SuE4NlvAV4pdq/U3aNAgoDtbgD3SCYBzfP7Yxz6m8LipfIRYSm3zXFu24sal
y28QURhYamsAG1qWbi27GExIawBODjRs2LChQ4dyuIfvmvDgHeOB9II6PoRy
OAdiL7k6kfNdVz8/SV2QPZ5W9pNyTw8lY4iQ6Xagbo0X4wgkV4dnfuc1Y1+5
YeKub9ZyRDCP6JGeMCf0ROgewYxytvVFp08TPzFqIxmNFZXnTH293HRMkDxl
yhRQZU1NTXV1NdMC/KMC+3Jowy3N78lPUv1tR7xNNZlIpl5VzjFII3+bLcw2
sNasowaliu2Zeb4yNJrlpGA7nHXWWXRYLzRFQZgQkJfNcmQS9qtZJG3Gd5MQ
cRQ6xkF1vLtGo+EDxKWHaxeP4vxKO7E/kup1nitfYxpTxqjx4nKGlAntNU8K
Y6Sf7MKowe2qYjZe8Rle5lSiJy5tYNEwHNOwMvNMCz2RvsJX0bhrGfwkDtc9
zqkxvy2tcV6cRraH2qeW0UknnTRu3Dj+Sjv3dKUDvR/f1CAbxEnzzsBA2Fdi
kqr+RmoXw2n60v0ci0pHJkL9Ec6ZUzOTRJfQOBPFgaisQZcP3XOI65mEZV3Q
JxADiV8rkhxM+ZwZDT1dBwW1X4y0NQeuIQxv7C36gJQBgnEU5on+dlkrWqnB
GXsDO5lTnPyC0vrlUi7lUi7/3Upfs2XiyQVu3/PcWl588KClS2Ui2yj6jTDM
ilRyz/wSTvicpnKKtNjIHsLnSBYJZgN4GGFnBhwgECiRpxWIzmhH4/4ARcrL
2I5MEsm9y+tv4hUO2PA8B7QLaC1+lkqhU1eJ8j3tk159ZNoffjyNQ48cOXJI
toBmgZd1dXVAJoClBINQKZF7w+NeD3wo2wSiViFQtoM8H+eBLjWfc+SurGgG
79KG/YmutvzDoJdmTgC300lRn4giIhPp7ZFJ/vpIA6TJIIlI00ZvsARsAS1o
jS1mAhLh0z5mCy1jwowePZrBnnLKKWwxZMDJd5jKttMThqm8iWBMHk6oTWrm
RH0FJMHtGguePsfFWQap6qzmK3MLuJ0wYYKAXMsickhx3PSqREVWGzx9cYon
mXCwK206P2ENaeZQ3/NOBd3UeuMFwDqfdddzTdoNHePs5fpONKtbXo10BouZ
gMXB5UQjQGgmR/zPFDE6ifpUcNnFNjnQu7NFdUfPkc52pkIHPpMpB0najBMi
yNeoNG6Xz6NGjXL5o6llQRq3b3pytehXf/KAJPGZaFAfvsslJfjnwXOLO4zr
DjK1KhIh00webs8kQuVV2cyqjEUDSvu3cl9RmhyUyC7F1GiDD58+lveuaC3g
etxv8+nrxoRGEoQ+gqkH6qvRwooxsi/dk5UUJpI974veWiqyFPc+PUS5lEu5
lMuhLKt+uWXt1t+YxPAgSp+yZdKPidAeKfbgqCjEVw/yakVWViXfi5UuvRxL
KDH6gObRo6NS/obZhSSimNATkLO6ef7S5TfIYBe5AX6MTlUrm69CdLUlxaKC
f4FBWjPNMaqsEppvCmjrzt3VNkHcDvpSKUV+BXgDTAuGB9OCbAdnCwAJWAUW
VSlR1oEkfB2zMrGdXhedtS+U3aY/Lef2KGa8OhfoPlBbw47Jb995zdiOc4fS
KxGgDjc91VSmh1J0nNUQGNeaMHBAapPsa0G7flrRZsihMM/gzI985CO1tbXj
xo2bNGmSMb/89NfZYuQmxcBGk4QCFyV+UE15QzMQ0UNFYMDhzKpqhBxrfn3r
3OXNf5ctKvMD0ZlGDAQlg2hEk4TPI0aMYF8XNTiE51qXvurlYkhnIKxCqSNg
YPqsIo0LPRFU6MKEYZ6007VoRMeCGvM30Ss9/7rojcbl5EorEtTJnOFXuqqv
Xje1KaJUeqQ1Tg1TyvD5TAXDpSU7uXhkPzXEvPw4I15C7MXUebU4w/SES+74
449XtFPJekfEVDMtEuOxDqhDN5hSTuLuZ9cEbt+6vWPjk6sjl1kY43IwmCIV
VpWv13jJd7yHymhFImwekqpeZv6jM4k3Pue/rwWdSRjv6v9odaZjt3OoMl69
xe5aaeFTS3D5hOv5Xu5Awu4u3ymuor7zLR/EGqtBBEG2p59hbXkeM9k7al/0
NopOgPj6ysNTX/3xtKZZg/v0oOVSLuVSLn1UAO0P7P5P0PvB7d7XbJl4nIUU
W/oBVxCrp0s66OzIRGul4IF6ORAxTzzf2QuEIHqUygI+0den15rtxx133BOb
G5/Y1MhXIxnlikhaMF+nCtVsZyDYUDff32hvPRwNzl66es6ypuCfy7DVARvy
jHyWHE6FljlDupeMVv1DPK+72JhQoJTIUy89W0DvQNyRI0fW1NSANqurq4Gd
wDbqmJxUaKfHW6EYZ0DGxUuzBvxhzoD284/Ww6Z4hT0BuoPbdbcqZqiHWREV
+S1SOCKVp+sIRybi5wKYI7PJQBWulPOjJLiuWvkVuvHB7XSesZx44onYKRxU
77rKEnr1ZVyznYGDKkWP7B4K6mY74nCSUuT/UGfeihagu/52oLVsJeP+hKym
UqICe02ZMoXJdGlAspMME0cRYozyZwTnDJajyKs3BW1lNk+Q7HR6rsKkWMgL
bHfbxJcemNI2r1p9HpdmqE/f9D9jWWhK0KaJwGTmy6tRpEXQ6+UhY0r0G7to
Y7pi4pqRtoC0IsUqGal6krK/ZNHQIKeGaWFQfAb/G2etbahVGNYKZ00+P1cg
5657/Z27967Z8+zan/1rPa9nn+/e+/xaoHtop4iuNWwNYzEXrXla6UDa+Rwg
OR2gqq0kN0n3e9ohnH8HiHSiqkRiwpgWQejujahfKh2SG+P2lV+OSOVOFXXb
h4KykLGLC1teDNq2lal0S/u9jx10OYi7vSs7mexUcGridOjcqMzqU/Vpn3Mo
7j24/ZFpO1vr+u6I5VIu5fLfp1x/0XvW3f5+Xg2z33cIDgdE3LDzd+D21b98
+qAZLwdEejzQUpFInIW8Q78i+uoFS0ScZZJUI8Vq7repimyOeBd2Q4kCZKWT
VpQl9hOaisF4XgBgNj65Cui+snH2j5Zdz1NeF66sS2Wumx/d2r3thQUr28BC
3dt+s2HX7266r0GmgW5JfgK3S1petuLG+oZZAYzTxCGOqHxi8+yT2+cPMx5W
aCQsFICBbQA2OtgBYBLsBZZ6X0WeoixwlCGxWAFSbvggz+dvktJxwTFtM46y
eyJw06GK4Zn2rhnD1l4wXKDugj54Uu6NfmBjciWlyGCpSkr/JPGT2pKqjpi7
RwSrbxywp2f7lFNOGTRoEKB66NChIEbGosGiAMuRid6OoamDBw9WX5FfOZWi
Weniiv/QeQYoDx+MSmWOrjkjVudAR2blX+gYLchXobhl0qRJzJ4ua2NgmVW9
4qEz47RrqVGHBtVa9Hozt1EobRpVGmYaX0Hsezom8R7aeqEVyUi1y2iTzhgQ
wdTJ/JHTct+Fpyy7+HT984oryjmRne5ijZ+V8eHy9rOJVj1lunytxmdmzKgK
QwO4hIxi1hRidFxCUtzthomihmcLU4qpK8sdGL/hwXv+5WfLP/3pT48fP/6Z
7e17n+/etbeLv0CsT0XwsmasFBpjXWk8GFD+QULDJ6ByXGCRj0xOhZWL3Qfi
qyJC9DlC4MONn0kSPbikUuLOE5HIaeJ6weW/iiSZrLHAade6N7o3KgS1WDnQ
Bdbg+QjOOfXR5xyfQx909rWSQ3FvmjV4V+uEsr+9XMqlXN6QEri9+/b39+nt
16KznRco0efgwR20T9ky4u2g/vYrlNq7WIlV70z2+Qg8K9bV0kOoShIsZhKR
Z8EwqGB5/U2PbVwJkFZiAoCnX/fIRN6QJ+ze59e+lkRmY4PuTVErsAeLSdOJ
F+i9+bGtfgbG68+M/Eeu9vJh6fIbzHOq4p86MEHO9xG5s7XupQemAN3ldUeU
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
JllCrUriVWMOVaszbtSZjJSjMb2izTu2vnDn9t/ete3FezY+xUNf4MpjFOgO
gBce6D3WdaZaoC50o8lkraeZQq7e6ruWLmLaJn+V9KLoBIMFfW3cvGrp8hsi
M4uY02Y5EAPRESpy09kLbuc5PmjQIKCCmAHUoVdcjyiYnLHoQjdTDygLEKUI
dl1dHQhq7NixQB0wJIdw1V5JQ8WrdS/LzFFAvid71MaG+oZZqnODWDiKleW0
KILB9DLzDETTSYaP5GGFQYK8qi/O0DwVuXk3FFRCiKgbHAVW5Gkuc1gH/uLV
XYsaO5QHkdujJIiJPs2XKrFBcT9jh1XjFFABw5R/p2NCbklNiqKovqimulKZ
6pk4/2YgNWeT7llzxcoMNwOXVJkwN7yqaZNhYkYx+QZgig91XQoRBe3GokaG
LOaKljnjxx13HFPU1LKgrWOxfmna5ESYVokDtZ8zBNwur4ZDs4tWGHNloIT8
K3B7/WVn8tNHsoWZl3jfI6t+4VtFsHw1EtaMVDTFP4K/SZBeQMI//tqfcxVp
jFCBa4x30DhbqAA+573l8W1tT+wAM2+5o+Yn33iPPnyjFb6/7if/tPbHGx68
p3v9ncwMkJ6egNjXbXuh9fHtx2UL1aTigPnv7nqIFxczLZuYSU+4K0dc2BgX
XC00DvKnZbqqw5+poOa8FS07f1i35Xs1BurSsjkCeDd/K41IOmLIc5c3z1nW
ZF4qysKGdgbCKDhfLkJRh4kyHpx3ZoNqLoS9MmdArJ25fBP3dk/TZfc1guGN
8qCpb65es/Dfn778R6s5ayGc6z1Qm7TlXA7R0/Ke7/ZJ1p60JzwQeJDz859K
FK5YV1SLlYjb9WsJinsme9vkolVDJlZa8xkyFh9JTWe/peOCY9Ltpz0kbzo8
zl+qqMrGCr3pHSuXcimX0qUqySZ5QIHkfYTnn5p70dYFX+H95zPPKVghfZtN
09pzKOJp5knA+/RtSqJLepeqlOBMJpFVTCP/WCcVA+v2jKXVTILbc5Yd02jZ
3XnXjWwoZWT5TAut60L/yr0r7tzWw43hiTn/3566YmmTsZM80wHtix/bDjip
qakBTuhtC/06/cl60jiQrNTgz5iERZcsD27jBNOr21IxVYpb2Th7557OJzY1
GlAZM6DGuFwjOqBauAGktNl6Xg9IAG/s+s5rEh977/qknJDui3vC7nR46vhV
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
w4/AC/ymVZLJ0CreAh5mhWJazksqcTrZGBOefw70ueAZ4yeN55017AK4lyok
VqJH/CufKv3lLTZ0Gt+8y8wbMijq9q7lnjRZtOqGJP1HkrQB46WmDcaSq7z3
Q+D2v0kShTiPaaMuwaNTn8Sz8qLzLW4vL7+e6QVJnza7cenEpZqFY7579Cjr
1q1E80I6JZuNYFj+GQNhu2Gqg+f7kxjcYaQdKyOLgtYvWvpJm6CeXKWW8fLU
s7llKVWCrGgRSUTdvrb0KtDSkYCrmKuSJGkqi8IkxoU13SuNNmvNrjuYmCE9
JKJmosFpeZbg4S1Nat8V9nhXivroTsgmik4lv/jSywOv59OB2zvS70I6S9ye
kbzLarkz3g1ut3zfU+T3ca2Hn3lux2lssW/5YmoB7oVhD5ORaP6DgUq1g+wo
vmUZafK1on0QpxsaNR23a4bnRJSRsKb36VP1+OPV6q41fQkFiKDdSdVtyg+1
R6+mPdKeO6kKvJ0tmdLVpTvROXOqGA8+xoiUqptS2PNrzSiZjHlUpzirZ2cf
z8l5iQa7OyCpo/H+mMylqQkltjsOMiGovZfaRS4XFfLCfqlg+HYVCz72sNsx
JimXKCOwECukuHRq1SmS1+Zc/b/hNjTFZKHU71XxQbHLiuR2Y1mkln/4h39Q
NWfAJrncg31d1jXK5CT91WvMOCku1qrZKQSIzrfWPmrvdXqVtQaJIFGk3Hh4
QIocA1DBak6xbtCzuOtkx7J+ZPCHjw75yOr+KcJnAyoBSIABYEu1zeDbRd3/
1yvDLj48+MPADPIAukT44AQO6hombd9V1tA0mb8k4paGzgIBJKAXKUEonHrJ
o7Oq2vic2kVAI85TEQhKTThwziChSBAgYcOn8nPFY7es7HUrDQBfHav9wRuL
buHz2qIfghj12SQByfQrpGoOKHb24tWqWCkBlKi2H0wLoAJwdunSReSpEQj4
B4j4SJKA1qFIByuCVBFqpN3jkhkzZpSt2TRv+fMARcQECVvEkAUFBerAxc/A
bK4Ce9MGiuXn8OHDx40bN2vWLAoHV3MV0L28vJwLAc8GPKIx5DduKXmAoJQ5
f+3mklUbAPaIAJRP4cgF4Gqu0lre7QajZYHqyUkHAdLGV+UA3N7U1LR/7P0v
DfvXHSPvSjlv7jwClAXYbxly+94xv6YNxoFKKd53HJZJhqtAwvSxcOm6/EWr
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
FLRTBS0BPHCJFDRy2lCmxgn333//Qw89RI30DnzS/PB14HYaCbLiGzhEw4zj
06VLFyCZdg7GV5KdT59c7YJoBmeUArjWcDlGk6RJat3X9fsRHzW9QFaQ5POD
/vb1ERe/9vSH8haseOCBBwCTAFHwOVCQ5g0fPhxIidSwe8KjB6b1AsvtnfLt
/dO+czDvxlee/QS4feGOA6BfGc6Bl2Tu379/v379EAFAs8D73NxcoCyoGPS+
cejnAJPUToGto/6Jcl4e83HAp7wufIO6uVyKdY4B7TQSnM9Papk9e3bl89vm
LX++Mvf/1Gb/c33RnY1JhNAUt0zCBoOUwbVysy9evLihoaGkpAT4XV1dzc/U
RsCe43qVUtq0adP4poNgYJCz8ZiokTaDn7lQTbtm7fIubt++feneoyBqJILG
tpRgwkBpG9O1a1eA9FNPPUXVlEyZ4HNgJKIWIhJ3TX5LRpif3D7GmdYiINA7
dxZSBbad2rhx4/r162kz9WYmCemJC30MKJP7wsOgWv6lUR97ccRH1wz4q1X9
Ps2zJ3U8iZ+c5JmkUr55ljSPIYMSIk9g/ca7a16407eDDFyuIGmGW265BTFk
TssazgO2eT715lZWpVN6hehzamQlnn+u8iSZuQTEq7UMry3/8s2z6uRj2DIe
bzKTU5FcA3jfcSC6Lxd/8Sq55adhGCUEJ5gqd+mV6Oljjz3GA0abqY7WKtjq
9MELohs7hRsVwpZwLBuV6mUnWCdwQbiSAm3QTVUFOH8xz2jRp8mKE5c+O7re
c0A5XKV15WuDbuCjPaQml5q7M7lF8FOhsmTFqiakzwoNm+up1iwW5b52RDMx
Z3iEaTUaMFvTd2dXrnWBcwUPdvfgZFCRFeYuarfOgBnOQALZYSHTkTrSWabT
cHs4ibzjfpOEkGeIoRAWNem4XWaYoIUMC3btTGRuSVe8ByINnX9Ul5c/iA8z
knY47k7qp3lee/AmjoW1Ge1e6sVDv5LC7YtueX3hLRWjrnYDUeCt2kG3UH4y
E0rhrgsnM5jQXYFF0xS1vm4caM1iCo1HUM3oOiSS1LxQx0zj6GkAA2TNyXkp
O/v4E080TJ58guOuXYt1UHJ1MGqJC4EaIVsrmtV5kwxqocNSXaNN1w5ZE1kF
tMBRmS+Lr1Y3FK4LFYudcY40Dte6ksxKAY89Vq7ZDI0cN24vkFs2BjuIzHLo
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
syZI0aF60kDpRiwC+8X73OhGDlEXkREH7IVH6zdu3EgmBjYtKSmhbjk5OSQr
Li7eGt1IADnD8JTCDVKTpWsuLF1an5eXp56PqkERu9SoXxou2b17N/RedOKS
Ou2B0oH2hSlX+bxFPSb267Wa59hPXU1i31TZSBGUS515VtzIsmXLuBGeedbe
o9OnT+f/oj1A72VD/zuoyd/En84/CHPyVZ+iojv/teHYoGLoHTjkDBM93bMY
TotXWLf8YDYTZ3iVF4QcwHKuAjVphK7mGHTJIKRawtKogGqQmLfG0KJkSDPT
sJr8DdCsEjVpOEN9jN1Mubxl32/auPzbTRuV50ZUpNfM9uYiV2IE3Tf1eJgc
/iG66TxWjOeVN9CbK4Dkz1uvOg2vOWmYSpA5x7qR0dKfIlSE4ycK5V54krx9
VJU8i7o/tPGNn8jtdMLZ7b+f0+Ff1JxRVU+LVPLUkTuPl097Tv2GaWIj2PME
lKKTWN0bRSgGaaIaEQ2ZEa21qQlB4lwTNNI0YyK5BWKXih109C1MoS2i5KnH
M+MeyqUkUO4RfDtoBSa9O2o4wjpoBjspMnSN29mBS9tBeh/rxfF2irAmwV7s
ls018Y8i2f5AYg8//WoiieGQkJXHscR+9xrCzdvv6PYbo/dPtY3dJbffvsxk
hmH+roqIrwxdmRJ41bDpBjkvkS5dNlpFIHsnxelBod1SInLyiuVCr3N/Felb
RJVzpG5nB76kdOn6hFE3j8vVhjpYsZzi7Mek3JSlCexB1139E/ouDXmoobgI
KPbuna4tv3JyFVroae11NfBvEZ1WqMdIBdQ/lKvtzNW68ZkE6b1iYQXy9PBy
NbkJ0uTDGbr9oMfiMKEWvYTvFEmFGVV6lOTo41FhkUojTjSUzzOyOH8J1K0P
Ri7Xu6NFuOwrS6t7o5mnkUytpHo4jFP6eFQRlDMK65TSU7r+XlwHEf6tjxM6
bb5CgFcXjnU7yQG4zgTK/2Lu3IuUov6Vz81FZCObcLmKr4ZEd/FaZzvOAvI6
/TC34w+cj1Clk8N+CrGzv5fQ8kZCq5LeLeGZMyOiejKJrS6N/lnNpNenR7dp
06ZVJL7ADl5WTXj18OhIbCMQC26H5/fEtdWVB2gNFe8d/hTonpiYCMYr69YR
+pQpU8aMGXMh4bF3E1qTw7Dopg0mXA3nQ/tcSA5cSP6QfLt27SBw6J00yuQ5
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
LgeDqX36rDbmERgs2IvErp+6BGBlnGvoKZ3NQFHqsTvv0P/wF6Kbhp/Craoy
mn3pTEw5kqGanM4wBql1r6o5Ewoq1rt3Op8uBygkZxBUiV3v8VzLvbimoKDe
xQXnFzp7cX6hLItfda2vcF7UHzQoyxis8+ZdmTXrBJ8e84j088wBw7eL8trf
qZUqt5O/kWo1K9aDBOVSMZ1aq3DCVrVtVmPtmuNVa2vK5kDslxJ/dnXcz2sn
t4esQKnp06fL85MmTYKf4VLYBpaG1QFgqFvP6j//+c/Vnwm+1vXaAW49//zz
sArEAn3BsWkl5cu37AZ0IVUdwuj6Q8VmgyiJaurJAGawk+7cDXDDTIEpQPAz
SRqYn4JUDCCfldv2ri0/BAperHjp3Xk/OzDq2QtMRhIeB9pHjhzJvKN+du8N
9ZdOLhx8LenphuRO3CZoXZ3SrXZK12Nv9tCtev2Ujiemdi4uLoZyoV8XHSqT
2jFnSUpKUicfPgfXQc3k5GQ9HDJP4R6BfH5SP4fnxjFnxo0bp6NIXceQnny4
FkqHV8F4/bRTOgkAeJh21apVIC6sywzi+vV2EZ+K1zoVFBRwBhiGxpcvX56V
lQXGM6GAkyPOHouL1VcH42HysqZty5YtkRipdRfco/FVLwcyL2q4FNFjj/16
4vL7Yip9GJzD+Y23QX7UkzwTiqKiop07dzKn4JNqU7HU1FQA3lBWTCjURGIy
4l0zWzEqE8/NeSKN6rnnntPFEP8srY6G8cQTTyi+5t/nUztN9clBZRqertfh
Z9oDTV0VdNgVAicrTtrkuEqZPHxrwC8OeJU4pqUJ8BTEm6ISOJ+8L3qeocFr
OQL3/rhpIyvDGPETKVWSJ406MNRQv6bMLmk2e5c/ezqp5dZ+beg9qCFvpctt
eugiH24HylVjUKQnK/KhJhxQW143Sud91zjdxOC9jhZ9ZWiQ1J+3niK4xCq5
jsABj0InS/xkLGkVLy3UjkijrRDwyO7OvoVs9fpl2Dv6H91Lcp5nRSX5lWy5
F3tvVV90pSVXc+C442iiwMfhSZ0WUZkL+dWlTyOfOq45aLq2G+KqtIiGbYoV
N7lKa2ereF+Bv2OTapyK3e7M7YrCFEPdQhROB8Li+C0XfhRdgjsUfbsyfCD2
23Nu1o1p3m7ZPlW1md9mbo+dX8dajmiKoltF+w3eXHoktWg0hJRU6coOVCxX
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
D7QbcQnqht7BeGXvED43DrRXTv6nESNGwOekhKLbt2/PAe1NtNYnErNCyJbW
SCY2RbBcjS+NLGjYSuY1XKXl8yttjJfCMGcGbAVHDVekpJomR7ZcxbG0L+qr
Xk7rpTXqZ4m2yvvilAFaNjCThtXKvXW9AlrzMuriSTgUpHm7NcChdD1Q6dmV
CYWCdO/F+BT0WnQsqpoA5xTB7VM66TmvtalWqFrEcIPSu3IPusQQv0lVQD3G
a3tCbhSnfQoJuNaJg2aw3prSe36iMtyLQ5gSdXp1fY5pPcr4yABBH0X3QkEK
hT7btGlY6gAXtEkdTRxlgmmYcg/7OkciR58QkTx2yVvPD5KG/X9QfXdgVfQU
nCroxsGa8NWV6OCjUgmb45QKn96vZlzWSv5X8dIOPJC/6wIOAS4icy+OOPoo
cBS2Yq7FW3nJ/y6RJmzpY759dUMbdg4+qTybt9/d7del90/JFeSnxO1BQ+ae
phDJpFGMbP+gD5nw+ovQSt0Vy4vuvJ4hyqdxTk2sTaj2NQp7dfRnXGY7N391
wc7MRWX9h9zb5NJWBy8mTk1LPFCxjE/9q4Re1IB0qvro1UTT0aBL76xEt+R0
QYovFLa7CiDz29PKvT4ZfkrfX5Vbc27sklU6B9AM0welGDk4qxSqXRWVWl0P
VVtbbtfNrw7exWYdOCjTNqaSYYm4a3pFO1uNhV0hNXRp0E3iyaiywv0C7X37
rrGGTpRUTTF4q2us6pDrgsbVZPthOZzMXZx1QAmLti4l8AT4KXgqdpnDtRXB
PijGW0qQ2Cs5ZzgmHyo5bFgud80l/MQomd3+++y6TOdC+T+/8wMbuvxIx8gO
aj43bWkZcJXaGdXxxz/+MWM6Jw3dYgwafWtQLjV55JFH4PazI1qDPZDMgAED
pCN95cEnOtYGY7gEhuF8hw4dYEWDMRmeVUiAUqAOvThyxmDxIBP4ATVplwpi
zc3ZBLefHdl6+4DHwCQQHXTX4SSXc6Excch/4MD/w96bQFd1pQe6rHJWJ+VU
upJKJ6nOe/3SWVmpqnTqdbrc9V67qlIuVxGXbWawDdjGBjMbmXkwGDOPQgwS
o7GNwRODQEhCM5olECBmEIMYJTFJzBiDwQbW++79rN164HJhG/u9TnTWXXed
e+4+++y9zzl7f/vf/zCKCxkxhzT7Jj1L8aZMmVI1s3vE/WNcm+BS5k56r3c1
09bPh+8Mv7Bo8JYtW869MRCGB5sLCwvBZgj2RsQdTevrMzueW/zr6/HNPPH6
7E7HZ/eGTuF2koH0pxb+IiUl5b333lu0aBGYDawCqHD7mfebnXzt50Z0Kqm7
UhKJ2TqWD3xedmDcuv1jysrKIgwf9Qaz8fg5jpeUlCQnJwdZOigeHx8PimsS
C/SyAxLrd4XLFRw7X1BzHvql7pAwO8A5PAzo0iC0Ej9JCRi//PLLOnjRIyXQ
DqVHrFNXrYLeI5ozB44VHb9IGWgBqL78yKTNRyfv2rXrwIEDe6MbO3v27OEb
UIfbk5MjHmz0WkNFcnNzyUSfOcwUKDxNweSCfeqydu9Rcq6oqIDhnVbonAcm
JyVpVJuBlrmt3PpgkcoG0lMdck5MTKTkqr5PmzbNgFbM7/QyqmY7bwQ0zpPJ
I2pQXSYs5AlCC/Yqw7AJ8JzF7EAvpnAvbxPPqlmpNq/bFnibPHkRtLzgOAnI
UyNNmJxZZH71uZUbdvBI8yrxnBuqVaG33he5tOJ6Xi6IlyPs8xcJNEe1b2Hj
jaYiXIjXlgIoM6fMTrQpKiXXc4uWL/p+16kLLcZ1ean5ixdQlZh/im7s27vS
Ysr5SWN3YWfFN/mTgEszgaKElI1Ly/aqxNvnkD+vpM7zKTwl3DOtz77pMYK0
y4Xa4ytcYozgJz0bhdShFgONaoEhSnhYmxYkDKsU/C27hB2smdgcNRykgukQ
V5TVDR2ojMvRk31Nt8xKNlZDVfm8MjG9LtBvGwQqjOlBafa+aEjE2+Tnv9ee
NOC3BXCk1rVO8BGtE2Atc4MAx6UBsT8MLmzsa/DlCgKbN9HW0OmBDnmsYIj6
Cq7fKmt3a0Pk04jujZvb3Su9f6bi1rIVk/l8xQLcE26/Tbn9Tm5nR9izk9E+
NFw6OGZ3ai9g60aS10o1hkDRvrxq2Wmeo7Tcc93R8NO5v5yvJh7X0i6VMvv6
Kw3wRtCYp06vPXg4xRW9ENqJkpgyeE2UaYO+n7MGoyPZSdpDqh2k40d98+pK
S5P82PdXp+8/DrSXnP6Ib3tFBdeaAChyp6tRoVFzoRCBSIMmdhgpHLMUazuo
cZCf//iP/2gIIXXXHW4Eb/ZJ4CqqCvZysua9dmLWTthWLuQIovBKdXp+6sqY
q9gTFg7886JB/8G5g7ri5K9QxUFKrRg2IVxNFavG2K2VljhN5s4aNHclgY2j
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
L7fBeeDzJg24PUzwRX0PysC86UOHpr777jU+vOD0q/pO8X0MROr81z5BotOI
1RBIStrVJ2kS9UYbor/Rg6k5b1S4YChqy1CphIrqIctS9WCjP3ldxIB2Lv+p
GKPlqTJzJd5GetV7idJ7ZSO+9a4FBJfvHglOuoBD7SudERgnVBhWAV75uTZK
LmuSXt87LlCm9/yjvH5/mhMT0XIXMt30YS7k03qGLlUcNDclJ35VRrD9VO4d
wpQo8WYQURXf2FiqJM1amV5cd1XNmZmJabSny81KTmx5dsyTWihy/2F0UxtH
GyudqhlxSTl8WA4Oaup6dFcXhWRUWStU9nVZTF0Y2fV+44yAfWvx99FNX82e
cnrM49emtMh98VcGZNE6lX/JYW3vh4r7P8KY7mIExdNzIwOo4RS1X9D+FB5w
9Be/dRPHuKy7ibZt2xpQSaM5cAK6cLiHrLRxgwQgCv7lCPuAB4RAVoZ9IR8g
ir/ACWhBkTtMZdBS491AZfwE8NT9BqVOv9bv+qyOcDuMBIrzAfm2vdqucspz
/Lto0SLAGGTSRR4MyYmHpnW5HPsEhP9JbGsYDB5W7g0Thng3wHBcXByXAM+E
53HjxlEAaZmzoFnDEnE65SFn3cUYL4mfkGHRiYvFtVcgZJgW/KOEEDsnKuUG
m/Mra1Qgp1Tkz3FOhCE5Mj66GYaJwqzcsKPg2HkmAlrLamkLwXIiswzOVYy8
Ztu+s0vHXJ/93NmlY0t5XOuulp7+6NzSsXxA5YjcO+rHhotSVMqmletb0Q28
pLne2nkQaKe+QDITBK16+VcbUi6xbNkyGFtVcK6esfNA2vb9NAUETnlIwM+1
e4+SM6fD81Q8LS2toKAgKysLdM/JySkuLq6oqGCfaQL0rlEq386M9DBPHUFK
bgEtBt9y0+FbngfyV3XKSFjqroPBz9RvfaMb+fAYcIrLK9x66JRMdB/KX9RL
5/A0Lz+ZMHIfaUMuQYPQ2nC77azTfupC43AHDaRL2ZI3VyRt2uWkgI25A/MC
sjK0E2WAbLk0kx3uFDddn5Ou48TExCjYpy489no6Bf67dOnCS8ErwMTcGKxG
dDJ6kboxraObmi28U+rG87b6ZvE2qV3DC6WKu8o5moTzRkOw9ANGTwOnDVi2
YcT/dnHyw9entvxgaltuq2aqvKFMc2hhvikeiXWGw7Z91BMn3hhSePIyn9cz
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
9HQjJTtcPolVigbkANctVxFIjpBSyC0dHVyk1IxxlwxJCagAQuS/0R/obhhH
SletQr85CbpAC4Z+0MuV/A6X89qD269NiwiwX5lCBs+QD6DiDmhv92nKi+cX
D/7www/BeLp2AjUBNhMmTBgf3UBHgmdNowAq4BDokTRKBUpcBy9R/w4dOoB/
SANKBDKBu/iWkPxZUqQO9ck9wOen5/UHoIKlwc/y1dUABE0xawDRTZ48meNg
V8AbZelmCDIH9Wn9BvQGCoQLAdQHXKRxHoTGETK5mfzszaRnSQNAzTt87Mzi
XzQt+SfK5QM8JgfqSbZGL121ahVHyE1zuhL0zmUolGQffPAB3xRh9FLws7Z0
kDnYmGTkadAomdgK4HCQ2gLaqRVp1FQhTVHtqfwjx7kWDlIWecqxUXGFqzYm
1KLoJs2eeYGi5Rt2HgDSU1Z2dnZFRUVRUZEs90OHDu3YsWP79u0ZGRlGXyKN
qjLUnPvCjeD2MRkEhwNWweqb99Zwg1aXVwHdwe1v159/p/HC4p0HAdLc/U1b
B2XtGCY3HtQtHgYQ8lA9/vjj5NCjRw8eTp8EQKn+DmRO5YHE/Mt8k8vhCQHS
8zDQLOxzsfKLuC7Av0CdisneofG1ipMz/5KPR/RdpT053aUfjvDkeEeUqWeS
SA0piGowg6AmEswMDstZ3ErSGyzA55MiKEsxHC5BuUiQNq8Y7z5vGW8TL6+h
EJxlkzPJ6IhA47yMfLiu7bNGAtqbFiZsnTH8YuLz+yY+x3VdyHjhanY3Xgrg
OneTs1ShpJLkU751xcnLu7aeatL19f777zdcLL0BoP3ioTU1MwfRvehKQ5el
xdvIrS508tP+kFNIQCb616hRQ7V1llE4V1K6NhM1Cjgu7hWr0yfLAnUccUBU
mY3iyFk5NYche34jXzBkGHLFEfDE3CFNCxIOJPYP+skOsgrwkpur4RqvHKc0
fJFA3y6tW0J3h8Xg1KY4mKoFjlYuIqifRpso1CbOZ2Rpxr+9l1swPzZTsW7Z
Wrbf+fYdVnO+LX2zp7SZy6qv891n+YY2q8x9d0IytbrzFgQGTmCvCcKF00op
6q5ij6FOLMmATLJftFrLYNdArcO7mUgy1+00MNUN0+bynFy7IHulSqTWCb0g
XWfUgCxjRxOBZm37NLMy88ACcjpgJbU8ONGQrO6qn72ZXRyn6KqpREzQZje9
+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
T9Vv5JyAGBVO4UJEtlSMHS5BZZgQyEn2u4Z6FVooyJBYITwWTRHoKLI0pXHS
V+vWJLPdeEzqritoJrYH8YJCGZWolcONWo5ydVyksClkeypHYNBSV0kk7bjG
wUgnt8cQqHrO0raGhaJEzezGQtX8zl2QLKQyvJMsyqKGVIzqAYxdgOD0E4uH
nXp7OPiEim1+rceW1/s8Ed0YZBlqQSNAcbD0tWntPpreoWTa4OKpg4AlDPGA
FiAKEP3t7OKyExdLdlZxVk79uS11Z1cUbX+/cJvcFa2X6mbwbFSNbQ/+l2nc
p08fcTu4SDoxuVGcmnugcaNSGuNGcQ8gk6CIoZwEEmZID+LaOSauLqk7wBsg
p2eiVBkyv5HY8UZSR8Aex0EvQjsRuFLnIC4Jz6Am0oBsS6cP4cNPAKQSH8ZF
BYdLhyATnViBvpSo/p5BP9k+/njgrVsDOJEPpRw7NgLoTokTJ06UHA5SBZOD
osFIoClgEgB4896a/CPHQcgToxsHFyxYQDLKIv+lS5eev1TUdL5AaUGlvMHz
1MHpBpMa0B31pEQpNGqtpKWlAeABe5JSqDbZco3Swg0PJBOGiyVbmUKDohvX
AiaXEgOSJAfqqa2ef8V4VEDqDjWPIPaLn5Q1fQRc33riApfDB9AOdF+7dm1W
Vtb69evJUBFIWsxplKGXuFJaRpSr2RxIGVwYrk9vfzM5om1CPWlnHgYVR72h
1MS2NVSukaS4KFXr9X0wxitn6VVKQdrh2X80uvEUSd4Gefoc8sTynJO+R48e
JFZzhpQ8kDwtPIqGYdW/lceAhqUgcqYm1FNZVL1QdSt2OcZZhpFSVQ1KX/TY
hgWPNsz5b0eSfvxh6c7V5VVciGqTCqga95Z5Ck8F7UOjbdiwoaDmBNM99iNL
PCl/+VXKH38x7y+UHsrJyeFeczdtWHLjLJ4T6qA8ES2jQo50ffKncXgYqBKJ
abSmKG7PXr4/1uruhx6PnuSBBx6gi6CJ6Gc0MtBuNJp8QjvM8lE/LBkecRHS
DkAL800CWe72fqoNy06xY9TbSycgejDK4mXX/kAvbYdMv6qailb6ceO2jB6d
4agXkRGe/gwfQPvFSW3psdcMeS414QV57BpwZL87Dkoi9YhLAIowG2pQXooj
SIjiSqeatnEmH4WaY+k0KrS7Ds5fQcguc9Yv+QgktPBr8RO6B4O85npBBacr
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
k0pDSmp0Jy7K7cNLp1PRkbQJpXuo36UBBZGlguTcbq+bWlWYtMKQOl4PuaTM
I9odGyfYNNFGVQYqvkGZZ/g29T3EBy7pjWakrliB7vzyUTO6qoCnp1RFAVxn
JGHcoLmkgmF5S17z055JKgn1aj3D8slTcbKj91IeDUxIX+Mvre/dqaRUY9IK
pu45FpFVIlsso8e0vcfB7RxROWXvZxSNSsmlDBKs6fSNaIyfjFGM4cw+DLAM
rVKNSZ7AyMl4pY699kcq7wXEOBSPpqPxVaGxYNSu8b2QN7eEd38Q/873mawZ
Xam1XA3uzDqlOtlpHBQAeAVfzKfMOxqKEnQ1KF2DPBIqpuqssLnmsEhDLERM
dW+I2RwjiUwkwfPB5hoyt6n4NveRqjBfWf3HwuM/Lm6/D9r/KAHEfr2s7c3y
djfXteP8Ti3xQIItv2IQmlO+BPLze9ei+b3hY6kgPzZI8L585TgAKud6a+Lg
4rIVURqShFhlQp6bsjl0nAqmleccrAi4BQkD3fneGQqqDn5EIwNul2FPxWni
qPp+pazz9fIOJYm/WZs+hcFB20m3zzTDVM0DVMa6QA15cbLKHnLJajOooot6
MvwyvilGVpslUBGU71ExMri9qmYNMF5resumz1DGIn4ZfCxP5qSf5sQ/Qb0o
9tXt/TknMmmamhSFKnurWq9HTnG1CuGOroVv/gLcntXnJ4HzKYZBfUUF4nr5
ZCRLlA8HNL4+jNsVuaiI0pw73Q0CledVF5QmVx1CnbQqvVc/n0csmCw0erOy
PLSVzmqpNeCZwxYGrqs0om6PK6ampp43bryUm9umuT4MgQjMAqTjK6Mxnfsk
bKdjOONI0aYUGvjH3NoY9fmm+K9k5cwA869/5xtN8Q/fSHqsacVjByd02R/7
Zt2Mrmfmfxese2Rz7NHKOOYd98eZgiVV4y24awz2BoSD2DMOnMyoOqlHyMyq
2qzquqyaulObR9VtHll44gLnXBfJkzuFpIvanTiXSkX7MruHgiZ5ZrgOmKcA
Ej40Nr5Ia4DeaQS9o3KLXyqodg3RWIk0jnuQmZ1kAe1lA34tsAGW7Bjd+cPo
f7kw4Ytn97W9duH5axd6nt3zvMow6o0oEhRKcaItJPgW9AIK0uISiCV6UZ2D
i+cj23LoDYdMyQ6EI9WMtHtKOKkLaQLd5dBQbknK6o3Q4GfGPXg2+mHOeZAU
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
WZV7AduZmZkJCQmLFi1auHAh8PvY5JdPz+rfmPgWWP3ChcimY280TX4W0H5p
4dAPJ3a7Gd36Ts72qxM6JycnS1kTck07sXd19IuUmTfIO9I4onPnzqBW93ro
VEq2iU8L9w4HldupL9Xk1VBaXiUdj8dLx/ffOGkI1RHkE1l3utTdl6jdJe3g
upXvK/BT4N4QbUj662IGkA5P0QgkRX94LhzoimBjPtvS2U9vXtxBjR3BP/Cb
jK4VteKgzHzU1IKUpY7U3xAjDyeUXMJGbTA5d+RhKJD3iXP9HBFkPmc40gsz
d7klrRYolGGBz5YTd/QY01j+F4VBe87Bek1ZGeWE5bx6jdAZyhgWSIrGcdVA
gSlG4IHCvVo3oBmyyFc3bRaJaNrwcp0Ck6BzlpTv6pZLWquZvAsQ2RvUBXVY
Jg7V1wMFj5ORnAZkzaph9pourllsIhmieCN8BZs2vbB+/TPqzADjaUltWmWS
JzutSplHnGukeVT8zvREXrTblKHfK0h4PGf64/oiCQRKFEAl80DfIEAskkCS
oBhJk1UxD7f+7JYJqjrwYqfAfWoAYB645f89sEgNhO1S2dwF/HzyuP0+aP8T
CdKJ6Owy6Feu9QKOI1lHJEpSU0tUH7gJay6Zvw3J2yHvXYvmHrdg1Irht0XY
NoTyBw+qGGZprcXyleP2VyUpb1+VFAMuBbGDmak4sPZAdTL4FqweUmKvWXPo
aBqgva4hB9zeEPHZuvc/XVufzV+GBV1e6oM+Ze2ktelTZPNTyYQIPwwH5SQ6
ptf+XfmDaJZBST1q0BplEGY7ROhUVJU//Qqpyi6NFRd5NsQefzCFdDxR10L+
cIMG9TxO+oB8olFlnSJpVuO2oCo6gVNX4bFENGbEed5rPw/vQrY89e6v60eH
AHz2y/8qF/0jt4K2Req9qHkumbwOXl0fUSMpHDXYF5DrECrwvmqn0n42dnlq
yp4jE5algORJxOoE5ktaYAXs6AnpBYmZRZxonSqRps6SeDXMI240O4PwuPa/
cgIr9hGKC3S1OeVXOjKnIYnQmT5ckRFTgkddAepS5PTpFxsbe2zY8NzWrS+t
f+cb5UO/rtSracKnA86Zo5VxufmzeETL5eYGy3Sn/RvnJw9+lrnPLBRPEZRo
aT7mWoBDhjRKZbE1RxWZu1dOkdxX0lkV9VU/Vker4AeqKSrQk4vbCm4lAIPB
9sywM/afnLrnGFCBeRlsA5gBtIOIwC0AP37BTsyeXNz+bifONQWVtp27QiyN
N8Ew4BNaVXVilYGJLL22mjCGQFeZ1EgcRAqycnHB45SWiugOXj15dSc4IQ4x
K4Y9unnUX3ASOB4qXbeQj7pi41JpWAS3EpsTYVfk93dGfE/BKdlJip5VUyf/
htrI4gRpMCkwaJkyK+um1iDAQ4cG7t//Jth4w6ZlZ84M3bv3dfXMQZIXxrW7
ENVOvpqIiAjSDEk+j51N3rQLkJ+zvHvytF+mbz8AYucvF1kXgMxla1SlnHWB
KuXgW/Iia9cFgBZKJQ+P7PFUkFLt2NFny5ae+lGVqVLqGx1IudZg6aTWDe+R
N0sKMTExQHHAs/rk4HB5IIlJMXhw5syZFLJwTc/M5J4Ldx/KyMhYsmTJggUL
VHGpn9kXEF43/Y1bNI+tb6a1DR0f52LJ43JMx9mzZwP7eVx3rifiXz04IVRy
WphyBssoVc1VWZHqk7YlDh1SjQ7ugkJpDStImV1q6bqUtqJVfZW0jz5YeVkg
fN4pf9WcpyPJIMoVEqd56aKaAFsYxbz0vQ0L266f35rcVc/g/Fppu7N57ZWx
87GQFNiYNLnOwYN0Wt2D/vdwYBCTU4XRQKofisqnR3Z8+ErRicw56UgRyfeu
bya+Vscct/9IWQsphinHNCArT4nb5+aUFp64kFldRxl4XKMVvwJXvrK7EFlj
W7A9yaoOJJOk1FIknvvqzxpGP53/ekgZj8FBqx+HU0poedwdYCBiEJO+kvLI
VSsPJIFn1cmUH0wlT84VjKgFyhSpKaveABnKJMmh4gvSn83b89IHmc9rICCd
LG+NccnZSu0dyr9xaOtDEb+YOuyv3avVkosZMD3uJ2mx/xLd/9sxb/2FO8sU
IG7QYykTH58+4m/cyGBM1tpUV01CndsAjL4IiQYOWbYiikcC6CKC+k9hV++B
S3fBf3MvSy1uqbtI/97ilrCdoL7N3VHQJ4zbH7jvWelPKci8rXl1AL9/l8r6
n90yTQ303v/LrfCpWyFA9YrrXY26zAyg/u+S3j9wizfp7iCfL+XkqSyh+9Ll
kYGx9p/dsq71e1HhB7guSle1g48U3H5k+oDD0wacPJUNsgW6K2PnHIh+8Eha
XkFidu7MogFfyu/3hYuVfa9u75+RNY1xA9gDXD9VP7C2boBMIK7oVcDmRFH5
7ujXjk/puyfmdeEi46fIyqGJFNRy4Ri2OnNEcjbPDlyyZtKOQ/y+tShp0NKU
d1ZlcAxelsoVsOuQFWmcB5wqytvlmWFkI0LmpJ9yqI4CkBs1Kmdt2tHqQ6kM
feqWS+Go+acKLTJV8quKuL6NdHVKzKw+P2mKbHlzXOgo6vtLyl/S/0mQvKMf
j5OXnqQCjUR+GcktkssTU9Nhh9hb39MOlRqrclH9GekW3Z3MP36uqO4SAN7q
kJRycimOOdH+l7GdVpXAUH4290GC1pY6TFJ9crTM8q4o2dZ+U94GH5dWhYlG
mmV3IlQat/Buvzo5OpUwE5WVdeVgzuKipp1UjYxOR37u3I6o01vHHd404dSJ
5NPbxm8c8a3igV/O6/swzSVlmQJ8Vnms9XhQCK1XdPKlVDpgcgu47O1HOKRf
M3e3EmRjcLVCytxynULzxidnzcoo1J84FymVXlcoKk+Bh1lucIBD1KclGpGZ
giOySt7PKCIj/jLXAyqYE7eODGnzgvoExvqdV5NE351yepAFd8FRQM0hQ4bo
OwnUBHwFFOkHR4s/QBEwjL9UWf0ESqIn9C2jv3s2+uENw78pXYxuoVxPURgS
ASYxQWvfB8ri8XMxX+ARWT7AsXpuWrd+UXHpfBJUpZlZXqeiFEkeeN1EgmRU
p1+QX75y/TataD8Y/z/nRfx32srlg2ghMCpUbxlYSE3BgZu3rBS3y2FIAfZF
PrtjdGfl1UDB5eu2LCurpAXA3u4y0ICrKrYD2oHos2bNGj9+/PDhw8HYNBQn
AG+XCVyPj48HVKtRo3tQFyakoAkwNaL1WDlu29ZLRR1QjdzvYlcAOa3NiUQx
nOuAlStq5syZM4dc4uLiQNHLly8HlgPdJ06ceCj2pSMTe4OuM3dWc3AisF8Y
DsQ/OqkPiL0ptsv/Qua/D7cfn/IKT7FYSE1NlT2eFpg/fz61k/VFcE4PoZ1p
bfcLeInUl1pTBYpNvTS5lUZG9SfbjV9NdAmsfawUvyQ+Y8aMwGET0XQyKzKn
JWlYbTPpWtI8EoFotCcfCz0EiH4mtx0R/AsyV+N08+IOdiG6h357Kxa02bK0
E9+LInowtjt9DizqpImxNUmgFjwlpaHamwwpDDVcISYfu4Jx3Y44yBDBEU+v
poyELBz4/N1PlEqRRygYf/W8xjmfGAnyHQn4+fCpDg/KGUuV3TigGJaQz+30
mN8yIzALuG2nf1LGRkYMiqFrJC1GOVfWzehKMRyLJKVhEA6s4xV5uQdNHB5k
lGZ00guJHj2UKSn4ci915qoOeXt6gttfCQfGENp22/IuZ6e0uRbV6ua4ELEV
bUhdto3qeGTck7NG/zcGZAqmGP+rX/3q1eI219e1LUh4PCn2Iz+JzK0cwdiu
XwyyI/fM7c+XHe4Vt/A3tyEQYAZJiW32HVi9vzopIFpvccvIVO8noB3l7ZwA
VO4E20KpINkW9yZsb/HJ4vbfpWZ/P/yxAj0E4KQGF7+aSP/ZLZrHu2D4O0Pt
e5/iSO31nzkCrC5cF9sHAnyDvTqA8S4HtOlovny4LRBHopjlK8eByfkNFKQD
uM4HolcgqqY+DJ8nv5xzwsUjk948Ht9fPhmugKV1MV9zKPXQ0TQQb37hbPfv
ihKeqi99OT1zKiMM+D9k7Nk0sqSkM9+4HoVAm3zgOkjSvubwpDdPxPfbO3e4
wnDGH4ad2vpsDoamhbt3f7BnDyMDKQDaR6XkMohxMmX3UbA6SJ7f0WvzucLx
9vK1PE4ceXGBnQyVH+587sbu5z+s6NaQ3Vq2lqzJP8uJf0L0+9BDDw0ZsnbJ
0n0Ae8ZSnQoF9pvyt3Cifr5K0RLeyr5iChm9fixuvxr527+6FWS2lDpSAb7m
qAEeVjdmVlInDisoDwzpy6mo8oYq97ITkKZCDyXDpLZ27zG1f/OPn5+xNs95
R01st5IVdLtTTC2cufQPrrUmU4BKJsqvnDLUk1ELxWmCW06dIEbmO+Y4zklf
JXanV1cHCuFdJsjrKAWZywTRMnclfCCmTkP0eUSvYIFWdTDl9Mmkpgmf2fbe
X1YMexTsTYHXDfkaGJ6JT0eo5kLW2ooGiqzqz5BvoOyqt3HKTM8xAkHMzyMU
UorLsgG/Lnjj36al5MzJLjGCIJxZm2maREiN88rKHhwKsd3Hp4SUEwyjkFDv
7QASgI0sfKA+ZemBcR9/hVVSnYDhd0V+v2biD8eOHQsy5C+oVZUPoi0u3rio
aANpSrgh4TnQZcuWnhzgNKAO1zeN/HZT/MON875D4XlZFEyZZOfOnWV65JyT
rWMeOzP+IUA+5/xyAPPUkyeCQlfVZignKfO4iwsND7V5lEeR2pF79sFTOQfr
FfUD2udH/g9SIybQi1+azvVF5rQQKSUnKu1XVfWrru7PigY8SZVpHGCkklv+
gjMB29rSSkoPztQdEs8C3ZM37QK4Al/BliPDQRJyxb8kC3TnhMR1mcS6AFDN
L1ckWueXGq3esGNp6eYQ133RhiUlm7JrTlEdESztoJoNWVAeWoPrLhPeDQdS
Zu0AeA7Rs8/+LQcQl1yqxr9waPbgWZV7wcNcAbcfjutVE9MD9AvUB7oXFBRc
mdDpSsxHvlCvTex6M6bdjei2HHeB7hyg/fr572TtqlF7B9RNdbQ5lZ7d1UdA
mEOQGz8qKor4Llv0nCW1O+CcRCgV5zYL9WUBwkX54cHwxFEzx1rzplyBaq9K
H9DW1b0h3hqNJuekdzcsbLtpUcidAQBexM5xY12I8NyuuzPie3RdPwTdftG3
OQFM+sWpgM2XyxVtrjXuoF7aX6vTQofXfSpJ0Q6aWdEJueLuj/o2asvoc43r
8jdKeKXrVSIwArAaZaCjakSQ6ZHceUrlE0puImnDeqQP7+kqVQ15BhNKW9zv
V4D22e/9cPqI0EDHOVdU2nenT107DVGJL51s4PpNcjaN6PVa5VavEh59xjFE
SyzpnqmanEwNbkFqycU5CfKXUY6MqM7Kwj7HSzuzPjoX0ebGuFb88u7oQqxQ
GNIl9iSQLJkyi91cF3pf+QmPxw78LtMNMzigfdDSFBMnAnPukBVpFCBnV4/l
JzZwVJzoE7vg1wHOAQjpf1z4tGxFFDjkNpgtn6RbzAIq1UTvRE0BsYwQi3N9
R/5euPWJ4fb7oP1PM9BPQGIK29XOunNj6F4wPKD9emzouBoTQu8fm5eydOG3
1EmfuRXUS1fbuflFQ4D8eUpDVJG/avkPP/wwAH7p8ki3ANQ58UE+q1VJMSD2
/VVJnKiisGf2O7tnD5WTUCG2I0NG1rSwyH3t4aPptfU5IC7GHAEhAeR/8lR2
9aEURgzwGMCYL12KdQ6elVhmRf8upM9agIFIuToDVO2pEG4HmI1ckwMI1+BU
ChqGKQYohdhqoSjE1nxVw0M1ohl5yOj67ufB7dcrup/ObkPxGOu0xFd8rdKg
+iqqiFA1YafGjGrXUAUGasGwEl15CfJff4KDsnGXkbnwzdC2LH8VIMuISElE
4BI22oBcFI0nJnfO29Nz5qoOkuHQ2mRKZJcYjsmBl1I5fqVQkDey4Pj5sJfw
8+n7T4DbGeQd0oG1coWpOaO0mZTVTtf0QP1JrbqYtlSqdFJwH1lY6wThLCMM
Zgpj8jIXGspZlVsKsTX8VIsmefCze2Je2zfhjdShL0gjSXy1oZTVM0fo0Vtf
Idm5M8Xtp04kg4eZLsGTNjWgHeiuNg6JEO3ghujSwV+lPBKp0SyWnDryiKie
+Krx8IKslE7DA4Z2I5ck/qZxUiumV+LI9CgHBVOtqxWuUy8J2+0MlJa/FAAY
fGDCD4AKFLhowJeAf5nVtcvXbZF8g9/XX38dtCOTHlMk5wIqaWQUfgKn947/
G6ljgOgiKxAI0GJZWSXQXamm/I0E0ty165Vt23rJTaf0r7S0S0XFsy6yVLgl
Bc36yFF6PTI6O/6hHWMfJ2XAhkr78luCySmtpoiySqpmTOLyPX5QWAG+VexM
phlVJwtPXsxP6pG1tOuSCf8yd+yPpO/WpY5KFDp1AmwD2rNm/MDFCxcp+b59
b1BfsToP7t796v79b8o6DsCOiIgYFg6ASWAnDUJkykapQNocgEku6tsoOhyI
pk0l6FFRuf5bVfNQZq6jIq4QH/Cff6QxY0cV6Dp1y941m3fzN+/waUobGxtL
YSihsB8ELm0LaDbEEj/rh+mJTwN3yX3VqlUFizrkJvz96vh/4y6lmr5h5+zj
F+ecuDh/Z016evrq1atPxL96fMorS5cuTUpK4u+aNWt46nJMR6H41Qmdr8V1
vZnWLnSM/xjN9uC4EVb+X7t1H41DM8oPz2pi1+pndq7qDlrWLSy/VJPmkiGH
tymiptuAh7lYnf4Sh7s5NIUmtwRSGBcO7oDQ8vJM0rBu9NCktLlEoNIMqnuj
MolkpG7K0MhuLdFPJO05X9BR0L59RVd3XkiTRFjzAt0leHSnScUwitolHPQ4
QEy9ZRHTVTPVlA1SCC1juRbl9n8+BJ7icT5DPltVyompD1MK1iocpJ3hcZXc
qNHcnFK6OsUQx3JFDwiOA8ZxmM0c2QvoviSnB3iYyHqsYGwkNb4+vggO4m8Y
0orZgYtlA35d1DdEjKMTN3nm1fPhhIsURnmIrlHdO1C1RtkOgVuOeNzVTlaV
eL3IObDLwaVgP9htpMyLsl5YlhfSRCof9HTl8HYKATS45qVULGjDeor3pQpQ
U0nbj9ZZ5e2yslqCqyV/oAyls58uSniKMoxKyX03NY/s8vf2+ljcLoFkgGHU
qLkN3CpCBKJwS+EkJx+LiALcHujA30YR+bvCJ4DbAwWGP3RG98N/ICjlbq4l
7ubOx6p1tbgrhgex34wL4fa1vf+LvfpjQ6BIH4SAalJr60AOH1wPdG+CgoHS
weRyjwDUQfKAaq6A1QX/gUgfVLxi1fj91Un7qpIA8EQ+UJMs3YrOlQj6buP6
1RX/ennpT06ujqhNigS6MzBqsSgRyte+9jW3+STiBsqq9MLjjG/Fs35dOPNJ
pZ1KCEP2rXkJxFc9xu1L9UnIlBNVskXXQnQicMUdVcXgsjVKSxU2Y1zjgkL5
tooc4t7A846qLxrLSzWg6iAFlpRSVXxGWmXR5s6Dua/+LPvlf1WzhRy1eaQ9
5av5ajgElqR6RFUFRWtWGp+6JKzuGL+0tYSNBP06BaQ6GrdOWpU+cWUa5WRM
npmWPyujkNzJbvLqDK5PXZMNaCcpVRzV3HY72BoxdIt+qQKDdlBN5oLGcQ9q
GepdGsT5wjrSJs50wmBmQG3fiMDjvmtuCfJpQ56lfWSGJE7SoGd2R7+2L/aN
NW8/J1+ZbSWJukZkbkxQ1JC988EU3jtvn0NdF6EyJXHxIi+l2P7Qxpiytx9R
aUc5vwIrFYQoD2WTR0XyRnIEV4P/7T8SHGn3mjX5Z0B3dyVA7xVvt6QpdOpk
59QdpCsUZnzmcakktoz+LqgDPMOsx/mG4d9cUb41u+bUyvXbAC2qr4OOgPG5
hxuA9PJ78KDU4vITaiJKCkAsiQRJc1fk99VSBqioG6OWC5iBX+6SHbdABaTW
rVu38qFf5+BcmWHLcFj/zjdA6TpmMmu9uGpPp7YMkVXU6dGjh0XSCpUXTZWV
2JMmT83JLmERAV4CHhM552B90cmLgPalsT9ZEPWPs9/7Iblv3vwiawf6ifoD
lJyURW7yuqsqT2U5ATRSWUriMmTPnteAl+BGwKGUJtqKEsiUwpOmDIQUiTJI
dC+Ru+oiqpdrmkpSJC4yAcDzVwev5MUjlJ+68F7UDgLEkiCPA4xPzB4EXK89
G3nyTATY9b333qM8l6I7XBjXHuhemPC9woTHt0z7kQJ8YG3h4o55C9vxLGU4
OKHnkblDZh87P+fY+YW7D2VnZ9dNf+Pk1NcWL14Mbk9NTU1LS8vIyFixYgW4
XW2Zq7GdQxj+I9x+N3k7x4IFC2bPns0CQaE6BaOoh7L61GT0mjZtGn/1jct6
R2+q+p+ik7h2o1lopd1Jz3IAknlBXKQ9eXHc0gSVBGXaDNy/AuPpPLSDrlpp
PfqD7C68R14Br0MvtDpd0piCK3QD+60r9PJ5rTYtaq/bJi52CAeJK+kYfKem
oHYKiVBC+3aPcADDk5EOm9wkElTzJVIeng1cNZEU6dN19SZGt+EW3U8SFe21
OdeRKJElTWXccGeNOLIMKSEnMp+/WjH85VcWKZUDGcGArBzu+umUWY9vyudJ
nxQYIYHK9aN/k/fazx1jAw12h2JNZR081bfnEVXiXYmo1PeVr3yFE9kG5Msi
AoMYkVX/cxh3xONBByt157jIyaqil8uP9Mnb8xJp0hR6OuBdu7D6sKz9vpQX
bqwL7YkE+yOh4+ZL69Z99Ok15obwPKjeGTNnV4/c3SFtHBC7R4BwRBcBD2Tg
p6lFMw3wB255cieOzgqVi94JvQIDwEBDOGCM/L2w7Q+N2++xGPfDHzEoymZJ
GLwsDTyb66h/7IO3YfjUXv+59r0QaP+PrdFkgAlMWe+MEKjQuD+lO1TNG1eu
jlaiDqSUgFETb6rAxeUrxyWtiQW3H6hOlkoRHKUKjRoaIdQ98MtXJ3/p6pQv
X1r6LyHQnhTZcCaPMcplvnodynVBZQ5ojmkMgOrpgZSA7gI5rgj2AGDkVVuf
DTAT+cvfLurjd9rytlOXtWHUGrIirSzh/dUDuyv8ZzRTwe/RRx/VLlIAL8AG
E7Lo0C5es0S5IgXY0rCD4gJMG4j3VTsXZ6o9opmnAhCV8N3WlK5QG1JgOXGE
7trPak3PuUwy6vBQI1VEZL+UaF2vplrX2jKcg8/jk7OsjoyO5KiBP5mC6jlk
fScE1DpURGeyrn1IjVroN6rwrT/nDfL32oTPNE34jOJ0XpMA2KlHYY4uwrmo
zabIUNEWJXd7lxlHHU7NQrU+pukeeeQRRdzubhC4RWvQ1IqA1I20YKzaDm6I
Luj/RSnlS0o65+e3czuAAusW1gZxv4ZbrcMBPMlCxmWL9hEUXuLHooSn6Gba
T3GdxEsHf9WtDSJTCz0SUtT86b8snR0Sy5e+9VRj5KMNEZ8F5DMDsuJIHfqC
qkHAYFYKyskV1ilhFpEqwWPq3zqyw673uoKIZMBeVLSh8OSFwpMXwe1AFNAC
5ZFaHGwgRRu4GoirtjBgA1i+/f2/ErForKqwEczJFUAmUHzH2MdJgWmUBAEh
64Z8jYM3pW4AF2mZimGPno1+2JiANDCPr48gEffi4o2JmUWkqezdlQKAR6Z3
sRnn8oHQOOA0lX9UGgf3plTuEaWTI9HA7Tt29OEpOTMpXuXwECWmvIuqOlCR
7dt7b9sWYp6UVpHU1BGiuUCJrIOU7pKgyJ/0AZbcddOBizYLYFKlbonHVWif
Vbl3ctkWRf1yraiMTS6iFBoQTMi5MnwT52RvxDNXJ3Y7kTiIZPOPNHJo+krK
H074FsfOMV0KE75flPA9omXsqJo+ffquPWtrDuVlZWUVE3aP2La5z4n4Vxft
PcKRm5tbUlLSsGBYw6JRWbtqBPnx8fEU8oMPPjgU+9Ll6I4h0B7d8fr4Nldi
OoWYZD5GN6bt4WmDrodVaIg2Y8YM0qFIU6dOBZnPnz+fX5qOGtEaVJBm0c43
NjaWuos/eUFcjIqKAmPrdUuOR42a+RXK0lC8U94I9QK9kwugXbSvjpC7IfLe
a1ghyYwEYnQbXroKVwROuKtaXeDKE9y+dVlnvxcmAm6pHE5SxGwXDtKzMCAQ
R9k+nZ+uKCZ3FQnad5uJFBijRLaiSnLh3BkHpEoiOjkFuPJdqDSoJyb+Uiop
7klTQw8+c9Kke1AvF8Xc0h6WT8ONJ65QeH6p5rojIaQKbqe+lEQSGx4U85Mp
RSJ9Ym4Z0R7oTqmIxrDPiebzgbNmTVMJFFLhg1uuaiEyssl+xsCrjIhBUqwu
P6QWuPwyQqrq6fisso2WQZSq4vhH6Dqp5NXVxa9ops1Xc6m4ixD9YlFnT4It
kpub2oPbT516Tl8tQPp91S9uPN4nZ9eLIS7lXS+GoXuPULLH+8xK6iQaAZyA
K9Rd94qywUC8KTiRRjuw/pOp/mMBjxapWuQpAg1Ofi9Yusdo/7FwH7T/XxEe
CPORyhjT/JXZCQP+oru/yuYY/t49KN2WQuDOwESWLo/kuE0mr6w+oL4xWlje
nsUBmFcOzPcivD95KhtID7gCFoLVF+7ZvXD3brA0CDDQfs/KmVE36x8aIj8H
9issnnu1aWTTtVFbGk4UVVcJfRkPHYuAiySuPFY1GDGkrkgZWMgIGMZ14jNS
MeYoJCdHoJfgWVSv8sO6w705eHZEcvb62ZHAKu6qiS33oPotoDiJChWtkz6F
FzA7xKlwwuinh1CuE1MHHIxviu7l/JQZ0mUFSen+iQgqogRegchUOb+6iNwN
nNCpiUR7uq+hqpLWr4xys9d0odguEMiIXx6n0TRldaFBHYmstymp4MWcUpJK
5M5TZKcrVVnIaATJNikn8Wk0PZbSLOD2kkFfYW7aMPyb5UO/zqzE1CCljDZT
1BccyC0mZbdohdPUlFlJeZErGl+N4iDRu5sdbrvow8glmDw2UpZJt6jPI5WX
SAeozOHia31Vj/IDPSiS29MqfHLdRZxPyWA2My2fQydcvEH7g2vGghm/Aror
mPI1ydUm/tflK4i9PrNVU0lb5qPGnJBSTeO4B1nLgNKZtVOGPJ82LKTQzhR8
dvxDp6M+n184Ozd/VqDUSi48ohPJkCHe2NbXoloB8IYNG8acCCCZn7cu52C9
NIkqmTCDg2bljTkb0eZ8ZFtdRoJsda4kDOZcxg/gOukLMAT2AAneAvnStjpt
UcOHAgNU9O1I+tJH8HIBD9q3glr5lW0GHLKwYD3YG1BHfHm/QUekxi9XABtg
G6WXmuBpwklRWVas25jJeiS75pQa7KA+Kgga37DhOVUFZOARtyu3J18QEZG3
bOkJdNfqlgBOdmeB4oGl1YpRTu5yRtUdJfCUgQJzV8UeLkoCTwSgJiA2vnzb
pNJKLor5bfaBtwL4lvTJEbjC4+RL4r3CYV/ks+ej2lJgMOqazbuTN+2SheNC
7J/fiPvsxdjvJiQkTJkyJW3Wb/JXPldTu3733rSTdbknT+UuW7ZsyZIlZfve
LdwZUjuffbBhzqHTYOzK+GFHE4YdWDWj8NjZzJ3VK1eunDt3bmJi4pw5c45P
eeVwXK9jk1/m5OqEkDvUxsS31JPZPu0fOKSauRzb7WJ8z4ZFI3lw34HMq0v6
npv3GqBdnn+3Cehj1BE8T7K0GM1OH6AKNC+F91eSRlY9KlbZQ2hD0S8vF0TH
m/UV6EdVLk1VvPgL7KfxaV5eNO1GUipiKcgVhOsyQI07MbYuO/m0FXRv/KAd
uJ0OQ7/lu+YuPYQCVy7puGVpJ54lAoda1nxcpEwd6ZluFFIv+hXdj/7vwKvy
m9uFLth5UM5JyRIpg7JxHte63KRUnFN+TmBkoPrEt+R0MBC4+iqkSTlF4zTj
2MziUSm5lp+RJITbj/eZk9KV+NrPkqxOE6xg1qjeHH5EWn0qDGF4FLQHpkYB
By8fi4tr1fnUFJLxkvjUVDYDnnJkIzXfAklxzuPUhez49mk6WtjdB27ROOL2
8iN9Fme/uCD9WS5SLyLQH87ld/iwrH11+kv7U1/k5Oa69s1F7g1l7cnidHYb
zsHtG070YSJmHHa3momMxQtzGeeK1hnnFaSrqQ5cUUuhOX+1SEnEAlxX5C69
zJ1ox3RUb2hxS2fmHgHzHw633yOt3/3wpxBc6Lmtc5tek7QtgULXvbzT5htA
nOvStLltqaG58oxqMJqsBqJ+cXtALG+cYImhoSt/Bef1jXn8imZBevIK7juw
muv7q5MHLE6evPMwx5zj5xceb1yTOpGxYuXqaDA2A071oZSGM3k1h1IZOoAx
AW7fVHeMEZWBBdRNTECj4I3Ad126dxD4WVrs1LTJLAF000nM9MypqiWoti3s
lMtdCT+QVRl1zs4X1x95jUeA9/wycnJSW599oCZZHR7GDZW6ydpo2kJyC5Am
+lV+K885GFKeRl0RyZoiUYyki4rK5bQksoST3NW+XudQFJXfwJErfwOlHYlo
ZKGnqQNaSG1Xc3eHJBV6TZI1RX9DCs91tOqOgOyRvCnKSQQVPKSCl86d3HPf
fCj79c9ruyQ5j6og4moCoB1gDEimPBowqvlJcPO67O1HgOu8QZ4tHfxVIhNB
rSGpV3gFzCbMOExw4nNlR0SQr0yzUzcjVGFixmEu86XQDWasbM+5uqCqxCsE
o8z85SnSpKYJqzuuL23N+kJX5tziuq0h4406NjzLbMiJ5PwSV5IUebnQk2SG
ec0pkot5fR/OeePBkJrTmw/Vj/1Mw6qfOjFdK223t+rFnbufOTP+IRqBR4Tl
BEVnun/NK0gsKVsACtJZKm3CXeCfm/KN77cEui8t3fxBYQWzP9hbd5PnUtqf
TW6n0Hj7u52AsnKw7BnbfW/EM0BZPXvqIxUgoT4JWBQkBioDOJkaWUj/6OSu
vr1b9jI6UhKZIYkmcqD8fJXSd6uKrEEf+EdtczAY8zsdwLWAglOKLQ0I1/Pf
fy13zCugEfLl1rzcstLDx0qPHM8+eIpVCQXQEoGpv7KyR3l5SOvAzYKKimf5
C2iRVUaacSXzumIHM1NaASG/gEPdxcbExFB3mkvvVABvdyiIo9YQV2giElFT
mvQBnJLPEAd8pcdPjWq5CBalshoI2J5cGT16tI5iwcAkS0a8Cw4SjIiIAHhT
notxX5KeFPS+L/pvV07+edaMH6yZ/qudu1M5tu1IBr0vXrxYnpz4cDg0e/Dl
id0ux3S8MKXHyZlv1S4alL79QM6eQwsWLMjaVbN26z5A+JGJvU/Ev5qenp6U
lMQ5kYHuISX26LbbF/5o+4IfhSTtc94+m/n8jbT2TZOeYclAXjemdLkZ05aY
l6I7bBvVUY0jrYCpnayVQ8OBqtGGtIAt7EYDTco7pQX2x715ZHLfgrGh7Rs3
X/jK6BLSOfII/TAuLo6FwPTp01mBjhs3jiaSS5OWcQ2oJ1PetV7JdGMkISHf
GhnR8nJV0UtBj/RGupxSekE1marcsnlxh02L2tN/QPVn89qXz2u1YWHbksQQ
WKV4wHW+XEYeOqdci9pO6quI3kX305hFdlYXEUrOyUsKF86ZsJgp+H65opsk
tccJfMuAUq/zlxYjvoorBGrn3hMfCLh95JocWR/lqjJQJE14aAS+BVqAYlB+
Vv2ZI3utG/ib8kFPy5TrWkCVP86JKZWB3rEZ0h2TpbXUqijQb6RUUg04etOG
FEmFH5V29DQdCGHUt5EoUp6xJTk9Psh8XtZc25Msygb8uuLtltJy8hHRvZtK
Wv9vejLl7U7ntCHlQOkd6F6+5TlZF/R1QuKMukxDgBZGaT0rCWxahPG2WuvN
wba4ReiuFyfp3O+kiAno+7ylkkyLe1aA+QPh9vsk7f93hQduuQCj0wZqWm7i
iLo1wQg2gOyZD9zytdo8CK0DQkh6I7haN6aB3ldzj06/iwryNkLIQJ4veg+K
3SLc2VR3/0+33I2xAAGjgkiz5v2ifHWbVUkx4Pa5h+tB7Bwf7NkDzGbQCym6
H0ypPphy8PDauoYcjprDqfzWJkVeLexxc33H6xXdVbBkbMzImqbPCHCartw4
wprJaxg8T5/N55dRhc+crIFkQH0eYfxU8qwyg3iYMU3+c2IyuKn/LCZXa0L+
GRYXLkD0qsMoqg1sOEIOixF1SKRbFGbrDFTAD94GFvI7alTOiBFZFkxPSYBq
Nb1ZRCh+V+5NfEoViOJJjcK7xFCcK7rWfpahTJN/CsmJOvlzUrrm7ekJmrWO
ma9+FlQp+LcdyJEBkEe+Fg7c+nY40DJkp0MiSkicU2M/czXm0+B2jf2FrC4Z
3OPQoJX08/t9wclUFiBGe3XgQw40xz/UOO5BzTzjk7MS0gsopEJ7iiRhgqQK
TItay5KdzMOuI1RDcrtBKh51VwT/oHE6Q2C76na2FMRqS3JRWT2RWTWw0OA6
8xS3SNPVFu1PsfV4yAmdLTN7OhOQalokbnxK4nLAtQAXZXWWs5SZtyHis+Cx
pphPq8+5/p1v7Nr9DAf4XAkb03pAqkkdwRJn8kJUGAASAa3QnQoCSABLoEQg
MdPfoqINC/LLAZAypYOOzq1pD3SX1xooDgYAsUjmEBkZCfriw9ExkOwuGp/q
7gd0SuISIRJNb5UVwx4tH/p1vjUVRXiKOReAXRjxhrzrUtjpfZJMlb3LtuFf
Ag1CCmI/7W21USWaPtxVA85771VSJj4pk0tmdV3hiQvUUexNpVSdpf35S4LE
8XEJ0nV2r+N15f/cOn++1/nzveXboRHA54mJiRqijhw5UhpGbVTJRcitiask
hzylpofkjZSNyLSDkak+eYHtRYngzEmTJklsCGInL8AnQBSgy7kcj5K6kyxF
kjdGV0o34gK3Ap85O+5by+L+dfnEn1LIwB4WZAsgnxoOB8Y9f318Gw5w+JUJ
nRoWjWzY9t6pjcOpmjyfxbWXOJYuXXp8yit1098gEbDxxIkTD8f14in9K10v
bn+zqB1/KUNNRq/L6V2qo1+cPXs2q4Prk7sEtqvno9rSpNSIbuYGCi3juo8G
VNGFSkm2QwVpc2qqun71pP5Hp/Tjndo59X+kvfkz4UAbJoYD+ZoUV2gZftUp
oifQ+HQP6VxUwOPj0v6R1PSRJL6la9E3lOe7gg4MRlTADvkpW9Qe9O5JoKHR
mNPGVb+m5STIQKEmubIXzU/kdVQ1hSAwdlFAObVY5/HqQynyJ6gNbud3U4DW
YzAhQZVqqJdG+g4d0r36NRFBOX9At07VdF1HTF0TuntIyRlji/v9av3g324c
2rqk/5OMaaYpqTsjm/anyhwcFUXjbnXxXvqEg459JZzXY5ROo9wAlW3AHWTX
MrZ5YWGHoqKOXJRj2T0vWkn3cwRXT1wp6vtLVhYS1FDmxDF/nzX9727D7XnT
fsHYW5Tw1Lq5LcmlcOaTZ3LbZU3+mZZZ/PKsJM9Mi/zVB1MgXZd8r0Uz3N7c
nY0OnkAgzRWPm+OZwImqqYmaBDn3Ath+L132fyDcB+1/xDBgQNLUqUc5OPHg
fO7c85zcFjPAxnY8LSzoaaAm0fVt/pU4UdAdWFIrfm8O74OU1bG5bVX4e3lp
XJnepXaWJChzoJDD+bi+38yZ/ldJEx7zunQ04/t9i0OxsFTtdfU5IU831UmS
t4N++WXo48sFwzMMMhgeW/H+pdwXbpR3ALcXlcxzbz3g65i9pgtoTWwG3uap
hjN5ksBfbXqloeEFFgWsCEgHAOZ2p7wxDIBCXNVFHGwdGRSei8MVJojPLbl6
4CQLkmeo5IRykq8CbW6p6+JCQHYaHRsNHZo2ffqxefMuLFx4dcGCK3WjnuLg
/TLQyQ8sXYwMNpRNaneCHIPyw1MqgToRLJ5c8ZaZW1K4uzXAWiZn54vTlrdV
VSmtz6dy3niQEUyfsHp90ukG1bdZeFbpfUAyI+avj/gsB4g0980QhuecV+Ds
pi2tWwDFA79cMugrCszlvdEX6rohXwuB9qjPgwa5MmNtXsHxEE0Nc5ZrBEkj
tefVUUjAOaavJQpmObnIr3r1TuWSukvjQ2q+BfnwuUKLSbzppKMWpaJ7eSkV
yNOFyFeGTKX6Cq8A7emZU50QVZiXsoYi+Yjkyfy6T+05gSa6EfspfpmJyue1
OpP8RFNhy8acto25bTd+ENJQdSaiACr5E+dsfvvKJR319sKkr04RwAOUArYB
yWwd81jZ248AP5hqZUoRUookCQAJLgrU9W4j3ALcqs8gnifICUl8UCIPAnuk
aicvIATvEegumZ7Oa5iXs0b1BmMH+sMkJZRVh0etYNJh+nYnnYZV9V3por9U
R5f0kj0CekEO5uKaouDEheK6y8vKKqma4lzgn+sLQCPF1gyWOgbCf4utH1Wu
nzvX68aNXhcvvkxM4vMggHzorcD52LFjqbUAmwD+VJxOIgBgGoqUaTQqQmTV
8jU+tdGAqXpBIgVQq+SE+lRaNeWJ/ITvA0v4SxZk3T8cWBRQHS7q38oVBGkG
uP3DCd8CKpMaKVMSEmctECKQCeP2uXPnXoru8OH41jfCiuhgbMqZtm1/3r4j
qamp/OU8ffuBgqNnCo+flc593rx5oGIQ+5GJvZcsWXJwQs9jk1+eNm1aVVrP
a+kdL0x8DsgdExMTGxt7Ie65MzHdgOg1MT0uR3e8Ft3uxvjWV2I68cjeiGdo
HLXKdTJF4am+Cle8FElXeNfAe0o7c+ZM4vDSaSX6Bi0JkreRaUOAsZ5VSYp6
UapZs2ZRAEpCajyoHwHeICc0Ebkw1MslpYDX/mN5+ILU01ayzYN0AzoqaJyv
TF0s0qEYoc2sMGOkEXas7BbYRZbN+a1CBjoziNpFgZ7URMsSyaq5J1UUgwCZ
akFP35ANRmp3hjtGmL8NB7o0FVHLnZ7vMKXOvBtPmuroelUwT1AnjVwCVR8Z
YLii5JwSMm4o96Y85YOePhfRZsuI9vw1nUDIr/6/Rt9aGAWUAhqlKprgFm2i
baw2+DK0B/7vVAvUgolRVJV4hj5AO9BdxVHXHZpokYJiMVqDmLSMavlK7/kl
O77962Vtm1N38tasGlkzPTFo58Q/UZL4GxKvS//tqcyWOrzQt6CGpYAWEJHw
Qw6NFrdwu8g8OJeJWsXjANs0d7EU4HbvglXuXUkmgFL3GPlewu8yKrwf/qBB
iO4JCA2cBlZ/++3UIUPWTpsGcjs/eHDK7+J1scMIxTUOBfQ2N7VonpFdLuix
+w6EFMsF7arTBJj87l3rYzH8XXC7Wdx2N6CvjHrz0aTYx8DtybF/KXWq/pjc
rtInKeUEXdccTuUAt2sFCT4UhfL9ZmRNqzq45mTRS03lXRvXh7abc/IS8gtn
C3EZc4Cjs5I6KWMHQitQVdscFF3XkHP9+mvgdkAXuB1Iz7DJoMGopeSWvETC
YsuA/VunTqpGyxOusY9ajqJByiAziZakIlidnBK039G0k78Md4D2nFd+unxS
0YwZJxISTtIfOFbMr+PImllW1PeXmvm7oanWvVCW9HlcjtxAoz4+OWvt3mP8
SllvZOMLxYkv2aN6Mqp/B7rrSuYpm02ttanOqmgZCdjN1EVE4O2aNAHtBf2/
2BD5udNRn2fWAN2B5ANGSr0gMQWUDv6qvOj8ZYbletGAL/EI6P2JJ56gJael
5IDbV2RcSZ9fDM6XqYAJS4tOvZmogaM1waoB3VYP7C5y1gZKk0/p6HmcQro+
csLVjYg2pzpvDQx+KZWGw/oQkSLe9QKPqJpiUNAkjYzgXAV7d73VDnIlqIyL
SZP6UjyNtmiZvL4Pq1pDW4EQmkracpzJbQc451g/vzXRKOG7qXlj0gqYagGu
7iYTlO+BEAAG4FvwEp9A5bvfoQ0VaANCZF98PRwk5dNdkSoHAl1doMqAR/rM
5qBTbQZ5FgQrNibBwJG9fm0oj3BCxgz1foEi3mKWV9cdvKQ2uwzVmrJaBQCD
ms8qORMBKEVqXGwbDsQkQRLRdFEjx+yaU0UnL+Yeali+bouWenLRcwK6o/A8
rr/OnNEvl4zrp6hWI1NFteD2s2dfUjbuskUSaU7AlgBFALNa6CQow0yg3A5S
rY5+EcAp5TuAk4YlJlCTODyo4QC3iA+61k7TVQONmT3zBwUJ38ua8QMt8siX
F8ctUuOvNgVEky5y/Pjx52O+EMbtn94f9dyesd1Jk1sTJkygSBSMB6OioqZO
nbpx8/JrEzsB3Q/FviRb+4wZMwDh4OT8/Py0tLTMndU5ew4B9UHCCQkJ1DEx
MVGj1Nppr0+ZMiUuLo4cSXN/6ouXMp85Ov3tlStXEpN6XRvf9tr4dhR4feyg
3R/EHkl45/KErqD9A+Oe3xf5LC1GmXk14nZ+Obd38csbF7O5ZKOFWXroypaK
0FZcVBOGustrREa0KuWkCnLIUM3h4UD1iUb6nMgVzzlfgaxNit/pSPQ9vgt+
fxwO8s/QK7QeAgHqjIn+KVWp2zSAea7Tc3ihxCQaH2Pp7KcV5pMaPYTvFNyr
MwvJAXRtzHU/c793ATzjAMmqxM5XwOTifOGunJawjH5EICkGWE1m3A5QvZxR
S80cwbl66Qwsiqad5syLByke0SSQsXY0CFlsf7cTuF2ld/ljHQ+DjTxHJynC
pDhWvqEdk5zGZEcKbiPqelu6Y9kVCJzzCyaRzI15hysuUtzuVAkn0LF0R1iN
et1Ay5mmERBtzjKqLvPJ+qxf1eW0uVjU+UppN4rN3KRdmAxpXwoHF1m8LGU4
gVslvaMqTg8UZgQwAWhXJg/kUHjYXDipVowQS3gvQFJJ5t+lWP7/LW5vrhd9
P3ySAbg+cGAyGJWuMnXqUaA7cF3mcyH6vXSJoDupZ+7Fj+1OgV5N4AWpeU9u
Hu1e+kNzDO969s446rrfWQxPIt/4xri+39S7gQpjavK47gC081WyxABO8xlW
H0rlAHiDhNVUYWwBEgO/G87kNe1463pF95t7ul2//np27kwGsbmp3RJWd2SE
mbmqA9BdeJ+0JlaxuewrROP6oaNpoPdLl4eD3ouKOjKGsEYA0jOmJafEkSMn
jCpqdKtEp/xZd6haKQqYBYGMgYA3UZzAWEwoyHdUVFdcwaymkSLevNd+Xl7y
bGJyZ8bS998vTEio/WDBRdD7ogUXNw5tLWWBeRlfRXrZ2hU7i885n5mWn7b/
OLhdh00q26s847Ap1qUA89Oembe2u16E/l/23jvKqjM998Stv0YtiVZL3e12
aPe9Dneupz3Xd8ZrrlNf2ze5u9UiJyGhgECAQEQBEkKASBXJOQkogqCKXITK
OZOhCEVRRSxSQRGFAAFrfuf8XN86AxItudtjeS32OuusffbZ+0t77+97vvd7
3ufVNi5LJKwjSG6xzSW9SF/X51e7saZmv7XS8K/TmaaElqBxPaGkO+qYCUoH
jTOOKA3Eh5R1H5b0TiPM35q/evON1Snn1s3ZpuyPVnQnIJpuuEohzY3DX90w
rJsrEZI8nU1QC3ZIkCLpSiAUd+6j34FBrGxVBxSpki5SuyrN+Q5AJMhQa1RB
CpCX166oqJNBCflWPojz+ZdM9VRVVMGQTI5QThwUPXaa4OAFdAeuG8alMqUN
H6Ugwe3jthYYRV0PNUZkBmjjvS7KLFqcXQIyBNI4wQQn6E0JCuJMreuAIrCr
GB6gsvODttVju4C4GOI5IsEGWMURBa6B7kBK0JfSc/oAAjbAw69FNzGSeEyN
RKkL+uUp8KhiHimTgtKUHKQwcloMjkOCQW2b9A1k/w//8A9K6gHPpLiQBaWi
Xgp9ANo/Kd5hJNaluWW0AIUxd22J1LckcVBZ8hAuJB3Dzqr/v2dPj+rq3trP
Napr5mUGQXYKoQMXgcQAcrAowDgpKYnjwEUa7cC4l6Rwg585jTKwb7wkcL7T
HNpNI7xhQyW6g8w/mfS3qyb/lNOcQXDVqFGjyAgoK/hP332YD3gbaL1kyRKw
9MH4Pz2c+BNt8iQuu5tLKA+Il3sEPt+zb/3e/RuA65GpQV1c7vFEgP2KFSvS
0tLWRjdA+MqVK5lHLFq0CEgMHp45cyY4H+hOC3CyIo35py5f3Dv2em6Pwx9P
OD7r3WMzhkQ0+tI7fF7Y/tCGV3fN/ODQiilA950zRnA5edFQ7CxbtuxaXNsr
E1orJappWv6/KivcAnZ0OzV8AHXnxlF9WomsqQIZ6RZBU1ARmsUAWGRBRpzJ
+dwyF1+cB5EmBzVo88AYekyhFUUIeWJdcmLjZAOx8Xgot6gIDO+dcuvids4E
4fvMG+2X51xddKULeT3pWMjOMNOCUgNP2ItqwzEsBQcZaBiYKJXcGPk55KjW
q1rrdjX2k1wo9uZyfkrrUo6Jl45KyUnT1VTnVuPQcYlS6gra0BVI7DcS3P+M
brqgOnFwX5d/ulZ9PB3m+GmwbM0+LrCSr324vbFDmCuVygsbUFvpLc60y+Vk
uSsAbPZVTuAq+kD5PNJ17AB116LW1EU+JDf68MbXmEvyrlFfdRK+G91IEJwA
ZDq/7ZfidipOHy5NXU89hTKUiInF7ZwgbdgoS8ZLFXc9AN3VmYlFL4HS8NWh
+G8Qtz8G7d/Y7Sve5bAMxE5shK8v0wXSYh8s84HiHnvO1/VNDvPWWDt8cOJ+
YItNnJN5v5ztBhUm3yPmFDVH1zHFWLdhUsQ2Xr8RAH+uMft8YzbdBQh87fpk
DtYdj9jMge4A7/v3e4HbQd0cLKkZtmB9J1AlnYDAjE0cTpcieZt3n66J8y9d
yYu4td5+E+gOypI/T09bW7dB3K4cojQPCRv/IbopsSiZJEhpBeMqO+Yof0ZI
HMIzab7WFE/K2isAxvLw6YoVaRw5MuNUzriT2WPp/AWKAuaCgg65uW2FrFqP
NelrRXFWwl/BLE9fp/FcEU6t6NZFA4VcdxG4TgESaei06W8lC1FmRSbtlsOs
IZD5GSMYd3L6f+d28pONURlDPsYbdUmXfxUWVtMgSJQXDH6eMzXj/110YyRy
sRicmZBQunb21pVLGpjIuBitq6niw+TrXEDhF6cPZqG8g2HESZOraHyfCoce
24r2pJrOU9SElOiisY6MHILJWuos46D8VVdsi4s7l5ZGVCYovO60eiLoFiFb
RguS8vvGH5T8HySXubNcS+E5R18z0tff0xX81L3F4HYDv3KVtmVh7ZKc0m21
Z1PyyhXZIHHj0q6r2r+2ch9IRn4LcLesYkVxacqe1Z33pkbUpMXt4CJgFd9K
LAKKhg8frvA7qAlApcyLiJf0VYlhVBUJ8y8na1/d/WF7JpgU0sV32eyUCtSh
jn3l8BfvxLe6MrGNxnDD3AAGcsb2KYyLOHjKBKBeRkrVug4YllrDPnhPy7kB
LhnHOYfG33b0bGbdeenE/EsTkb6RawA8VJ/CGNBTv9oDB/pcv/7WoUN9wYqA
dg3sCsiMHTuWHKk7SBKYnXP8Ys6Ji0bt9ExwKUXlpxLuwb1UBW8SN+IVD3Cg
8RjWh7LJ0qHWis+AkwHeYGZAOPnqACuhhYxUqmGzoVzm8FY6y5gxYwanVR9M
P1SzldJSkrnbD0wv3b1nT989e/stXLgQ9Htudr+TU9+aFt1A74B2DoLnV61a
BYZXFhJUzEGDlhaeu1F04bOM6ro9sz88PWNQ3fTBlO16Yae7ZR2OZ/aS9i+5
aO7cueTbcDZr5+41lOR6Qvtr8W15kCiYWkBOXlQiMsCWrqk0Auc46eNB4pHm
fNoqMTGRlqRBDLHKXeA09qkjmI07Yggnw4eFh1Yca7RNwwrzXhukDHzOHZHB
Tha8StwU4bRakZxDe/IsGb+4aMHPy5e0UraI+8VVyj+63CZJg32OKBHDCy59
zmm4C4VasDlTIB0JCVSwCNzODmDVObXTWx0zfTKNKKfMTtfopjQl5/AYu1xF
lekTSMewaxSJMsj6UzOHk/W+D1GkOUg1NdRzUAUAehgjmDhUudJKb8+++Fzb
i0uu9P+uPGoackmXb60Wei25DqsMgjZz+f9cboJSx9kYfTSq6Cuk85Frc7p9
8VRQU8k/0ul5d3au7HBy8y/Spv09GJ6DLiKTlPIvwAZ7b5cMnn/+eVCE3nny
hFXDCMQSebkBePOXgu1aDsVOAX2xY1KxkEwb6cO+q4/evi6yenh7HFnpG759
9VvsE+glQae0xZdDd1lbAauL/GOFj76us4OPekjc59xVpIcfsAeKZOQyXxOh
u0sAVKTm6PpLl/Mam3KPHtsItNaNFKxO58M3WJ0PAFu1LoDTxUvDKureL60Z
1jB/2JmZAw8l9ZW/TZcC8j8Xla8BitPJpG+ZDqKmM6Evys1fSDrMCMDt9+71
0OpOF0c3m5E1R3kWO0b6GX7SidFjhAg+dDU6xfCXtGr5fhyX1g7+V/qGLDZv
naEXp/6S4l6JgsLp7373u84FovSVN0tPvAWMP7xxELh9wYLzWkVUU8/KapWZ
+aL+pySitV/rveAzzFY0lTvXoE+T5yP1woUA4254XNal6xHmxYWq8ZCRAZgo
qvwT5yzK2ugna2FuJf8THZfPpfhnwGDi3rL3fqdk2G/b7dvhK/VA/2/EWKVm
NKRLKadx5GEC/penXF+69IY2IsPF0pg6tLparcVG3X4q6CyGE2TgS1B3SOII
nb9QWQI5lziQKX1gvK34+JIJEwqF1myMmLJJjaCqCUulCEOvOpKSyP763Or6
PBqWyhrHhGKQGhMQBmueWMZo9vmwr/ld3UJ5LxrlSGf3R3+4Y9SPGXZ3rGi/
Zn9pQk6ZPqFcxZgOCgIiLsuvyKq/sKpkpyItS3PLlhdULs4u4TigfePOg0Ad
LbqgoJKyZaXlyw+u71azKSJ/vXd0x0MTXgZrXY2LSGdr/gUhkI6B7EGV0mZA
PqIs/jJ2knEV2YxBwxGQBhMB0jSyqqrRBj8VP3PwyoTW9xJaKTupdqLMHHA7
H5nGXMhgzY4EfupIyWmKfeP/BFQjeuGbaqaW7SbxV6ObteZho2CaJckx+6Pe
RfEDgHmkDIDkiDIv1Ku6uvfVqz337XvLkKmK5wiSdXukmsDg9N2HwbG5Jy9N
mTJFNgjQnfOdp5COgai4HJhnSCkwmGCSOwUg5BJa0tkE35zDz8ToBlo2VlFA
pNJ1ALdAaA5SJEVpJHXzhFA7bpzC76Bl9WTo2c5dyCWpCPVld82sin01cd2O
xL8KCGe6UZvw2vHJPVauXMk+AL5hRh/Qe2pqKtB9/vz5HJw1a5a+sWRqFNes
g8d2zxpZP2PIlYxXj255E0x+LOMtdsDb4HYKppQ6N5HcL1zKPdmwjeNURzn9
/Wu6Xs3rwGTTKRKTER2K+dYDmkeF+lIRddcNvsPJJEgizPh4y/hXZpdzE0ro
Tx1dDf5rRC3Xepws+ABIXSNljjjl5FutcifjepofSu53eFLErSOEZi6c/7PK
lDaiehI3wAH7XEJqQm55JjyfdjgKAtgjcUSiDg8weXFydu78gqLFunVQQd5c
ddqND6VSouEYKA8lV3edg75ZpKNDK2Cb10RSnD47EnVUvnLdUOjuOm+QZ9cR
vmLYL5kyU1q7Sl1mpIyqV2zMDnp4XXKMo8RfISy4x0XamuWdHJGLi4khQhOZ
GrhE1QVl4vQbNXAG6SgjaWQ9Zx9cqF+5TDn2Xeh03Y1GWzj2P6+e8l95f/nX
8pAaMMNRiZ+GYiRZxuhgDBSKUAaxt0gpyHGI2zXOB9UOwU+s8oZnqv0ohgmR
m74WFP81cftjkfZv/vbVb5ATRtnp7DwM3b9wdubT+MC6T5g/fq05XXh6P1k9
8XDt2lWpcT7VX8iHf8DeLkU/mOt1ACedmtp1aWsTz17I4gNKF7cby5LOIerm
mQUSrj+eTscIGtmaMQukXVn/wd5FfRpmDDwT/ciFpttpPj8LuE7vJO1cTBUl
4UScW2/d7nP/fg8+TU0Rqq1K714uu5sOyqCZYjy6DmA2k306hKeffnrdhkmb
Nk/TYYd+Uv6GYJiymTsnGMCU87lWGy/py2Php8rns1a3mZ3aNvtA97ITb81d
056OSDdVPiNGbNU4THlUpxSWk4jRnNmR4M1xZiJ8hKnyXrjKiYOGET1bRekK
S2ozcS3AGQRFUkjHdGQzciFDhgXgBE6mpgrOUNrbMbj93pQnLye0pBMuf/93
wfDAcm6KTkxyh8TMThbA7QWDn1d5QLO5DEwak2EICJ2+ILspoSXg37VgTmNU
GpOe+8G6DC1ODPeuujqMGr/buYyCyU6pyNfpkqRNZfydTbjMzc/Ro7PnzTtL
pgwoEycWsaPLm6R6Fylc56XAihiTNfv8ta8uB9yuOyrl5DQSGT++YNy4fBff
KQkJrp29lbnM30Y346gyQlEqGurejW6XLr1RNfJHnDAxs3j24YbZNWfGbytU
QV3yqsqHAHUgOohI/vCSnNLVpbtS8sr5jIhu4E+gDjAP2GBMSakmAJL9H3U+
OL7r9fh24HZhmIHduQRECoQTTGo857jolxQ4qMqinq3KRTI7AEHtGtmOz5Ep
A05NH1iWPESLMSkLusiRj8xw4J+IWllvqfugU2VbhGSy5TlSfPx0yYkGY25K
tKCaayr2CrnJ2uA4Ot6SHSUE9mSOfgvoLpwGEmjepBEA2+D2Q4f6kruKLqYg
SYYWJimt+mnle9ZV7Qdpy4QxWCeNSYJ0O7v3rrN45MWFQHHKo78qzat+IBMZ
ULRonKYA/0+bNg0gSvMyBeCIyNx5jXqYXEV76tepXiXloQFVjORb1sfJhoyG
cxFbdwS3N+YuX74cBK5dXV0aIW59cvdjk968MLc/n9PTe5+Y0jMtLS0jIwPc
PnPmzEmTJgGMI96sCa2A+gDynOMX8042Xd7W7WrmazeLX/qspCtNRNVobVqD
B4OrKDmN1j+6MRPcvjPVVQNw+/rt1bWbu39e2h7ozu2jRk6XOFMqjjNBWVIq
vUuM0YbP5swReMYlPmYuLtDszA7IlxsBvFcVX29ffYFpdulY8kyMiyqe542j
FwIDK6vOObx0Edye3E8nUyVQAM+8oTorcZyrKLzenbzddH2UTXF4RVDVkAdp
i715HVxTYIfHgGcA0F5YvIR7ynG1IrnWmQU9MP0Pifh+aaZmoxOg8MVDf7B3
3B+Ti/6nuqXLHnQConnBzlzKCimLdemF+P5400tLt7zC+RG71pCflw99gcuF
2VTETtUAJYED6cjiFEYSkYFONPJIUFeO2CgkShMotuNsyARJXPdbQ/4pYubA
YfhvqZ6u5+pPRBPRhgZ4JUEqrpgnbRuRLFj84u5VnZhSHVwfYdlxjtMBNgOF
q/fraMI4GNQajaOk35wgn5+MlQH/BNG8oM0e4JNmeacAgithvyglwJuvCJNa
/Hq4/TFo/+ZvX5cKFUzuGs9jfaJbPBKEuzYUNGrCLNWJ51fM3avYkTn/MKe9
RQyGj5Ws4ScQPXVNgqA9ZM3BaEimiLQ772CUIZMlR/38xWx2AMDKMIrnK6o+
AbRHoklWfXJyzrtnZg70w0EX6aSCR6LY10dY7rzjfJNCefnL5y8MSU07mpp6
FJQubgfrlpV15SfwXvkUZc+1V2uC1m9d4Cr1hRmBKasYwyZ7XHoMvZ/hULVO
GwWJDoQjRiblBEOaUt+Zq1qD20PwJhAskE/cvnxxo6ZyLiF3FwL+NLrxU166
Rc3KamV1LCcZOddwQVNTOT+fffZZuRzkIvmfjUJqYKecrmy6EMCOsvCUQau4
hhdJ+0qyRDg8g5+/GPf0P0H3rX97b+tP70yOREQFlzJkyOrUsdfVUu3hAmlR
t1pksty1WnMOO9s//IOryd9tivquAshdLwa383EuMH/+ufnzz5oCqZmOd1/J
GiWGJNKwowldJ1atVTYFgyAY+6OPcg28om2cS6gyQ4ZhbUlKPRnDr8hpN32d
jtWNdBDUrMSO2ZEO2VGLyg9+X8oQw7S+t7QSbXX/8+73Pn9zz9g/SsqrmHnw
1KxDp+fUnEnOr2T0Z9hiUAOWn5o3eOcHbVVs2zEiohehdJvBjDLrz2cfbwTc
AnLAloAKgN/291tzCUhJ0gWwB7i1Z0+PgwffBokJfUF6O6a/X5wwUAUVgBCZ
AoALJkawqMHWte2TjqGaGHOFZ2QNaL88odWZ6e8wcT41Y2Dt1AE1k985OZ2d
gXIAuJZMwbfs6LcIyFH4EThHmpRWJRk5IYK67GONuScuae4+PPEVKku+aoNr
FO3WvCn/SG+gCwCgSG4/p1FrsJzzDjaBn+6NpENhjGHK5vIB4JzjtAOZMssA
4moed9IBbt+7fwMgGeg4ILpRWkqoq69JsX9owsvHJ/dYunQpZwL7db0kR2YK
hlt1LkAhJY0AL7lNQGgnDu9EN0orXGdHQf7i0pQLl3LOnM9mInB+/7KLB1cu
XryY6QDFYwr2YfNGFiQFVm+Y0efc7H63p3S5mdxx7dq14Pb09PSjia8D6Rcs
WABov5/QiqJS4IKzN4ou3DxXOaJua4/6bT0/Le5yPLMX5dy06xCYnKKShXqY
tAP11WE5Mik7sCntWP2sin3JyclH0t/go4sEtRCQcwlHZDeBVP2L+0Ujvxfd
2OcZpgyUnPahsj5asrPULKU1vCnTp0/X6q66jq4EnEO7kY6zP1koPAm+uTy9
LpOJYF0psyeJeNzM/9n25e2kryifwtukQqkBvBQs5SCF5BI6B37K8zFKkcwc
7o66lAZREnKrfyijjx0jbtAhcISrfFbJRdIIT2/p8B/uGPVjEpfwo0KO64ac
4LKgylSq8rrwp+KuAmLz13VcnN5VuUj6QEmJ6u7KkAlO9ySi05aR8vTc1zai
rYaD9p8gcI1CQn1DcnCC1HQ203SFkXHBCCNSd0TpBuZzqOJf0gl+smRqpAwV
+FWjUjSsYmnrnSs7cINA7xzkEmqqxcxxkFLpRWshn2hWrgOTG+NGjKEFnjIA
4I0YyA5jnNBdJBPUHbXAy5B5olk30hRaNOuxfy2o9s8G3l93gvB4+1fZvu49
CiJFLZoXccKaTkjwy54uBWFC2NMWzTg8Nhzwo7cgKaMk+6NPDk7ZZqq7Ny9O
WKVyClBTu06dxjXrkoDEfOgljtRFAHx27vyMrDl1UQVIcfvJ09vA88dObGYg
O7suTtBes2SkEu5gdRA4/QPfR49tApAD4OtPpK9Orc1cV35r3ytbtp5OS6sr
Lu4s0L13r0dhYUQ0QKqMxnDX9ZzUa76WSUIPoDVeG4JhL4Kuiw6tUk04mYkG
1ZFPQt/FmZLD7dnsxzRQ2CtqN6YP1MizclblqtnbRZWCc8nYxnICWmt5iMTf
zGvX2PgaExC+6Zdi/WeF/faimuuVK6dSdHqGwHN+oR1G3x+/Kbl6ODJwFPtS
UkYztQCVGilLHrG3b/0pH3buTH6K4UYbjiJg2lsYa5R50SDj5Xq/GmdWehI9
OVe5fg16b0pomT/oOQpJ7kGEjTPnzTs7d+4Z1YS0pas8IPmfu7NgfSeGs0Ub
uyzd8gp/aZLiLxeabRlN6Nrktbwp0aBIvjxP1Y8Z/Q0V6lUOgnocqLrplEQn
C1NjiHckdbw2QrrsU9VsQO+ppempdeWXD7fZOfrfjd2SP35boYocks+Byux/
nFUMbge+cjmQALQMmgWiKPCysmj7rWmv8FlTsReIKLoGlV2Z0BpM+EZ04wiX
VI/tsmtX9yNHItE/gTogatCpvpxBFwXElTe+Lx+twRSDyxU/1MTt0jYJAsPI
a+/ojscm9Qao100f3DBjIJ9T0wcenTpQhTflZQR+RsYkI8AYqUlW4afGeSE9
yep/CpwDOK0orCrfXk7Fpcekle+hsvrDSnpnR0OrEiLcOFWvdf6lABRVNRtK
Tpq0nvwKY06J8JkIGOPVMKxa2mfOnAlIBuUmJSWBV4HHFBKozHFZH0rlaLrX
h5eW0XqsjkpoPfLlvvBNIomJiSqNG5Gq6r1WTHwOjo/Qm+WWcA4FALIapJV7
RBOdasi4eDnv9NlMoPulSzmXDn2SlpY2a9YsoOwH0Y19LpwxY8aKFStSU1PP
zP3rY9P+75tJHT+f2vX25C53pry0fv16kDyf+Pj42xG5mLZhiaHw3I3atNm7
Zkb4PNVrX76S8erOGSPWz/of2fP/fNvsnyxL+EtnH0xnqLsa9fzctWft2hPH
pxbvpK2YL8hHAvArPcpGFfRoVstIaE2bSKThIG8ET6+ykPKOVEQxmgBHgnuv
Xhi0m6Bd8R92wPMc13tXpwASN6oviagMz62hfwgCLLIy6DQqU9ro96EnBW+W
swZP4PVnmm8MU1JzrZYegH+Vgvzv0U23FJnk9Fr0eOxLKuOtjw3uRhdhgDZd
y+lJeFR+Ht1Uj5FyQx/iJFSdGSnflJ9kqcKfRze6FEksnKwAI921kwLVAFwc
pF8lI20jGoUkRtr5O5BpaNK2QHckwZIzdbDiL5UbXXA0tp1xt139tIcPWjra
5DlBDyktPDpzOdGwI9UyJtpXKpN8SUEJKWrKcW4K2SldpfIM1QG3O1RJ5pSk
+vzzzxsURvZ7iCn/RLP2Y+DJyJ/xnCCdHaLeyJMxXmRA/kYGDxbIb8WEYfrC
KDYPgJ9fiaZaNCsNqg3e4rFI+7+d7Z8xt4p1L30iKu3+gFvoo+++z3OsMoym
e+H0o9G7uJ0zg/jSI7ZQtSeaoxtwrZPf4C2itnxjUy6f1DUJ+qHzDXoH9/K2
8oJHKOuNWQB7sDrjlwA+IvYejcQEpAecR/B5NFQTJwOigng7//JZtepI2pLi
T3cP4JK8gkVlZV3v3AG397x3L7KuSnehpKRKAnZu9mCko52ZzucPmjdp1UwN
yGv9xsmqebukaFB7Y6qevZDFv/RgLaMbPYYWeDYun7khk4+kdN1dFdES63KO
YTVIjfsLlrY/NJCT3aNupBkZv8zKaqWOJbMAMmKf43abMl70MNK1U9O0qN6A
GqJQjqjuaMwjkqLA5OvswNCuWtrtjdXq4UKF3Mvf/12DKPEBbFeM+D2OuOzr
wKHoImWTW66yATvWSwcE14IdPlxKZlArGfbbpKZevSLtsjrVmdcSpVqjJnFn
QIxEmys+2lQ2Oudg99xDPTgIhge6az5yKJHwqdCZUj+0iaoOZC3H1ciARvfm
m/OVfOFbzrx+amHewTkSbl0RNqq4Fi2NWlzL2O05HJmQURSXVeISOcfHpOdO
zCz+aHPeuK0FAFFQ8c4PIsFAVWtR5xxUc3B9t12fdCxe+Ium7Lb70l66Gtfm
zpFXrxx+HXDOyVx1Lb7tjhERHUXgEMBm1KhRtQmv7f+oswxkMBU7GpbBVAAh
TgO0MCM4P+WtE5P7gJnLh75A1jpgkqZuqiQYCVUzos2d+EggHs3OWtRBbsB1
ADxYWqMxGZEL/7LDN7CKcygMtQjer8It3kGPk9ey/IrlBZXgOkB78bnrJSfO
A/NIB5yZc4IZeyNjOtBIiMJdMHyq4EFdEeVGwUKKTNJu8iioiz+pnVQWcqHu
+rRaFyqiFZ05RXJyMnhYHjgTHFnohu/Ue1EtcdCm6pR8gwO16JKyDo+GGaJ2
NItUE/ZpEGcuTElocy3VgnnKAABOSEgAGMtIoTynzmTQ9e3cvebCpdxLl/Mu
VC/nRjP/qq7uTfnHjx9ffTB9X/VGcPXWfbUZ1XWnZv0XPvXJ3aPBlVqH2Emf
TeqUkpJyObnrpcSIaL8yjEyUjqTNPrRiyr65o3dMf59JHLh9ZfLf5M//D3zy
Fv8/nCClHJw8bdo0lxsmTJhAmzDLU7aR/ffee4+i8phRKaecFF6WlzMX5Xeo
JveIg3JLSIerRowYQTO6PsKjzr/GuuUEfZO5Lyr26IysGA6p8WBLpGHSoZsG
TTd16lT2lZrkdvguB0I1ry09iQQVHgYeQv1rjNtLT8IR31x1X/Wv51sWioIz
slz0u6EL5ULZ+1JuDKmsfzo9g2u1CnPp5K6iL+ko/8LBsvd+p2pkZIVUg7xP
l/0M34Y0VYnF7sh9Q7+RuN79Uvjy+v237D5/JyXSyYXdvmMN/a0iLfTkiity
3GjX7Gix0SHIZVZF4CkD44vBTeic543+P+d8GIlI5aRDMXljjmtjV0PGEB4q
50jpIRGOUzDSd6zR/4hyUmshOm3CfLZo4P/iPeV26zBF04EcXD5WuNhik2NY
3+eEQFOXihC0OBSQAW+wA/4PmhjsCMW95AHtDlMIRs5AVDDH2O2Jh7bgGxu2
L0T7ixdfUxicDwD+MWj/N7H98/SCwryvRfOz5KzwgXMePSN4IiY2gekEM/gj
0Ls286BC+ejtieZ4qbETBN4aXpCa2nV8fFNI88jR9UfqNoDbeY94JSOEmUjQ
pfW8lVqzAcl1x9OjejJ5N3cPvL1/sCb6SPjUxuwQWWlb5mxpDGCzdRsmkWZU
iCad46BrTj5+cktRUaempjcaLw67e6/f3bt96XkA7YB8MJh9u5xJXTjtNvVC
tQdWJisSziniRRsx6ZO4UX60IXMmqTlf4F9xPj2kExb7cHowQPv0ddv0eJUK
SAkzsuaoSchpgj2JMRxR51ASDqkF9guJa5DXZi5BXVq+XbTdr+Z6OZOq6yg/
7oKCjRwEJ70F3CnKrJikuoj2uv4rlZHC5A38buGQ7zHugK4ZWzUCXxr30/sJ
ETkRmtG5jwYWWTcXJz5lrFXFJ2UiqR4jM59MXcgwLnbugGcvxT/TFP8M38wR
QPJcpeojqTGAyoFxkVfTEPmOH18wenT2gvWdlmx+eeGGznPXtKfWWvupBWnm
D3pOXSCxt9rIpEZSCs1pSSO74qE/4EznO7q5OZtTN16UbgpOBwxHqKnN9neS
ot8ElTW+ITW6nNDSGENqwSXklI3elMMH3E6lgED7xnQyLqq2brUy9qZ22b68
3e5Vna7ktgfDA3tOXRx780Sf60e67979JpfwUbACkMO/G3Yc2LjzINgGFKTp
Oy4ubt/4P9m1vdPmigFgKhE+GPLs9HfOzuh/P6FVVlUxnysTW+8Z1SFjVM/c
cW9TBl0yKdWdhFbX49splsLYSoLG3wHagZ04hx3t6hQYpJ03vm/WmAg+N4Qr
BWNQ1mber18/LgSD8RdHALEWZmluWfHxc2VV5Tw26k+m5JV/UrxDXKTXsPMp
/RNlDhvMhb80ywut2adqTFuk1gMppVgYH9ZItZTEmQXw0mhH6rHPmzdv7Nix
gEBaTyEaTtNjUaqPXodCdEXp9b4MrgFyPxSu1y+AHRKXza7yuXQdW1hcCkqv
qPqEZiTHsooV5ZUrwa6nGjIiJoumnM8q+9ypfhXczn1ctGjR7r3r9h/YNHv2
bFUlFy5ceHp6byOi3kzueDepjbidz43E9kfiI6SpVZN/mjH7z5Yn/lX12C7n
Fg/ftOtQxeShlVOGjY5uVDl33n/Mn/+/Z63qykzqzehGA3KtZCHKqf48xeOO
M52R2cI51zd3rN0ccddVad8aUTswNk+a0yueEKMAOJHhGeA5cdGBq2giUtPJ
l3lE1dTh1EijOtl5nDK4dmNgXxrHoFfcMuZZ8fHxJKuCohv3xVmeS2xqragV
GaKgyutzFOAnB51oKxslBiYphUZ5ZnjxVaziuJpCgEweJwOK2YFwoWRLLfb6
X6tC48n0lrxf9cmdwe30e5ZHbUlpNi7YubSnEd7VOsWmVJWUqK/yTM7bfw9u
pzsyYBO9FsfpcKS102Pbh7MB2hlKjE9Nvq5C0v1qfLD8vFD6tOqyStORGrh9
/pj/JOPFJUUulx7vmCJtxlVIR0x5pCp6OZroZqWuJpXlAbAj5b2oGPbLS2Mj
hEAah6fFyFD0qIrV6BoWxOGFMUAgMHks/hF1y2mXP6O5MljOOU71A9NAo7rI
alVq3NkLmUCUbzVrSD6Aar4i+HkAqz8A9cFasbjdcJxfJfHH27/u9s8mMrm4
E6vxGOuj6vYroXuYb4Z0Avtd9B4SDOFWAe18vqIf6xPNAqqxRXJ14HDt2pqj
63zjSBmMnbY2kQ/loTPhjQbJ19ZvoD/RsVSiO0j4btXL98vb3618+cKlnGB4
9wNurz+Rzvl0DkYvFWdqoODnuaK3ype0Kinpkpu7Iyd3l7idlLkK6K6wiaZg
xWHoQ8R4+v6IMOnK+IspAJ/M7Ll0OPQtMkB0UJUTknekJvfIYd2ItGMb/Cg4
fmonkfUnkZ4K5uQtoB92GZSuT3ekoGROD8klGhyk2VA8XUqll5iFyroWW2u5
rkmqLgQih52/1EfBOT1h4MYEbRl7XYrNVdwa5egF7fSf+tiSu4ZrgNPecX+8
c/S/a5rwd+D2ewkvamembLSbNmruBfD7dvKT2e+0dNqih5FMVF07bR/tRRT1
UtzTtyc9yefelCfvTP72laRnJc+oD+MSiQvEFNtRhsGFMUuvYYY/0PuijV0o
gKsGpMxEQ8dYjfxUKsyMXFgPig2GfA0IX9YQPw25pYQmz5jLNI5NeiLI5+Ev
h2yqBiTwICVncAe0UxcBm/GVGIhtSQZNpRGVW5RvwBCm5rnycVnHLmTWnwcB
AmMAtAVnb1z4dBJYDhDIVeBtTuNCTgDLAcyM+yPBgJ1DCf8HuH1jaT9JyOJM
8HnN5HfA7Svrz/C5l9CKz8X4zkXxEUi2d3REsqMwrn/t1IHFCRFSDaVSdgb4
VDDxndKkwRrwgVKgL/1DgcSbR7yR/VGEqg3C1/WSfXME18k8oXZiNiPCuzAh
HGIoX1FYBZInKdrQgK3K43OCkoyus5MImXICOwr40AicXPbuL2gTkuVydekF
ydJFwHhAUIoBsAT7UcKPPvoIcMv3lClTgII0mrZcQCMnkx2POreAWrBDqbhc
Az6NqWq97H2dFtXYcSmETyRg1sh27HAXyBFAqxwiuehpy460Ikqi2fn4yS30
eKfPZtrX3d4/mA/zCKZLuhWHgFApKSmA9ptJHT9N6sCnNuG1zxNaB9x+Pxpf
FbS/buZ/3zbrJyuS/vrMwqHgdrXT2WgEJeJ5imh55yPcU2YcgHZAPvcaVEw7
VK99+eiWN5nOAJ5Ly5czy7A6dWXDj5VH5j6UnIaSD08K3FweRUnvKvOYl7Gl
qD6XkAI7zmX0QgW075wxYtKkSa6VGKWL9lSBkzO53LC/ipeGkLhkp4SRKmQ+
YDwhqq26HEP/YIQ7zpHY5oKaY4GQlb4rrFpyhDIYnpiTVWENdnjdc1zxAcrS
n/Cau5ppeAgOkhHPrSt9fOtNv2FYt60jI0stTC44omlaNS36DaWcJJMrMEtv
SSfPX5qVdN7RC56Hn+6IQcEc9b7nKiqiwKPh/5RZoAMXYztmaZbnTKoZGO8G
g9bvXg0uNuV0QuA/+1tjTjkiKGLjQKa2sAq9ulwpjAN6Z7hRlIDUFA2geLyY
NGbpkJ83TW1VtSziHBGUNh37KLk+X/qoAmC2bPl5VlarWDe9ICADUH/66aff
fXfD0KEblZH8reYgkvLbZRpzXIO8/4JJFLh7ojnkZWDIfEVnwFhz5QOgS7IB
yQLUwe2UTZ5MiM75ePuGb7+O80JstCZXeYw+EHvar3RMDnNP0Xus+T0Wvase
o6X9KzLhWzQz7WNP9k0Jvh7sPPXUU8xtwe0GTuVfuhQ120HaR6L6kGLyumOb
APD3yjuA22/tG3ThYs7Jhm18S5g5dmIzQxvwe2vGLDoHrt2ybaYKV2xZOfM4
cquoDddeKO6Vllaek7P/1u1RFxrfVWGGq+gqAeQgZzoffpId31xlcFVS27Bp
ivZ2ADZ/0ZtFAPyFIaWlL4l+tcQaDXP+1vxFmUVSbe1ag/Jt8GANmFntd/ox
zteEK2aWE87govy4ZnOOq7WrJphe8/ZOpKAhghTok4PDKQ8GSFujvX2d8Ylc
+jS8FF2oKwLKtuu4pAeTujQSIJ1NBGVLDmrSV++LIWnP2D/iAyoGugOWxFFq
lEnajCLwbyvJosC7I50Rw4XrEsUZHei0qT4Au3T4D/MGfvfixKdA7ED3O5O+
fTHuaRC14UqdHah75ujgeEd59EJl39VwFyxUy9RDQd17xXaoL3dE81RwvDKK
FsXgQipOS7rQ7JSKonKcxBXYNPSqreGQrbK9K847Rv24ceJTzAJILWNUz5UV
VbMPN8Rnlwr2NE3HEj8icu7vtdK9VBhMLoyPQD5geWbd+az6C+ATUAqA6sKy
iPw4EIgjYNSD47sCrsCHB8a9JP+Z44cnvsJxYKFiHUCjtPy31hT00i3U4Kdg
WhLPqirOrCq+Ftf2TkIrUgOsks6+MZ047dT0CI+9LDnieMgloHTAElUA8wvm
GXkpkhQRCcOGkgHtgPlzxvbhjlM7UYqnKTEh+VyGP7cMRM0l7IC+VM7hcVKi
hALzL0Xlp1F+fIpcNJFkRXPJsdc+z8MgO8VQPu9HN3AmKUjn4HxSplKcANTk
mxMAnwsXLtQELYMFtEkduYQbwb8uH0ieoSKygFwDMvyrAFJBEmNZUh0mQTQy
lwOhgd+gbrKTOk6mIFKykBkl69uOjs5w/4FNtXURnVtgPPd62rRpso8ocE3S
n92Y8r2b035wN+mXxlcCtAO2rye052cUtP8TgG+Y0eez5E6fJ7a+ntAu98Sl
vJNNYGY9YZl8lSQOAjxPmDBBBwQXCLjFzGKmFu+cUbYHOM1c5kZh55uVr887
er64NKURkHM5f9eetTPL9y48dXVRw41Fp6/N23GQekmDMVAsU5Lk5GRSVq5c
JXzmLEwkdS6gAWWCOaGjzamgD1h4NmhGi1Rw9nrRhc94BbiQS3infCr4y4Uz
vlVl5yomUDxyLq8YvIn0dVrxRfsv0U2IqwWehyG4vYtUNcgbUo37IsdbHUgZ
NfSuPmzsK12u6rvmeq5V4115K+A6nYAqiBol6DZpFjo0+qIQvULTt577XEXW
7NBTWVqO0w2WDPttyTPOF+SXagx3NdPgrXRcxjmVUQmOddGQaymq5QzhNoTx
dnSuliquJd3dQCdq2kgTZTO0q1FQNbw7lHAhWQTbuwR7Y2E7DurZSoJGleJM
3vSdKztULP2ngFmyiZSmYbxTBo1vGpxh69at7vfv9zh37pUAToKHqY6oAmMH
yuCRGozeGtWl1shvUS6j5ui6gGGCyIaoO3BgvgwLhb+CLVSsHhvsyVLFams/
3r7526/pg6BvRbjjwUf1gWfgEfqQ4cIWze6uDwQF81rDkKWuSdAR9RF+rw+n
/MCswYdf55HfigYU5n1JW5sIbuftU+EQ/Hmkbn1t3QbQLDtyYCLgvDH76LFN
jSW9L5b1qTueDlA/cXorWB2kLYRmh/5zwbaCOek5SojQdYCxAd5Hj23MzJ57
u7gtuP18cS+6caA+uL2i4hWOy5Onc9Cw//Of/5xeAqjPwfrj6QJ4Pmo/Cl8l
13HyuXODy8q60p/wL7XQlq4NVq6LTHI1RuxCgwiJowbfJE5S9I0ud3KJuJ0G
ITUKRhfK8BF8hbS0802XqBr809GNrowekr9UzVIrko2/FLTRsUhDh7Qf3XyC
IR0kL/KXDCNDXqaiQvRCfY5radH4rJX+woVXb99+s7IyouPNYKSXFjfCXt2g
S1TBEYqxhjYJnk3KL0vFdKwxKresG+ouDZUN0At0rxjxezJzaGEdtdyUPuMg
55BLU/wz5SWt+TBsAaqNheQ0SjUYfs5a3Wb+uo66DGvm0uBGIpxvyUlTGX9v
CvuKKiiAYOxXlUg5J4jhK9fGdEOgTsrMPlTI4fjyssrFdWfnHDkbl1XCQM8J
GtYAFYxcBlHVTsgRsSWwhCPsXEn4g6uJPwbkSCA/cKDPndpXd9b3LKztdfDg
21cOv3ZowsuqNV6Z2PpGQnvdKoHrNXHd6pO7J0Q3EOPG0n5FR/usLewttRig
IjFbCgc7qjiSi0hJuk7tlAF8dHcFxALMOKg/LHhMkrbSNGIMXijlU0hWsRpj
tRhodfuHf0CDSKigACESfefoRjrSXHUplQlDK8l4oXE8x4xIk/tF6xlDU8k+
tVk0xlILMaFxYI36SiI8eGZKCRXSBCtqKwYxgmlnzpwJulY6RsM4KFSnV+cR
SsS4StIuuvF4kAuVkrcvhqc9taXTaCROG/IvP8HYkyZNAtAqJk/ZJPnQdNSX
6hQULT63Po7PqTMZDWezKrevoiRJSUlHJ/957aT/xI2mPPVT/6+7ST89/3G/
W1O73EhsrxIOGRnSKCIjk9jq84TWnyZ1+Czjpbtb299NbMPn4srRoF+gO7MA
6s7dyZ/Qj5JzR8iCZEnHitN0syr2zd1+YP78+YsWLTpe8f7NAz1OfDqp+mB6
w8WCsO555nIRoJ3P7Mr9PHikINVfrr5eD1rI2eEZcJ5CFWg6jsv6vprf4Wpe
B7LmKeUStYYUgbc9aXyKLW6nbblNNDU3nRuqSLsQVM65BBVeVZX25edwJnmp
o04LKx/KEboF0TuNrzWAbx5UVX/to6TBcI/IVNdXly+Nc00xLICkOFVi6BKN
K2G8PLqLTe+9xutgD6lrP/DbRUlK6yTd8cIuzsBJmkECZybS0U3+3y7FPW0B
1C5w2ZFLJNs44nChvjwMGQbj01jBN6mpP6kDrDFY9c/VpVTBNOcsrnLSB/oX
x421yhBDOY305PirPLJKXyTlcqQeRoxZQn0Kw18UUlanspmc6RKGlaUk3Auq
5sTEAchBCtjA/vnz3e7ejeB2FSD1PI3lIQwZsn727NNDh24UvQQSi2hEJZng
jsq1oB1gSTBdBoAUxPFaNAPyQG6PhfG68gWv2C/jHv9KbPZ4+wZuv6baz7ea
xYv86TPghPEL8/qyxyPWzO4DHFaCNLNL9HIVKTyEX6WED1jmQ4GdXwTnEV49
+dJ6fDfMeO2zlf2B6+BtYCFYuursye3nTtUd3wSYB98WFi8BtztGAK3zChbR
2yjEDQjPP1q7NLeMjtpAcpFYSMc2ZefOZ7/041+WLX7R6HJcdaHx3ZKSLlu2
zQS3MwWQlMjGvxLquFbCeYCF9CeUNqfmUG7N4enrts1YnyEPp7T0pYaG+NWp
ta5gynXXCUhCtXRoXUoNZmTP6RLqundfpg83Zqi+nPpXSpmmK9OkTOem+dcY
doa6oOkMA63IpMZ8rfFycgTb9tIGqtaJFVRJOZ999lmLKmKnJ3zyySfVh9cL
yZDW2t7ddM4NOjOyawDt6vMwiwGNaMXS7KnSlwuyFJh9BcxdmFDr4O+aNwE/
l7gYQactQ54dvWg1BynLrKFMMYdYhTSaNHNBet6ijbcnfbuytE1FaRuK4Xpu
8BdzdkAiy7a9unTLK9xEmf+kqccEz5Jr32RKFi7L/sfo5iyMdDTNGUyEItGA
NqYuCRyXN+uOwcfHbsmfkFEUn10669BpEDuoT/mIYOkyGqwqdjSIzBCJNIAc
ZjHgw6qRPwLuaqMG1YDVP7/+5s6GXsV1fa4deePOkVfB7WChtPI9jcs/PL84
In64pXLgtu2DgetAd0DdsUmRGPSrc3sA2tcXv72uqM/e0R33jekkkjSIEnCr
T58+wCpt1EOGDFF8T2VIRSkl8EjdAYhSWqNnSlxRUo8dZwSSGdQ/lOhCuzH5
qvzg96V/k4vuioAoElHiQ5lrPeC0vBmQhUeCVjKIqhx1v9VjN3SmZltzJC8K
o5crOwZsNb4kF5IFfwGYFSG0XnLvaSjZ1GqSAyY5h5+q9zhHkJyjxV7PAjKl
LkZQpahK5R8c35VGNrKS5BMmBWbBzqhRo1RrV+SEu0/ilye0ahr/Ym3KqDML
hp9dFxfxzb+UU3OmeErRDi48nPiTmqQ/mzFjxsSJEynkuY+Hn1o28sSyD+sX
Rgg/gl5qCka9OrENoJ37zmk1m14/lvHW9OnT+dm4fFQUAN8EtCu0SAWZREyb
Ni05OXnhwoXz5s1jgsDJu2eN3Dtn1CeffLJgwYKPP/548b6jJ67EnT37QXp6
+uLFi4NiQGNTbnx8/M7da3bsSiNr13Go8vX4dlcmtlHl0vZnx2eDJqJh2aGV
OJnbcTm3HbidcyitQpFUwZULhUB5ADKOnsuIhs3lJ4/HnlEdaF6ancs1EYRQ
oTwV3GUOui4DnqRT5Y2TmuV0gLvmbEUWFo0PRhXzcw5vuhGZlXt17s9VPEtG
yNKXUwFJfor8XeNT7crVJVLQ8ixxzs4t4uqS0JIZvdw8UbdsLrt9SqIgmOKQ
oWvlLy68PelJelQNLNpYgu+/Hay28aKB/6vs3V84smhskXYuO4UdV0WlCHqO
lD8KI96mpgraqHwrH16+ugQb5dyNDGJI6KAbII0w8BJV32JkoQyy93WDIgsN
9boDG4xPOSCqTEWokcIFjlkZGb/MyWnDlAH8EAA2P4HrwA92AtgeNmwTuL3F
Q5FPNbAHYWqpNYzy2kWDwkyLZpKDWP1hNPWtZmk+GfWxrJtfibseb/+Gtl//
rsWGT2rRbMB/2Ec1ZPdldvJYy38s6V3cDmhflRoXFpV8Jr/KJDF2BhFmoFr1
W7ZsGZalQImr0+KZ4Qoar6e8fXdxl9v7B0e4McfTj9ZvLGxo2nb0LP2Azu9g
A+B0sMPzOXZiM92mAjL8pdCH8TUUkpVoRy+hk5FTeA0jxmM9fmpLEAxRAFAq
i244/y26gau5dv3GybsuNOxqjHyqzp6ivyLf8xeGHDkyZvz4iC8hlxuSyaVS
6Sg62JKsIo0clIVIRwdoPzH1nQMJfWTxKRUuw1y3TaMX0fWRAiW0eIJGfhq3
SJFJttB7y4GXckO7uaqouV4QHhx4lY7USkN/y5nqDMiuMTyHkjI0oGfKUaQk
upFy/q1b3e/e7VFU1Kl0+A93f/SHEoQcLmXRGLmVrPMHPVc89AdaaXS20mvV
Nte+LclcnQHXiB2LQwgkak1nzhi9Y9SPDc9kvQzezXdcXHH5sf6Vp3rmHuoB
MldG3mFRKosWJLXURMsKqYVHi2+1ZUT4GrK4ljYPrr6qTPBguCDi3MQVak1M
ThBIBFwxJj13wckrixqupxw/s2Z/aWJuObh9/LZCWakax0LgVyc+4mENxfpd
KiYJhuEEFym0NFZX9z5ypP+IESM+T2x9uOr14rq3C2t7lTVMKT87rbr69VvT
frl7e8+Npf2OxL/6eeIL9xN/9nnS34I8Zb9zMoD/wLiXQPvgEDCnAVXZyKh/
//4auqU6g2HkLXMaoEsut2btXSPbySHXvMwlnMON4xmQJKNQtlQHhmPnXBKo
DAwK0CVNTaaqwHkmb6ttKJ+cp4Jbz2mWihaQNe0RCkPT0aoa6k3B8lAACe1s
1WO7VL3XiuzkBlsAqcuUH1xN+wAXDWAKegQGq8YjewSAN27cOKrPrVFFXEl5
Jyxq1Oi2KYmIexTRzx/VQTl6XXcBqyBklfPlStG2oHG53MaTuhrX5lp827pl
YxrWTDx9JvPCpdyLTRHcPqNsD4UBZgOSJ0yYQPHA25t2Hdqw48CCXYdnV+7n
+KxZs6S+A7/B9jNnzgSKp6amRiztSW02b96cnZ3d2Dj60q2pEZP7kVMpKSmz
o9ucOXPYHzt2LPtAdK7iCLj94MJxS5YsAcnXJ3c/MaXn5MmTV65cSbLkxURA
1v3lyghr3XC9StDzCNGSVIS5gwx/hf1lZ7nWQ6tSHW8r7ckd5H6pBsnsg1tg
bCZajJvFObwFugNLeucmGsCXm67XsGuadjs8DPQbJMhdoFeRSWUY0L+IbrxW
PIQux7CRoKHNFAsiI1k3UkEMD6cZmdfQlR1ec07g8eZaslPsUaEVznSRyJAW
bDyQJKhzOkmxo4+nRmlBr6KR5EjuXCJMDZ74Dha+CDoBUU3t3qq16IBDaiq9
0w7g9uJB/8hPF2q1gfDTHTJyx0hPQSuYM1X3ogyu+eoJpRHGIOCKYXLQrt6p
B7nYQ3IhvaVMS6G+w9z3vvc9TqP6ZOcQZiOzqRLvSgFZK+dOOiTijMwwr5Qt
K6tVdnZrvgHwYhgREehCGbeg0C6SD9rUAfAItgMUl/GuWjXn+5fk3hCwMj39
H/m0+P+S1WMJMOGvWKmZWLT/GLT/G91+TZJMSCSooLsJrb8Muj8i04cfuUB6
j03/t5rjtP5K0chvNUdo+lZzDCadu7k2RHp1Apu2NpGpwZp1SWBFA6fe2NX/
bGEPEHVt/Ya165PTD53aWnsGQMU+XZMK2KDlgNvPNWaDmdPS6rZsm8nLLiPF
HT2DeN/5a9Pmac73VRoRrXFcXRrxQGSmcGyT+rcffLBt7twzKz+pSd8yXZAM
zMgrWFR/Iv3TVX97e83fcRUdi2GbyKikpEthYce8vHZ8ayE3FBQdHcVWfUUg
rUOQVPMNw7odSHx7/dAIqUA3Ug31qsRoYxGOcoRE9MQkHU2+uhoJjO1XNfJI
4RDGB149vatX6YDJhVxOjuy7CiDyt8Bh+853vsNBMb+gHeydO+BZsqNN5ITQ
efKhecve+509Y/8oRD9xFUMBfIUW8wZ+l4+rBppxGI+Cx5Nyjq4OK5Ks5IKm
Hrk3Tlu4FxEWfVRkpmrkj2SY0+bSVD7e9FJlQy8+eYd7LtrYhc+SzS/z5Khg
r9iCEwSXaw0gQrtl5czbljk7zAf5SQGk4ofwr5JtHBlJxBN079Igz92XnurE
RGrr6E054PaFJ69kHi25XRKRN5+QUTR2S770GNX79UQDQrgQr+IKwABEx7DF
EdXnJI0YrATABhoZNWoUmHxXZY+DVW/srO9ZdaYXnx3H+xQfT9i/79XPpr5Q
E9cNfPVpUoe7iS/cnfL0p1O/L4kC9AieX1MQsagLemW8KOUno4CfhjoFZam4
Dl5SlwZQqgA7aAfUdHrnx8WlKTq6cuu5XFERvg3hpPaLN5R6gUkAHhw0KE/n
5i3CwM8pY2qjU6fB4nUJVDCQ7JwyiPNBXK5QiNUlF2nq1w5vjhwxPCsQUQD5
enRTzETARk1fi25UPCEhATDMydQX5Mn5oG5AqZRsNvbfjW4UhvqqGS6picoC
d6dNm0ZduJxpAjcI/A8sp+WZLpEgJeEnuJpW1apMUpxTl/QGcyiOAMvB5OxM
mTKFkuzdvyHi73M5r6Y2A8zMEUoIOAeWA245mZ/A7A0bNqxZs4aDU6dOnTt3
Lt8g7cTERApD1gB49SGPz3r35Mlh9272un36ndq1c4+kzeZySmKIK6omuYWs
nX/RzvycU1U9s3wvE5DDE18htcwD9RnVdTxaR7e8eaei6+3ylw6si9wsef4u
WNC2/aIbD9X+jzrTFFx7NDEC2qkyx203niJuqFOeimG/LB/6AolQDIrkNIe/
5Ng4peVe66Mqg51m5y4biDP4japPzlvDW88Rox6QS6ytQzciXZN4Vakm57gc
oKO000lXZ6TzZWbPZQCi3yARX1WDHPmM8TC4gqMFm06AR5rHg3M42ZUjbSZq
xVBO/nXIMMKFRgbRu9NVNawMdWHXag9JjrSDrjqSybVR6AnFzzB2iN4NJkuO
drnyKh0WldLSuMFpIdI0iVAL7RJkSrKMCM888wzl5zSt5WJ1g3FoQjF3SmVw
JftMK2XnqQuVKlsa9mkEJw5epRGM/rwypU35klZNTW9cuvSG4TNoRjJ9/vnn
KQkZ5ee3B7pLFdBaGIzeYCHpuIZbipW2EwuJ28VL2t7DT/F2LOOFjQTv3u0h
nX7z5p/dutWdnYfxz8NSgYFUY4KP4MY/3r6x229qtiVuj31Cggf0F0L0R0P3
2H3Ru0/sAw9Y0DV1+8LHzzfI4lEY4XrwpTVlLlydFl9zdB3fzz77LG+EP8Hw
8rEVDJ+2duvMDZl0lRs2TeEnPQBo6lxjluBqw+kTK2pqRo3KGjcun+5F6qxr
c2BOXm0FOoD9hmHis2LFFT5iJP5lggBCo7umowC01x3f5BIhuH3evLOrV9cC
y10QdP2RlAsGPw905yo6EPoW+73Kym5Ad3A7H+2uwmOlGjV6B4dT9V5Ic2P6
VIYAztQRkn+50D7WAHaKZZGC9vDnnntOoqAsF1lG2tJJVkEb9VgUP3GyYKjT
IDmukcexxnClquW4mgksB1oL49VaoagWgNM4mP1OS06QYymNU+0CfirkvmPU
j+1aZaGzr+CkzpsK7ISVX3XSZCLRmJJFOc4gouGIEY1xmYwkgZsjJzcltCQv
IzHJdtAzkRNA6ZV1b1SVt3P9WjVIoK+xsZRTdgbkKraJM9Tqkari6IlTW8sq
VjBuAqTBBmTBOWGxRhFCUTc4zZDoFMYlbArMEVNzArJjRfvLsyJc7qactnwM
sMIlRg5izCJZ486IbEELYAB2SErKtBLTiqhwfuXwF0FB64vfBnVvKntnZ0Ov
7Wd6Adr3nO6762yvXQ299u7slZKScvDwFvBexo4hWbuGgttvJLaXEQHUBykB
IIFGQGuZ3pJMJIEDYgVOEmPASJ4vwXvQoEEAGwnwICuA3M4P2tJcFVWfSIYn
NeXNgTpAC8CSiYNqqpa13b48YtnWq5RvI9RzjtwSgCKgfUrRDpXhyUJ3V113
qfvCjMLF2SUGKaP9OciRlLxyuTfynEnZW6afBTeXXLSNUzza0wBJiqi4mkA6
zGWol0Z1aec0lNFmhdNMVeLj45OSksDDYFrmTfylkDiNwzc4HFDNOVOjG4lw
ycHxXU9M6bl06VJFYLhqYHQTJ1NNJeWVjrw6sc31+HZAcTC8suc0PneNaxvO
ZZ29kEs6/AVQB5CDmVWVYSOvsWPHUirQvkGjnFMMjW77xnS6GteGZwaoXzd9
8NGpAw8c6HP/bs97n/a4OeXl69MjYU8PbXjVyYha67QV8xeO0DiKFHFTju8c
zQf0Ti3WVOzduq92xYoV9dt6fl7a/tOiLjpTGK1JaUeaV/8F13EOjHuJ2jEJ
opGVf+HOyomiRrKtlFHizu5f05UijYpuRix1NceYpM7g9PvgYfgfzVt27nw+
dAt0OxqQ6Ys0estossejK+A4HamuKOHt/pu/+Ru5VRx3UUn+GFUgO3LPL/yY
8UgLubwRnkaeQJ5MXewl3lApnj190o3EpCmDLkI6Hz/t+oyvJLdHzqchql0W
JDUKZmACe0g1WHQCVSXJqB+6jmqRUKlMES3d8C2MfZ1BPQy0p/E8RP2TyW8E
WOkuHJRyyWkh2oiMQfJ16qHysEEJaUDF0xy/yEI1Hg1NIQS59hOnD2pg6vAl
35576voCPysqXrl9+81793oC3XP7/kPJ4J+p9kYu27a9UFDQ4dnmTXCi8GOw
DTJogigewCr+G7wCQzjLIHMdeOyCeVIgWVC6QRvD5yvi9gcAWCw3/mEFj8fb
N3P7TeH2QF8JR3weYgUev/CSh48/sHYT9gXesQ9hLGiPffBC7i42gcOd5FqS
B9anfDt0d+UEXm3Xp+TMPP300zK02eTLSQtUOSoWt6+oOTxqY7bmdHoetbZ0
8Ney3bJlS2kh9A8g8NTUoytWXuEbJE86EXZN/UYuB1ZdLOtDb69eoohOpgrf
gmeJ5dqEt2XO5loSoQPXrKqWuy6NdGIkziyAI3ItNGJTHurFt6HodGhlKqGt
VSuENGxBuCFcOa7pm32ZNmyuOepPqv8pvQoNqCxMwMYkqN89Z5Lp2iFda+La
ZfV7RpOIZnCNJExGCod8j/qqfGiEO4cGQwVprtepX7At4cRApfJ/SAE4XfnB
73MLSIGfIHnBdurAzmmDusj20b8V/J874FlHz7CqKz+cBjHenyZx2lDxNKUe
OI3zSXzf+D9hOJDEoteSAwElpwxVI3/EoMb4bmRt8LBLDMZ7omVMXPE3bxPF
Lh3+Q1IWPwMgtb9pHKYdTFZWNlkrWME5DMcUmGdPXjff4OqmcS9WvdfKSy7n
tLs/MyKGo0FY4/An2d1T83pSWrIoKFqck7cgN38hTw556Y2ltowTUm4BV5Eg
kKbs3V80jX/x2pE3dp7oXVjbq/xUb23s20/32n3q7btHX78ztfOVxW/XJ3c/
ty+Fz4aSvjl7hoM8a+K6gTMBSwkJCdVjuwBE+Qms0vJpdJvS8uUUBtjGPviT
b7VN3o5uonp9V0F0BmaiSFcmtL4T3wpkCLwJbGSuUnZeyoFm9t2rOu1c2YF2
I4sXo5vGdvAe8Azwqc65vHpy0STLOQZpJfHlBZV8xFEcBGynlu3mI8/B2FJc
Ja9eY75hN4XWQFxQseKHZKdNW7yqQfhI/KvX4tvSOIDw6wntqJQpc2GfPn2o
AjmOiW7AVG4ozeJUSDF89Rs5n9w5SJuD28mOZteQS5GoI6eZrMrkit5HWOtR
2R9uELCciYOeBaBxcLjInI0yO42iSAbSUuGcWoDkKR7/asOn2ZXHoWpUBMBM
glTN0AB37/W+d/etGzN7HJ/c4/DG1w6u78a/XK5MjQZw5YBoFsn5gPabV945
fnni3dIO98va3Sttd6OwMxdey+9oEFLqaHsaL2D7ztSqHattHArpU0exrb4e
0LxZ3HGu4lu3XNLhsec5IWU+zCm4lpKo+WPcXi6UJaV7u2Zh9nmP7JbpQHha
ANLqC0m4kjajhVkzssotirfrEakDBZ2DNA8uAUn6IvAsmTuvp9Kj7IDbl+aW
aSWmAC4KO8vWl1x+jrrBLsZJ5tSWYshRSen0osJg+eGUwWAinkwPQI5yCGXg
u9wgYd55hBs1Mki0eammrhONkN5RQz6MoVqpl9271hWla10IkKfq2igFc7Kj
B0FQxzXauLwjMuKgSmUOPRphnENpwKHM6kxymreAgy4Z00ohfDnf5eUvFxd3
vncvgpMb57UuHhQhJpFmTk6bW7e6c5zvLVt+/mR0o5AMgoOWrxuQskbIwYAI
FPnCMDcy2OXDtIhR2NbXLxgbA9ACpWtv98P+IyRlHj7yZVbTxzD+m7/9Zm9K
rNdzOEL6elU/QkT00QV7gAMWaDMtmh1OzcXnLZDB9OYO1vUWMRPPwPgyTcMZ
gM9dqOJFM5qquJ1/+Ut9cl9/9W9VpuXdl8xw8XKu/ptgZuA3ANjodS6SOuXX
HM0mO3rs2Lzx4wuYod+92/fTmyMB3lwIeP5094B7VS9HlOFLeikOybe9EFcF
ykqgskiZEKvzL90UmL/+RDrjBZeQYITnU7dhzbokzdT0RXR9Butcv3EyHzq6
NYNfWj/0Fd0hNUHoxamFRJVC7dJSdzhB8wgtw2nUTo/XIMBO+wSBLMPJqR7D
zxNT+zfMGHAw6e0jCR3ApUJfg3HopgSYz+n/HTttrqIktDNjWd7A7+YPes5Z
jEOA3bjGIpUYXVzg1kS11r+9a8y/V6CAvxjCGFnoyTcM68YnEIcom3b7P45u
lDzIuctjdP3UAJRawpVWEJnLpZEOQeNroqerJ1OAN/MOLlTwXPMX7S/FWtkE
XV8dH/U1M1Q3KXMt7cOFjIa6RAVtCnZKhv02OJzvsvd+h6QiWvSTIgJunCkq
cCmcywHY4nb+jVyy6IXb837nckJLdQ4jgUdH/biqvN2agkgcH44UFi/JL/wY
zMzHMOhBQUW3VkZqasR0QB3IHSPaXLv21o0bvYuO9qls6FVxqvf2urd21PfK
2jV0/4FNp89mNh1ecX7/st1VPQ8e6l63tQfAD9R3MP5Pb9R1vHz5/dNnMi+e
3Xp578eKcgv8QEEgE0B7cWmK7GKwlj6nnKB1VIdKydtcwk+dSSkSuB30rhyf
NAOdNJ0CkBqoDzBfk/RnhxN/ImAGGAPwAKLA6fXbq/mAqJlKuBCwf3+vAwf6
uOko6vzCGQRJsa+sjU8CzS7a517TVj452u7UDzTuJ98kqNeq7GuS8qbI0ge0
30loBdAFjYN1byRGxBspgBrmtDznALCnTp06a9YsaqGBmpN1LOUnKH3y5MlA
aHZqE147mvh6YmJiCOWpSAtZU1Ot/S5neLm+sdwI6sj5TJ2Sk5MBwCJbEC85
8pMzlWpRXp4K0rzcIxpWizcl5DRXNCi/0v16ifIIMTXg4JnLEy5G+O03hzZv
xo1Vvp5K0VA8hHnj+xbG9Zd/PrV457GmCYcP9/u8tD24/X5pu/vl7e6UtDcs
l2wfheu59aTA81y5fRVlphbieTA839QLAE+Dy/hSMYkpg4sy3E3lidipXvsy
uN0bp1q+sZmol61HCXlP9SKnZwB/coTXWTVOV2EMRaqRXMKGAi+qO9IV8PJS
DF5eHcDDX67akCavJIlrHNA+7xoZz55u40qeuqOPjzrwlE1Dt6pHpGkxSJ90
QqA39umOpDXGupdKIFRHXf0ZZXCUpiQjdug2lZB1gkDigPayk73ya94iESG9
Tqb6JT333HPS17///e/LnyFByuAIoh8TOVpsaZY6H7nkGviWhrrWqC6JXWOI
vaWKMUoQ69DE4EXjkx2lsmczO2PLqnis65ljPWkaKZViR6Fyz4qKV5zLkFde
XjuA9O3bb9669WZm5otPPfUUcH3e8aZp+4/PP97ER48/thbNsSYDRG/RLMSx
tcdfb+7+l+IT40LG6m8Ip2OhUXr6PzJN8POFxvaQ+AM/vzo1+gthfCyWm7rv
GJ+vmNrj7Tey/WZdEsL9jb2t3uvYiKgPbF+mQfSFJvewYBRcM3wCzTcwYYTr
ksTCVSGRWKEkfwrO9drW9ZvOxJDEJiX9Qw0Wo2fqPkn3Bd4GWp+/GEHXR49t
iuDkYxvrjm0Khhcd27nQ5bNgf/avwsKOt271Obtu0KnU8YBt+hO+b+0bdK+8
A9DdMKykZrxLehLlHHXScTVQn1AjMRlxiX5GRUeORAQkj2+iqBTAyEQuKdKn
UdRLl/MuNuUeTHz7zIyBJ6cNoC8Fb4hLTYqTZb8bV1obiKuZMsM5hx11Y1SJ
IaNnnnmGmtIPC+xNR5n3gNtBzvoc2SXK8HSZ0pmCkYOM/eGapnZ4dXIsjxYq
F1JtB8ObstMU/8y9KU9eSXqWoQq8CjSV7CHpl5HF8KNOAZxuaC13QUE+qqGm
XMalGHTRDm36LEjppwyUCjxM02lp11eX0aqipDVZMwwxqPEv+XJHFKVxJJXN
7mqyYZh0LA32fMXQnHpoQAs680ZNon0kxDJPuTfl25cTfkQFGdaVf9HpUodK
PV713krZ2m15xmsGW+GvqpE/ovxcQmp6jQmPj0zpXzP5HcoARmL8qhgWwepG
ArU6wCEx0pEj/Xed7FN+KgLai+vePlj1xt3ENjcS2oPGz+1LAb3vq964e3vP
Q/W9b+8b3NiUy/HPE1+4Vtv+8pX3z5zPjpAu9qbUJb2RFN0A9rJEwJMAP3nd
QDiOqFXIOYBqEB0we+7cuexwDiBQXUSD6XCbAIqDohsllCEMegeJgcEMlLN3
3B/z0UxNHeWWc8KSnFKjc1IAwdjOnW/wMciRUemBSfq3du7cWf6SjxY/VYYk
R9qHS3RzE8bw/PAcimwpgK0HLgUKCt1fe+01rlqaW7aisIqMwLSA7cDe54SN
Ow+mle+5Ht/u06QOB8a9VBPXDfw8adKkVatWLVy4kHbQvEwDjhw5cs6cORyc
Pn06SJVEqDXNpWGcKpMRZXAeBMpV+ZNbr/1ZH2Q5SxwB3DJZILsxY8bwk0uA
6OxTSDlUwGNnWAZyJUHukWCb28TcijSDTA03kQLIzzmw7pVr+R33pb1UdP5m
RFDx2AVS4C8VPjmN8gO2ucsUKX9Cv7LkIc6GnB+pac9kjZnavdJ2d0s7UHfm
O3wUjaH8MtKZO0jm50brQcADo2oNVQO6kw4N6P01+KlGfn0o9EjlIND9ekGn
PasjSps+YK7mkCZ5KYSi+ZdXm8dJz1Bxsk3Kc6Iql04u7OsXqd4g3zx7PCoa
58XYqnHKbwnY0jfaBUfRrEG+SN/CsDnRo0bS6VWsJXGD39GHyKzzKaU3MNSR
dHE7fK3QGhYUb6cL0lKtIDz3ggQlzLtYSYJ6cNNEmbVVhQ3by06+lXOwu0IH
6vfSm0m81Nah0clYbzrdSyP0fKpMn0zW/EtlGbINcqEbkRQaafAh3oe0ds6h
y9IXydmBK8g6z9L9+trGxm9iJ+jPUDU6f36SJtiA/TnpOfsvb79zJzKVo9Fc
TMnNbQt4bmx8jfSVuQCrLzpzg8/06hOgdzkzsUgmGNKF9Py75c2/4iO2CSQZ
cfuX0YAl+j46BtPDptRHnPzoLXAVAoyPhEg4c2NAypp/dpqPt6+7/cZdicO8
LBwRlvuIPiK7hx+nh6MvtXjoCQziSOJts/it5qCrIaJBEE3yQg/GZgdod2YB
SucNYp+3z5QNq8oUXquyWNRgmrz19FqZ2XO3bJt57MTmi5dz+QDawczpW6bT
89AJaGGj05NaMzk1Pf3wqZkbMpmeb9/+mqCL3ib9/dfB7XXH0+XA0M9czm0H
dP909wDSBLrrKEQZ6CrXb5xMjhSgtn4DH/06nQ7o9i5pXIODFBq6UApPnyPt
R5haW7fBlYLqhD4A6UPJfUlcJeEPN2S9v2arYl8CVDt8yyAr5kfRTZK2guGK
vZCLzcjWsmVLbgoYnpJQAEMFcbIA26Rc3AybhnenRa6okoui5dr8NQEp6u7S
qjYr5c70x7Qnvxg1uZe//7u1iR1PTeud/VFvZUNc4ZVkojSxS8M2miutEpME
1fylwjBlZqzRdUuvW+1jRe9+v3T4DxmzSIp8KQ+ZVpS2ARuD2/lImCR3ZQo4
gYPMGpg75A96Tlnj4BQmmHdqoEGe00jfOqpEpOHOaQL398Kiv7g08fdux78I
dAEnADULihbnF37sKM/GAKpeomUWt2vGN66QBJLIHOfdX+wY0SaSwsR3eCpO
T3snJ29BYfESztk1sh1/gV6kxAuHlBYHv22uGFBS//aGkr67Knsc2t5dYAl6
v5nUsfpg+oFDm28md7yz+K3qc2Oqz310bd+i+4mtjk/ucXp6b1nWgMBIPJ0o
VdvI9YA3igTKUm2PXIz6BIKSks05Br6ktNTRIPJqwhhxRu88iTHaXUPQHDYu
4WTgjashUg6opnZOafYGf9TNUJ1MERSNSbJKL+qjyoUqDcqK0Y+VkxXu+GV0
8+FRuxs8qTmXTa9JYKRqnJR5eUHlyqLtlEGPXb5pn4kTJ7K/fnv1lr1HAPNM
i5jpAGjBwIBJEgGTcwQISuIcnBzdtOfrvkrTBQlNWQ1gObLjWt0q9S7k6RLy
UWueqCsTWytsXj22Cx8uB98CVkkErMu/299vTetxnCyUo9Fon5CQoHAij4eG
d/lF3Bp+0hTqTx5c3+1GYeemra8cSZ0FdM+sP8/ltCHpGECWB4Pqa72XW8W+
tmXbkJIYwJcLqTJP0Y3E9tcT2vFTYpU6pdRC6E41qXvVe63kyRgdlQcJWM4l
O1d24GO+FJgS0mg8acxZmCiRafXalz8vbc9cg6x3r+pUsyniRkGCtBsFpiTq
tQaDrepD9C28rc4IOOfvo5uLg/K3FYalbFSNxvfBU6pUrSFmK5zpBFzauaQU
/TS1RRstTgaI2qSKNRknlzY3HpPPP08m3QjnG/NIaUeZJDpMBQBMpnImdZzh
29gWsub4VouVF0dJGeN9pOSVL8osWrCtoODMhZLzO8pOvGWMJLtTezBlG0Ng
U7G6XqhGejVKLAXgfaSojCOqXSkszOAinGZ4JQXeTe1OSqUpHayYTAjzweDF
8CGpkgTtmXmAuYrmVUVN9j65K59LU5MXw1n6oVN5DdeKj5UD0a9d69nU9EZp
6Us0dX5++9u332xsfJXTABLnz3dbfuZsBLc3XBd4i9sD5AgHGSWpAuURJgla
JAkE9PJo0CUZ+FdGxvlClPV1t1iasZbSecebFp6+9hi3//+2/Uswl8LdfNjt
wqfra0H3WIaMpQ1l1n2DZx5ErbDSA5SbcP4TzX7TIf2HWVvGHeZ46pqEmqPr
+OZVsrS6gZMLrzk9g+riSqZou1YgF/QOdK87tgnEzr+GZhBL0xWwM25c/qhR
WZtrThdd+Cy/4Rq4vaSki+RwNf0MD6GfDr1iU3mHe+XtbpV1kTwvegeuc35z
CKdN5xqzwN7Kmys1JiFH9qDEwnXvvsxHW4oaJtRFIL1uw6QjR9cfXPS+J7iC
6frjqI3ZI9dnGmKDCtoHyrGxV7QPDD77dI+GwDAURQDwP/jBD2guvzlTsO0i
qZx5sbpCkcHurQutfHhXUW1SzfscVDlNvV9p4dnvtMzq94xmavVY6KjvRWOI
VH7w+weT3j4xrT+4XRIpddR47rpz8IdVIZ/G5LYa5YSBWHVifYFJWb21EHCE
v/4xuhkqhavUVy8c8j2QNifLY9Ej0ikDVzFuAuxB+40Tn2JyoRzEX0U32UGc
JpmTpi4Y/PylaEhWjvNNylqBGFC4MLIGfWT47Zk/uD2p5eXxrSqHv6j6HGA7
O3e+cJQ2kfHuCEUBDKjEXyIEwQ+45c3oxj7YJmdsnwtTe12d2MYpgDJ0QdJQ
uRUuBw4lJiYaxBNAtf+jzpGQOokdiuve3lnfU9y+//j7O058eOLj4Tendj28
o/uBvb3vJ7TiczTx9cMTXwly6+zoNmhIGlKjJAzWCicCLJVblP2uaVfvUREv
KVApaefgB62m1FrDJm3LCTQsraed3BCoysIIVnUQ0L2UyrKv86BaMRx0ZUdz
pbZEMpK6IM6X50xFQJjKuZMpxyk2VdPnVFkbSs5PhQeBiHFxcSBwqjw4uq0u
3ZV9rBH0Pm7cuFGjRmmappo0DhiV9gGo7/6w/d7RkdmEl4haG2b0YTYkD0Q7
ObeG9PeN6cS0S69esqa0zmJUaFcunhaTlEWtaVXypS7A8isT21BmGpyDZAdy
Vvi9vHLl2T1L+Rc0y+WkZhQnmtFgo4BhafOUmXx5aHkOKbwkIjKl3WiE/An9
yie9e6W+75VjfaXcaO0HM5OLMyDrTvl53kDRPHJ6yxq9l9P4i2RpB/5aW7lv
TcVe4ytRBcpjOtwsRXWcoNGATENkrVNZ8Dnl3Jva5Wp+h31pL/HY0Dg8HjSL
7H2eVc6nEUikdnP3o1siEvT3ytrxoXZ0sNxuctHkrseNAXmpEYXXkuxyjNNk
XnA1W1zUs3fVl8QlG11caTedXOxzdLAykAT79tIqHLLPCfL0NDJYKpWOfCl8
kl1d0sGcTcEZqmzPRt+rbCz9krKKHHcUsANxTUHCp5rA0sCMPiw7nQLM3ZwL
dOe0bTXlJed25B56U/OOK7CukOpJ5GRBcib9p6sVjBdAZX5q67CVnK0wZKgb
bMg/xhfGILn3rk2LydXDMYSrA5lus0H70amBfa/r47IlaRm9Vu3zZ2/Knr5u
G+MmuH1LTYP89jt3ety+3aOq6lUpmq4XO2aB6i9efF0t98AWBqgENBJsjN9q
lnnXE9DVf44ERsqv5LSomP0Ik/sTzeIeXx3v/VbzFkuSeSImqNNj0vu/1vYb
N7aHZB8wubeIIbo/EGvg4Wsf+Df2YTNZueuSWNSKkTYT5qfh5JCIlvPwBD5A
wudyXpPVafGfrJ64Zl1SzdH1q1LjvvOd70g/MyQxWJfX3LDI7Nsh0FHQj2nw
BLczamzNmLV56wx5HXpragOnbxkzJmfBgvMpK66nbfss/fAp/rIboVPiXy2u
egApiN3U1P1eVfvLue1IGcQeIzWZxbWAdvc1RxufSN6Itmi6JjqTgnn/WDOj
O7CccoaoeYG8p4v96gGd+MisZoBjR4dTA1iL0vmLgkl6+SfCfH0kjKzu/BpG
7AMNwESyGsb1EqX7kiMkgGeHf3/YvNkCMuopvz5KMuHl9lhmiTT+SxbKDiiB
HpF/jBLU5WGCbAG6l+KfAbTfm/JkxYjfq03suHZIV/V4TcpJjSYmxSoB2GBp
oyzZPi5e2AjqCQikAWyamxjXOJknQcinTVUmqo6lCqFTL3GyZi4GNRAjYyXZ
gdsz+z7tA0DxXIBwKqeDGEkVD/0BUwCtc4HEbvRPRpmUrd3ya96qqnujsqxt
+dAXqt5rJRB1pmAILaVmSJDpWGppUcngn6nrTpnjskris0sZ0FPzeq4vfltO
L6hJFAQsJEFhmFE7lVhhf+cHbfeM6gDOAViCDDeVvcMHeHM1LhJV59CEl7fX
99pV3/N+Yiug+66qHrtO9rl58m2g+45daWUVKziHD8hNEsuagl7rivqI5cQV
FoMy0NqqdqhDDn4Di/bt21fqCJdwRD62DASqrAsejeO37CbuhcHlncsozqOV
Xj9fqe/UTtFs5yZa7DmNGYQIx/kOJ4hyVWXnBI4oAE5h1LfhEpIykBNHlL5x
mYCSU2t+0mKebDxQaSS0asbRc0UXbhacuQCYp4KUgUdLD1MAmGGkIjT+hFZ3
4luBP6VzUFm+yZFiSP6XmE0Jd4xoc2re4CU5pVSKLBQb0RuXWgTLv/MjTqAw
lNAVBNLncq3oFIAjBgbKzV9YuX2V2omia26H6xdS9CXS+JeahDx4hgSlvtxB
Wrswrv/J6QNPTR94++gb94++yvPjghHPJLlIxKJtqQtlluZEGQDn8+fPp5CS
7SmAAo/sUPGVRduBizqfxsfH08662UpWpxik6e3QN/nAuldI0PruX9N158rI
rXSBhvLTmFrsNV/z17KEv0yb9vezZ89etmzZ/fIIqZ77KDB25YUC+xC6wEeR
VEz1WaL3UFLG0Eva4bWrcFwITSEpbdvoRmrK+6u1pXWCHkNVdpGznHM53i4a
KmhDXpSBgpG7CupGWOYRoq2cepMF/+rWzZmSvXlrGD5yZ/8PeldDBKrxq26M
7q7SF+XYS5/zXdAqon7OnA9/MuP9CIZfsL7Too1dKIO9vTRI4T2JOLxyhEvY
18ACaKfHJn0Znv5Lb8xBZhNPPvnk97//fS5XyswFDlrDAHzqt//n6KaRnyb1
/ZVIafRwhctoE01t7CiPQxO50Ox8av7WfHA7GTGWUdnyixdKGq/vbqy6erWn
S6UlJV2amt4AruslyjnSXUTjbJTwAT5AkM7guLj6280bRwQnX9G4Khb6MkT3
6AiVD5jQH+Pzb/j2L4TbY7lPD2cnHeXRcusPX/it5kjBoOgHfLHDKpLn+LI8
8LSrpBroMU54Y6cDlErcDlBUfEbmDJeww0/QprriRlPlTVcnli6C1z8rZ17d
8XS+lYWhz3Sh0AU+TQfDh6cvWXJj2bJby5ffKCjowHG6Ef7SPKsECr0NadKZ
M7TRD9w98NLtfa+4NB+g+8XLufQJ2zJn39o36MauAXYadC9y/4Tu9GZgY5Kl
182fG3GEtN8jL0oC7gU/yyoH0gNohbIMCvRpFMkQS+JhJWpDoAqqv37jZOYL
Zy9kMcchQWUVpRHquMqRnP7fAUjLPFSwS7xNCWkxykZhZBiSoJQbRSnDoCOd
hopwp+gtSUFBANUgtcYrWm5FlCOwglF6zJPnpra/NL2t0B24azAjbVN2xXL4
aVu+6ajzBz1X9O73ua3gZKYApClfhSFM/1xaxuVXhR3YN5ShYUdAFOwY65Ab
pIOVjquuIxtclTG0Y3RjxNz90R/uGPVjh2P+ZbyTzy/U177EvlFQjTl+Of5H
dya13DXm3xvZh0eI8SX3UI+yk72WZ7wGIC979xcGanRmQQkVQtfyNn5bYVpp
ceXwFzmBAgBaJmQUTSqoAqeB29cW9lZlDtSkjyeA4dj83sfm9ZbODZAoKlnK
h5/b328NnAN6AcAipOvSfsV1ffjW3n4tru2hHW+C22u2v343qU1SUtKNG73v
3ui5e3tPILoaI4pyMNCTuxqSIAegFEjY0KJS6AUYnMNVYDCg2vjx40FZZDps
2DDl3CmYPraAByou1FekTg9BmpH3iPpSKSMuST4nixD+VV0aYwxxuSCW++X6
hdZphTtUYhFj62QqU9p6xcXFSVwBaoL9SNCmE4iC1ngw5MlTTU4Q7KkMCW7k
TIqxorAK0J5dt4MEwZNS6IWOFNXZB1j6XkIrPsyhXO4xLhj7lNbpgOR8LqGQ
pAludyLDQYORkTJZi9XZ4RJKrmIPxeP+Vo/tcmVCa54ZJy+c6dqEQisCbGoh
FYRr+Zenjm9OYNIh1113CReqaA1KKF+FdssZ26dhxkA+txMi1QG30xr8S5oi
SX2NOcJP56rk66Myd+7ciRMnKv7DHIHW43EiI0NguJQge4ep5YFxL1EXyiPB
nhRcOHARxFUbnz3ZNVxLysLyyzntKlPa2Fz8tXjCX6ye8l/JeubMmdcLO13L
j7zRnGz8JmlIlJ8zJbyRBddaIwEhd0S8zeOqT6g9LU+ILp+Kw0jQIjV9XfkW
0NLN0in9Q/NmzAh7NpmH9jPS4/VaFbK6yqksjLIqpqDYu4sFPpZ3SiIVv5jZ
2uUA1yXpoIwQHWLPuSjpe0SOija4+KtfvLjdTF0b1TVJT3yQuYZ3ZR+Mc6QI
PDnqQOQ4a3BSdrTVaKWX+i6z3RFEPipDDGOBbeUSc1AJ09ak3cNQC05S+Jc2
V0KfjbqEeKxzN+fmn7m29cgZSgv8puLsc6T0RFX5qR1z0nMACUFkRpdVyiBx
11V7Nq6NxSQSBqQBiOdFPqAXRekDN+CrgC5hzxeqfJhRiy/B54F78Bif/5vY
/kXlfb7Q5B5UXL4KdH+i2f/U0Ej6VocHO/bk2FioZq1BPja12EseII+RhdZ4
NqB72tpEfVEDW54dUgMWumBHhyDlwygS4GHhLri9/ng6Lz4HdUS1ozBAKv3A
iBFb5807m5LyGbidd9xeWmu2KFR/UiYFdESu4F+48G5j41ApshlZc/R73Zg+
VQN13pz/Wbb4RaVOFKoyPh3doKQ+GRecbLwP6eKcBpIHz9OxpA7s3DB9QMOM
Aenvv678o6YML1TalzTpALXVu/hIb0lhmJ4oO2NXKajWc4eG2tr7yW19vq0t
XcDvLMZAn8J7jR5G5eASGpZiOyRxpiCcy+ly5S6SmrBcwO/UQ6KOsD8osecO
eJZZw4Zh3cTtfG5P+raw3BAe6v2K+R28bCI2UubykmG/rfymQQmlnoaRTn8x
hzBOcJByFZsxq3T4D8nI2Fg6cDE0SL1WxtnwKApN6MzIPhi+YsTvSTpVBMZY
hKrHFAx+niIx9APVyoe+YBAoRmRO45H7JLv7iszX9TDlHBXktM9TVJ4lRmHO
F3OCecAexkglI/5VvAVcpMclgJarLC3jZt2ct8DtQdolr2ARO4x38ttBFEA1
cezOijd3Vfaoru59p/bVg1VvVJ3uvf10L3B7w4w+s2bN+uyzvrc/H1hUH59e
3l+tD3CXi/VCXy3VcmBAUDLMOY2DGuffe+89CSGjR4+mRsAzPVXBG3rAGU3S
KK7y0r0L1F3FS/kGUgVEVrQhjWz0nCAzKKGCZgycHHJRwFxUI+maklNsAbBB
UQ0/yplMLoCa2ktpbUBv1XuR2Kx6Rht3UgEWXQzY93kwAiw/9fwlawrpYgcV
oUjGvhHqU06eB0Nz+ozpuWxAHyn9RpjiX2pH9UmZa2kuGorTgolYvUqjWVEF
Sj5y5EjvrPx2w5ZxnFtDgmqbcFCMR2truRW1OlXk5KDkQ5pcuDS3jImDsw+l
6XU6rp064MiUAQrLaPmnamou6TNLLuWT3uWjwr9YlBtKsiDnhIQEAwGsq9qf
Wrab8zmBV5KGta2oJhA9QokZ33XfmE7sGCqLpJKTk8eNG0exaVgDcsnzJ19a
gDYUt98ra1e88Be84JzWM7rRUFOnTp0xYwZz0usFna7mdXDCJTVLvVYaynJy
XNdp0jcYBLnbC+n8yJ0FfNKV6YdiAF/n8tw7TtazldNU9HJVzms17NMXiW8N
8CfsdB7HTwrDaVohtJArQqsTvRwSZW1cSNqb2iVMWIzkpags3W9sXGbK74yA
fxW8orUpuZozikw6PXSw07ruMCQdUY8tGSmMAgb4sOPlWkOdmhoDgYDWgYae
X+mDwDLSRqQfqwN0oGWSZpgC0F3LrrHfdgJFdWhh3iBnNOrY66VLveZtySu6
8Fnh+ZtT0jZHeDL/L3tvAmTVceb50q2YaI9bslBYlty2235e2u7tdb+YiXkv
uqd7pi0vshbEJoQQYi/2fa8qoBaqqKIKVEiIRSAkgXaxb7XvO0WxiZ0CSYAE
QuxQqC02xfvd+xMZd6oQwm7ZY09w4saNc8/NkyczzzmZ//zy//2/piML88pd
E992svHNms3cSs5S1/38+f5vv92foorJNUKCJUARsZhHz1Nt7C38+IzNpGPd
TeL2QIP/k2h4yoDPYyOo3jKh/x+w/Y6M7W6xc7rWx9VpvPHCDQ8bWF0yTAv5
lxZAvbU4vNA9iCxdl7QT+yQDNV1IWro8i49hXsXtuo2wD2jk24k8G91OEC03
alJ+4TzQrJ2AodyM5qCdVuUreqG0tPKUlBK6Ajo3ldXB4fYn4s9vRjd1d6VS
m2Fu/hxwO1cxRCk9kjYEZWSkx5NzamopvSK9GX2g8wv6PbopOhbKqf788YJ2
Jwra7YpqyEQ+c0YdmTuaf3VTkpYfomPYwwuw1Vcxt1j9dmqnuI3sGo0SfCvh
zn1UoUXTOtnqVKUlWeOJwVtlyBtcyX0qqCOw4Y04LvgHyav0pVhZyMSbYhQM
thMZt4PY+ZzOulP/UDV49dh1WAlEID2z/CuQVeoTvg0Od8SRruNVbJmA5wXS
/xjdKsd+o3r8vUGNR8Fzl78tLenlUjLGGcQcdLFj2k+2Tf2RHGkGQbnZjB0Z
GVXPP//Rynl5oHrX3HkqqAgFU8RDcrKueeBG8gTGv1rQS39DM9cDV+1oXVNX
NjauamyUAAOq4bqgnZO1gy9u77FpU28pIjwMqh+TjEuUV0YikEqr0HtRL1FZ
x+f39bl6od/5pj7sHH9zWMO7n4H2A9m9lyxZ8uKLLx46NH7Pkbgd23uqRqIZ
GVguL5rSgpBBX7ocgpCBeXIe2Lma9cin6zvuXtXDIJ7gPQMq8Rd4jIo3JkTs
/9SXVtV+LmAzWKTLIhIVaKhLObdfnnW71lHOpRaS6jlCzhyRnkGRZE0r2M5M
J6OwWgzsNIEd2Q7alo3CQ40SEhIoJPdFez65ga43T+roAocrIJpzFQb0djux
0mWVU0jDTaEAFEx/WDbuoKwJHUi5NLXelvSo2kGG8qG+fHMuN1H+A7nxnKgr
KJOHkpCDPrxBMpEHQAa+1KPA7eESYF0agUy0RXMJncG5qLQi7QzOAclKe7j+
zgr1kBsw+I3qTa+Ub9CXoTRtSGXmCLLVsC8HXp12LsRV5PxQeI6TZ0XG8G3z
poCWTUAzuiJDUzMr5DiQfkXD9iOLxgHLKb9kNl46krkyoqvs3own90zrXpY+
tGr6SM7iUZSWoxGeK16qiShJJiUlUX21Mc+XdwGW2z2SId9nSzufr+iSGt1m
z54tbndNwYUVzblqMPqmUyTuLG3lhfjWUGCEYiVeub9GVdORWf9W/qIulQt/
1fByB5l+Bi3SEypw8OhwHI/st8nE1T0S0E057Qp/6ezpsqPx+zSGG5COUp0u
7vAZbi/tpGuGxdZc4IoJJTR4N6codWvJqYVAXc6hernK6eg/pcKDErta1xVg
Z8AS3itNIMVF8iRjBwOBblBAbvG5wggcdPlb7yfPYp9xh9GHI+yI25U+40J0
4DphuRJnt89ZFN4VDY5QU75VyKRUlVGlIz/5+z+MIPmqxy5d6n/2bBwdZm1t
N5o6QpKJmtw5SN0F6m6q1cW65mktlJoeC05CvBsxzI2F+GLxuWrbop1glhQC
/U6NtLe23+f2O8XtbWJM7q1BdXhuWxvkxcnC9RanxxLXW/BkWiw/3XZNeSag
9xZs9tjnmUedd8oiGS1I2gz7qjnp+ioQ5RvQvmxFNmDbEHKiRzof+r0jz44E
AwPF6QE0ifOXFman/3RW+qqXlHQ4c6ZfTc3jJF6XO1s1MDpSTuFaJFC+W48k
OlVtLFyUxHbFKq7Q0cnl07N12rTK9PQKBcG4FlWgGBJjZKHL7i6b/4uiZ3+6
M2vQZ7h97qij8yMKkHricK6RjKSR6CVEJmo2qpruOgKX9qArBQrLOPsQcmv9
5roUhkKK7fnpSKEkvk5PzoOcoRjzzkYzKxdVSROkGrWu6EcgJUkCDFUrmfsz
5b84l2peLH/49Or7HCwqxtzNR/EE1yn0vZJSIlC3b7cuXBoQXjXuHo6XjGhb
Niri47BqTc7a9c8YqUoyjCFI5GNoODIyVPHwO7mcKyD0/IANvlX7Mdwqwx8j
MjcUwOOsQRwOzgFpb0n5ARBl5swNixYdf+qpBiCQJGcSnMluy2TkTNadm5O/
T2LgASlJoBkf3P5W6WcS3KCIDUeGNBwZrMyj/gsMl7tnDHn/uRGNjb0My04B
lpUP2PnOIHD7tm1xhlgSMOglJ5FDOzB56ljHz8HXtnN7e19q7rd5c5/z0zse
f3rgpmvk9n2ZPQ7N6v/B7EFvvPHG7vf78gHWAooMFQRQ5xt0BKhTOB30BfiR
9E6NgDoUbEtD3NnVnfas7invQjIPZdZrNTIxiY9wRVzll4ev9Zh9dfA4Qm5+
i9tlaKsJI/AGn8jo0ODJX+QQ5lbTi2unFVSRzMUI1exlFyj2KPCmfQyrKth2
9cRoVtwdfopvqaPgXBOlkyBOAcfSqtKHuDrzFHn7puGg5lyD3XOP6sY9WD/+
Ib4bJrbTdULusSXxAeO+i10livuAqSSjiCXtYLQmcKxLHpqOuS8SlkhDmWlG
SutyDI839TV6Jn85U9DBmVM43daTfM5fCrk4C6Pu/FuQFHFHpZBie/0pnEYZ
01Z+iJMalQxpDVLqI8wbxHGXPBSBoZXA8JJhdI8VJ3O5JaV1r1Y0cATQ/nZy
RFhm49MTd73yFPOIsOKgVwU/L9d2vlzTmYqMjG4TohuZ82/jq51A7OBnsD3J
KDOZp0c3A0tRQapJyZ3U6K0sp935oAsi1IW+XY6lgjOunekb7ryMp4UjpKcK
9AzVix7c+EpHTSgGoTNAg90XvYc6iro7aYQ3zoJTbznb+mBaBnpIuikjokqb
F6/S15Gy9sWH9belR+Uv2kdBeDuo4dGNgoFpeQacyVokspJ8oja7rk+qYorh
nSAo6aB4o2OH8rak1F7HQRks/KX0BOMvf0n41B5FesmZDm2KMxh/ypVfafCc
Lh+Vg6RxVdrVUkMvSchR7skFCCcvxqFmI2UsbicNV794sR+4PQrXe165OuCj
4+NA8leu9OOzcWPPhoYeJ0/2zst7UOyt+V3TN0e0Pd52PQlHiu1OkLkmfSDS
tOC3xNrPY9Xg21wLSen+Ldz+f8b2e7iPf3ptaz1BCER3p4dBGSZY11skDrPU
QJ6JxeotYHwLqB/elHAwFrebJixI0S3QOZCe14QdYT+l0nwNYuftoxNoOrBq
/zurQ3Q2MTmdIaCdT2n5InVdRI+gUz1ANeQaQqK0tCMv9en6LnUvtZOaqMld
BRV9aiTAG5BaOy05rF47C9CoCUULs2QVA25qmiCZ6NdlU8sA4F+xaiY7dnoi
4WBv3z83jp+qqZAVfaaikeTjuGAADs413pzhjUTs+p/SMhrGDVf99eim36ue
+7JfhMdcwg4zkGG00t8T3bg6R2Sw6Bkk5fsfopsxTO325YGTlZEvyPzi+n+9
kvsvpSPvUu6GQeeT8odPrfqpnF6OA6RVSzMOlN4E1FEML4/d6QY3wpT85Lqc
CIDniJGqJBGRJzsUVUoMDaVnEw8DR05m3sGHn9TR0ZZNMRnl3NnR9AoWUu9F
KQaQSeOU79XFf4vRllO47umsO439yveZ6L6LCG+n/ZUyiVJ5/TYYqCY+cgO3
81la1v/1oj7GlIkgkMZeF8/3PbOnpxflOAleK+zdmNB+R2pElZpRTBdRVwpk
8uzM+Gt9DCkzYxMofXvKY9uSHtUF8nxTn8v7ezVndbqwv9/e9/vv29gb3H45
u/2V7A6fPNX14MFxFy4M2vr+kMLN48DtWVlZmZmZusEC0dW7IB8dAMF+hjHi
37V1ww3D2nB0bMWHF5bVb1M8fOLEiaA1fQk5QjuQbQhVb730RKPKLta7D8SV
rU0tjERDeiVWFA+RWmwQVY3eem5SNn1RZU1zIRGyXn56s9JWhuDhX+G9AiDa
59X0Y5M50ym6yeFRtUaxPrJiGgIENVCRgZy4kE0E8uRfI4ip2ip6VxmeTCTD
a9hX/FM6PbnRSgbo8T6yIxlDKU718MGiLn9wg7ScuxBAJvJ8jFypjJILGTYX
d03DNWeVV7548KNXq49uXtW48+Wy+rdqt8THxysaDww2zCjV0RxNCwvXNUdT
KsWFRIYKDErIkX1ESVwcMRAD52rlpmybEjucy+zAbJHaqQZDYV6vaqQAQOs9
07oD3akaU5LlG95evWkXeZKDwYjJhGyZvyjvr6smxda9lzYBt58p6bT59Ue3
vdUV9O5kgX+ZpkXQfm1nvYb51tLu+pdKpJKUeBK4I9xQctP7Up62dDtumbfb
5R6u7nzZuy//RFEvxUVFlaJQTfHSPxRRofrSxoLvqoYFrQr0osaMs5Ohh6ej
k7JOnlLZ9ehUFp7TQxgI/rVz8HFlX+lUSmvgKhJI5lHgUY1Kjiif6+KmEag5
IraXMM8RRmGj9VkvRkNZsnxrW2OHYcKw1Abm07mJHWVyAxGIjdO9tBJn2ueV
DqNXDxLNDHy8PrLZ1cCkRspUushbfuS8oL3iaDOZc63ICH66D6/AiRO9rkZx
Oz+vXO73wYHHuXf8++mncWD7ttc2tZFB8nykzXCEUVJWjExddqigZPVjx540
Cio7hlW6sdhjLKkmgPxYH9jfHMTd2v6wtt+1sT1c5bom9yDnyCPK7NL38cYi
M+Hxa019id1v4Zdx2zVFSqe6fxoTLDUUycmv5eE9AnNyigQPXy61YSkkr5hL
b8tXzgC56TtDh3Pg3TUqtx87UVxS9jwfoLWMa6f57KjcmF84T6/PsrJOfE4W
tj9V3EHHJb0XAY1chY4lhByiJ6ePDSHhyAcErimbxLqFrhj7xJqJPZOSiqZM
KdQV1Ah3+ihJblmz7mkwvwrqakXyV2SBIOIRFgmB5Jqg50profPUmVTLthI6
6tUoomKsUhJI+6dlBPbs01B805j6wLqU6bKmvSgDitMBledlp/Pv3XffLXoP
3BgDG6mEE1QiNexLtlTCy4FPwfaaCd+kLrq42hQRxDv9awBgmpoMtc+EqzjK
aAnX9KRgpgsfWrGCf3H16PtPpj4ETOLWuGhOIwCW1E9Qnt2Q3xRDe7s3nSHP
8cK4hLIsdB+TDRtCnxs5xXgr1CuqIfPnlB+gfnXWV/mcyW5LjWQ7kMy5gOZx
hnhJFFrR2QdIMLy+VRq3suozARNgUuN7/XceitOJNQKxDufWN7xOMcDtWyZ3
Uu6PsxRL0dl2c/L3t039EfCJkRrEfvZsv0gI0bRu4HagPmBS3H7hQL+rF/pd
3d/z4wNx7P/7jC4Xcx7/YPagAwdGNe+PEODXbxgJupMgoSUcjCSC5amQBG5k
IvnGoKM3S/o1HBm48ejAnTt7134wiwkI0EiSj5LRQWxc2XaX5mk98TD3SGCp
2RbMTB3FTpRE0jspBVe0PHdBMzjnFqUMLJ82TNkZbfI6S5KYDLmJPgPcSglL
xqakUuxrhKSQpOQeSVHg1pAb7Uwx+Ivy6FErNtb+z529lPXI5az2tr9LLZLb
OaIwI8UgE8C/971DdCNxIEfJvaHMFIkC09rBQC0dXZxMMZgFcHDcuHGudHBP
t07pzE1hVsUR1xdISU3DioZRwORgc5Ad5wu0DzlUVL300cni42fyao5tAhsv
rdu6omE7D57hZXladk6NTFUoDC8RrwMFk8ZDJkzBqIISMfK6Oa7Oj1I5nBgo
YSSz3TiFS1MkXszTae24hAr/5ECexhegYCSjms4WjU4LUAfAF7934rXKjZRN
K73xocaOHQtQ3/rmY0w0TC+lR7lUEaxzZNID2q/WdXp76eMUm5q6UhMCk/mE
Uxj5M+yrPavFmHxcRWVHFpDaLCT2kSCZKykGJnClQ2oNN4ImktOuJpWaVwal
8snXnhwY5i44yo2h7+URVUyA3pte0S6IBGpz6TzlQiGFdJ2Rn9xreyd9aigS
NZUtRgNSZvUYXQzVuGGoPiNNG7BJAVXtRYwUOliFUH2qkxk1lWFaSxrQlyFM
IQKtVQw0jNeMIIaiM64TNVL7kZ9Uk66eNJJL1ZewEWwH1empHS2gt5oq97Sh
NB4KM39dyZLSulfKNywqqKRZHNF87AXwNAIA/uLFOPrGysouHAF1X70aEYrk
Oz//IdDORx/1EIcbd0YKbm7uA3wEGw6jDp3XXFzjOMudoE5zXRCufb5NK9Nl
EK75LWHcre0PZvv94Pbrstx1C709ugVF0y+cDAYL+W3XlEgDhtf8HpK1sKu3
iUHvPtjByG8y3p1wuvQYbeyu1hn3k5dIIMr30uVZK1c/Be5V8wQgDWIPSi95
BXPfO5xrLCR6Cbk0dH0R3P7Oav7VfFFV9Vh5eeeSuT+rXPirlJSStLRyYWfw
kafL0u/SSHmaJpQL4C8BpAGd6XMCbk9NLZV2rpGBrkk6jaGFJNucKHzkeH47
zqKj25095PAzIziXEta91K7mhYfsBlXH0ughjyUYNFS8MbqHvG5KLt5W1FFx
GIUoSSkzR8s2PbDLFl4iyHn5TXc6cen6cW+sUZ5dXg0dr6K4svR1jA2QXjVj
3Q8NiqRTLdBL7rqBR+nMD2/OOb09G6zLcbItGdG2cuw3DBfl2rHBlSwJ6VV4
oFvW88slYMlIVaN+eXJqRG5RkTcZMrSD2o9kJeqjVLSP4mbcC4pBYr0MXI9W
WAMEAh5w1Na/TMpl7cS/AKiD2Dckfqc+4dt18d8iPfsa3rek/ABgoNmTrFzh
1SJKMdRLkbkB3NLLVddL2dp8g4T5kENl9eJD7+cd/iC/bsNrJJbiq++q3o76
YrjsLpeAfzdu7Ll1a4QLDcbbnvKY33v2DN29ewjfoPcI7Ixi+Dlz5syfP3/q
1Kk5OTmgtb0ZT2ZmZiYlJTGyu9pu7EilVBTiVm9HKUv98vhraVn/je/333Kw
7/Z3hpXvn/b+ianbtkVcIClziN8qHFLtR2IS6CvkxsZVwAkkUBOefV4uTdaS
wFWxk4xEldnPndS3Jnu0oivkI+vYYV3opcOgVBYbiptCw5Ke3HgMnB1wlhZv
ox35hNAI5ExRDWsrxUUUei6jw/npEXa6YImHSnU+rsuzJ5mf79qxDxgsxlUD
7pHzBXUpVU3Ra5jjLhkY0sgJAkBrz7TuoFwailMoHjiWKRgHOYVagDmDZqbU
Gv1h2aEkFFXHaq5rbtQR1Fpb/+p7h9a/e7yq7OCW5ORkoHJaWtrkyZO53UD3
c5kdqJ3y7EbVpDyyergKyXTFdQJLkXitSMyJiiBRfq6o5d/pEpuGbsV2KJhK
mxx3jgACp+7KxejYyyUMpUSZX61oKD544q3aLRyU1ROUVZrW9dmzOkKvki1D
S06cOBHYz1+k4UGibEbdSk9Pfze//941vSRH6dPqPGv8+PHKYKq4KN9JnSL2
VXTRC0ZqjfHjnOLZJlSc/oFuRGu5vYexz4wbq0iR3ivs0Kp6ebhawSPqeqKh
lOwqlfalLyIfJRZF1K5dKkqp7go/lXyknDIntU7L+yJzDR0OVT4tOlwb8c13
igsZs0mNNfpea82/ZK4FzEgo9Pwzx3z/mYk/Ni4SozCJGTiMscLI4jCkjUgS
JiMLHazr2pqAFGFgJJJ7I5hXtp3xhQGIZNIjVRjgzZL6rlA8VaANZRnpR2Ck
J4qq46qryT72oPTGxl4ucCtZUFDwMGD+0qW4M2ciXBpwO2lIf/x4z4sX+5WV
dQqDAmUuLe3IEVfAFfnUiyrgdmDJJ5/05RPQjqqPreGWrJsWaCqW6H5r++Pd
fp+LJsHkzuPkBFNSSuDPBB/VLyxSa2N7LG2mzfWM7a1dWQNbLHBvguCSHiJh
InxHdKPT4E3nNRdwcvytZdNXrckRl9ItAMiPnSgSukeCpb67hgELfM5bDNZV
8IRNU7NupMb9oRvUcRW8DXR3BVP7Bue6nCedGyRAZ6LGizYQNRtloQDdRfLq
t4uoFW/RgVRWjEZyMrxY3ZHPynHdXx/Wme9V45/UyFy/+BE+dEoUm07JxUFB
tSGetauzw4UojJYZJbwMSyQvSJa4xmpJhi5V0M4uJdCSbdu2pYtTDYxG0Lx/
zz33gNv5UCO6Vq3uHFdfV7O8DBkOOsQolmj0QO0z6hWo3yUAlkJZWr6opOx5
hl2GbHpjw5tqkKf6trBDFeOLNiJVgBRAW5L75Cv5PVUtoCQME0oQhBhGOjFx
cPWEHusT+9DtG8dQyRoyVJeGFnN1QDllengZzrpxOTpEpgbj7jmVeYe4nXJK
nhHB6sKmvdfVbdrEgVs4Kp8ZRGRsygDguSKXEyCRAxlWj74f1JebP6egaL5S
M2LXM9Me2dXQG1SvODngwbDjMk9UsFSjOxI4curjEZi3uuf5xm7nz/fft2/4
O++MbmoaETG/T++4P6sXuH3b9lV8nnnmGTBhSkrK+OgGFlLURUEYsm1o6LF5
cx9mMQz6UvFFs4HwHCG67+6/b23v5Rve/uBk2qZNvZXvAxSpnG8yTlQ0hs1Q
U0x8mOkAyUhJhs5ErLJG8oisZWOv6uqu8pc0bnNH8qfErUuIwEtunwLaOhvS
gDKQ5T6p6W0ChSilHumPrPgkz54i59LaHd8VeCcfV1u8j86Y+KZqXM7pPA+z
UwNvqHRoqe9GnOdhk0rhgo78c9IriU9KgRyXUJ+EkkinHz16NLdDsUogMRel
wbdO6QziDYBTsXdqp1OAMjuujBh6WIM8R+R1SHAqevd48XsnqHj5tGG1M8Zk
ZGSAZg262jS9J2eRM48Zb5YC+yNHjuQgGJvj0oqEphSsImN41fSR3la9OTQ4
c0S+E5icVrVgRgilnLTJlsmddqc/ocI/0wdupYtcLveMjm7WXXY9ybw7rjKQ
ifqQir2D86kFk1AeWtIrOMnltO3zb1ZWlvML2o3GjERAWPr4zhXd+Sljh7+c
XBtrQD90Yxbr4MxzZQjRf45urpgoAiPxQ36gHBLusnxsugXFGF3okTvHJags
TURDcUVO0XTgsMLpxl+m9VS4DQI1AeQr6mInqfyCEvHLx3RjPqvVQtUavVDt
Aynk/HUlC/PK+WmAYOenzq99Pg0aZf507M4XlAjgcrPjfzJr/I+UfNTeriaw
FEolDqRWqnVA2e6NbjpMMVSpKqMvFaMVOSsgrGVMorvam7qd0uxq/Dol4RmQ
D0YCw9G64qxiFUMDqICyabHRffj/iW48wNSacdm4ikYtNIItmVCAvLwHc3Mf
0I1UcqkSx8HpT6M642Z+/kOFhe3Ybw25hTEtSMXk0EIiOxYLfWHQ1VvbH/j2
+zG2uxlTAOTGc6iTRWt7uJPEmylVoGw5qYzNoU0rY3vsI92CVxNk3tWED8dl
iLkQwCYrRpKMVmLV40tKOvBC0WPw/vLGrc97VqpMNBBScXHpQl5VqYZCWTZe
WLoLXlLNHRUVjwISlD3UKs6OE385M7GOnHTL9C0hwBDdGplIGqSP4q2Xg82+
IUqValSnFxi5K3sw4Fy+N+WpXvRg+XO/fH9p2vtL0+n/FeOiB1MJhwtVPf8A
Cfy4FsmJnE6RaA3rxXF7S6celDzEsFB5xkjWBmbVayAsZNjBUi8aUCKKnByZ
865g2sdyispghplW/l1vVlNSR/5SUUfapCMRQ4MLoBrJlVww+IgkZO3nepKS
XsNyfuE8Jlyifdp5zbqn+Xlw44zjR1Zv/SBp25EkkD/JlOjnopUjfwHuNfo2
PbzRsvIm9wO3Sx91Zbl8+M8qRvxcY5phUBQ9lkKp2HUIjepEA9xePf5eNYI4
ooqFNAmuVfdSu4aXO2xY0p5v8qciuqMqKxEhwGe3ZewO0hxUWTukIJPRU+nC
xoT2QHdXEOrHP+QMgrKdmvrwzg29mKqQTAIYFS8sfk7dbEZeA2tGAtZE43Um
JCQ0b3ri6s6ul5p67svs0dzU99y+3vy1K60bSCYzM3Pr2yvB7dOnT5fQPmXK
FOCQqiMiRrki4Pbt2weAkcBXYCSuQgKwnJMRQX56ejo5yFuQXKTUoYo6ysWo
URnsgQCGDYnfaZzyPZktSnbILlAvkfy5rcwCFNLRW1OMse+p4XyUgic3bpmK
ExKiDFkr5vQUNjI3mXIxmli1YxufyDvlLQu0FjGqeJWCuWgiW4mU5K9cjOZl
wZ4eAcb54gkXjqol6NOlHCi1FouqbKnGDtlyXRlKhiJ1AkWGPswNE9ttS3qU
u6CDJ80lDUb3TOrF9MrCS6MyXg9l5kKZRTVPVWykyq9XNa5o2K5Ce3XWqMTE
RLICwNfNBJuP5fmk8MsrBq6uGSoPhINOWCSTB8lxng3OIgfyVHifCvpClaYN
KUweoPcBJeQ9MvoAT8UzNVvS8yuNnwWMV3eUx3Jj/CPK7EgYM/KsdZShrS6Q
NAluB0eM+kT5s7OzlYLnRAsjd31cdKOdeT5zcnK2bFtRVbNEYhKgfdtbEfO+
6z5OjV03URXHh8QHQHcGQ1fz0zU46iX1TjsAHYigXSFHo2xrEjeslQsKPDw0
o265QQOKq9MxalBS18t5pRE6xP8ON1qVk5KK+BiEVHuR3Sy4fc3Enhoi9NyR
5OM6F1363DVFeU1Hn11VoLVKUgqJdZdw1cllQc91JqK5+7mk/7t84U9K5v9E
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
Pvn57IJLDq141/yeaWyyTSZpWqkriyOoO5oQ2lKO7L2y1dtjWy3r9S/piCDn
NEu0/BRSmGa6l1XPvbZs1w+qtr2Wf4msmgJboeDwkrql6EiDHTmHJjyfev1h
MHY6cB49iOVsMvy5mNnFOEhu6V2nDvnmosnfWDjphAUTj88nuN3iqTGRIq5F
1Qw6nLmE8CCqnFc4F01fmrNIh3EBy8GMNYYMKwKsJYKAkGgzW7fWzPkLJ4du
WAn9kNqwBCwug9kQHwEz7qZlN9fUzRC/jD0hXdM771QIM8uWtaVRjDlpNvGl
L30pMAPR3ciOmGdCgcNJsMKiA/5tdgy+dLxhp3yLpRjUURDOB5ncj6G4f0qa
OvSO8PBp8vl8+/DNTC3gsKXs4X/k1QtK/xD7fHGMLRI3HzTLKPR1dnU3VdRv
pIHbj2mfchZHqSi3q5zidq2Q6TGUKplrotjvgn7qQ0yN3UjS/1Lzlh4mCdIp
QdFUxDNoZmK+pHpqRl767fpSkSPyUufdBPjzbqbzaZpx0tKZ31m4ePKu5Z0b
pv0zVIk8T9kbqYapHCcc9SLHC9VcEFUa5rkiYwVaNZDM844QjS7u6XGXbRrf
NcPNvb3Ouqdn29wIB3Z3QaEr94hsz9ydfB7udwEGe3r1RUumvLa75vkXF1BK
lDMJStYGvZPTGVWo0OgeyeqapOQqjCdqDEVn0tPbA9oH3r84eQrSQfxQVoTf
uT6JtZcqog+A6JgHAb0XeJ+xKYOUENss2/gtqOZ9754f3D7koer0qxj7SSbk
aG4n9Zn0UF/hXTDa6KUtbeDDExbGfTKUYLwXzRPS38z1KqHo9uQq06fvzIfZ
30SMrLFwXUw3rpvaYCumvVZVM626dvqKfr+xsv9v0mfjWiXkN/tbsNCKVbdl
AAp88jiwrFMtPMsoRQRx3V3XPrg92IzyeYanQ4c6btnSHZ9z0qRJzz3X68D6
c/Y/ck7+OnAgYK1zTgykGTJkSIa2IPa33upYkZQZdfZjQ9vk+C31q5pePRDk
UPvC7uC6AJLHHmv/9NOX5i/UYgFrRBq9dfEFt1dVogJh3Z/cvOGfCCCVcgbV
pGC57ujRo4OmsOgFmswdJRP8AR67pjC56zLVYkK3ShKodnvT2swpAq6CA0nz
gTSwDdY03X6eF+i+KVWAWcpsdeDc5k0gJEcY4bHrORQwffO6ta7BWZKVmLiN
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
rDCCMZmU5RZyy8ktWJrUv1ned5o3vCYuvSkkvR3PEd+JYywFIcsrLDb5KZqz
5UUCoV27dhWUavDgwc+OvRBunzVr1o7ayw4u+zcHVWtPSTNmzJjMd/Izzz3f
uUp2UjnkfbIJ8Jdr5ZGhb6Fn5C7MIlPmNDCRkTXLFBuhpYg62tEPqFimFaaP
VLKYdMjeFjThcELl4oDkHjnDEhBjKzBh5LiRZJMGfD3TzxsHf4MVRSjndFDI
qHp43HhDQE7RG5t0k5TRwWaj4cn6hHWZTdxwLJTcBXtOThQkmn9KQPuMRQ3W
KPm55B5THr60ue6Qh6rfBe07D05+ZsfoxU2pT6JeXnwBuSw6JH2eUeotAw3C
vzGaanRxu2M5zHEBYiAW8B6Fhs1Nr24rupq4T5TiWF1SnpT5jVEnHx7X6kdX
v4uBfzy2VVGbOa6F+95xR6kOZaelcmDZWroffpDFlXDlp6dwZKKR0r427KRP
mc9/pu0YIlP2BdL9zEvyIWkKyD+mSZSf/+Xfh1j1E4QOAsdd8ZqU2FKM544E
cJpIFrINMRmUGyZ0U9SyTsSWLnNrcDxJc9DcIVfPiUK85QVM/1Bff3pd3WlV
VSc3NZ2RfoDDV9709DbB7YFA9/Y66/7Lz0FEwUVBEUkOge4rbzqZoBbvSyZ0
vQEgilHDBov5LAycn+nH+KfzjmSkBbARSKhmIZDQ1BILOxg70B1shr2JFlpH
oK8rhFPSKICL5ptGYr6BXl1uOlXK7ULDs3KAr/qi5J+aRC+hNp8jyVzXzXKe
Dd5Of9X/3oWZ4096ertIRtxCjRoD71+cD4t3csu5qS7zFMTyYsYhPs/FicB7
cq7v+ct1Pb4MnyvYoAeWjK1dKbiGtU4GmVQX82aOy4HAjr4UeclkCk1deE0P
zvpLCkz7nfHKLSD5sMPnSJ6jmgTCJz6wOJ9UKUUFvKNkiLqfg+C620TLpHtg
3oHwk4GGIQ45s6Fpzo6X565ada5JpcKkJYwcWT927Iq/bt40LbPI5LZt2+gX
XxzTu3fv/Y+cfWRT5fPO02cfWdPmyJrWB55tt/maE3845bdeveVfDhzo9NZb
HYN/AuaD8IM9gnNY+QRCyn7wzz31HRo2d3zypq7VwyvB4gNI1t562hP3no3z
wMsPgQQ9huIHAe0M3zjncLuJAIs6gEd3nRkcFwX5P7WKAmHSBLewb3M7DZis
fn7Xstd/uGzXD+5Yuo7rZbLibygIJiFK2t0Q7EXNW3ARvko25BnOy1A32RNy
lBxUSVWwgnJwI8gp0BL2Tk7kdUtuETjPfeVfUyoi2ylGClYC1ufq2cnjpg7E
JMhAHbCXVmEhCdsKRk0C6qnkJYlDgvElemzuLv/CgaJQuSLp+0WD220e3+2V
ZgXINdf3HTVqVO3IS6uGdeRroE6CbTILS0Wd1rzlQpm11Y/ugkBuGSL1ibWC
QZQbJwREip+pOQlSjbjxXAmK44DVnDQ5SzmAbnJeufr2pcvnJsMcJP2U+rHg
YgUqjcEk6KTmLQ+OwLv4WXQm8XOSJrWHja9VaHsUikAswQ7SdRR/cD4CJGuy
pRjDhg3r06fPzJkzD17T5p1FrYk9lk/SIBeNHDlyyJAhImRxfVUV1lBSAzmi
DaTYZi5IVnQpU0jexPbLYpaeIbcvMlEK5pmKUJCdJMMqwRIfMqQqHygaI5HD
Kf8gHqk5snDx5Jq6GZiHSZOKyoNOTyKAuNisbEqEs4SuLpIy2Qwf6T8zOrDq
sMmQzGJHSt3CxhkvUmD6bAxWVi3JF1h05gblmXICRZzL/Zo76NLZ203tTeqH
Plxz46aXBz9YZTHOykL+1clgGaUmc9bu3RcdPtxx374ORRhHSJGMnrmRAiEy
3AeQZDgDPJj+AJLCQmEktIJvIb6Er0rtuXouzW0ht7D3ylaHxp7y5phTjow7
BXQPHj7uKDg3QfjCUVlvZIaPA84/aEuGcNRPdNYxG0v+5/6t793eW7ElaNH/
FwpzzNYSsRdw7q+WbqctpdpbHtQ4LQNhzlgkKmQbC1X45OSV2NiRZJjNEWO8
PuYCdCDhf7g9R1h0ZQLke79yZMJ9C6+/d0Ft7al5i19//YIA+Lxo6RPSj9XW
z8RYnj/gomeuuSzQPT3JbzVvea+JqOR1qJ70vxunV6xeooGkwIzVWC64MYXi
nhORJdLJCISaYqQ/TG4pEjYIEgjUXVRoGOHh5JQKiKVqldzSW7LYoJ2LfKEv
VXsiNDERsOQn5yQufEi6vijfnGvS56TDSdk4zqcb5+5UNC3FomJpZ/OHfq2K
VpjeD1YRYA9uV7YcFEcjyYRV5XM6b8ENRDvNFJIVQIvnT6e3qPXiwNd2/6Wm
y79Kdpj65ZCHqofPr/uz5s1V6ISzwqW3LBxOC5p0bxCNxCr1r3og/yKInrVs
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
rqk5pbq6VVNTpcvddluXrbdcKsbKosHtNt00KLidcjusq5tieQaSxS0CAkFx
bqE4KlBorlu8QZNDei1sajZtlopclCdm3nexezjA5i9EmsIqvP/yc1I2fqbJ
NveobLmoHFp2a7l9M/0S+DUFy0+TiKTPvpUIPq2qF/udtyzJLBOT3GwRclcJ
Zhy5aPpPqwZYkcIwTX5mx6hFjRko0/nD+SW0KNxOqQa5JTuM9snkwXXrHnzk
kWeu6bJjYo8lQzsgIbCO8uqlwcIDFJnZygU9wPTM1gWwN/NXhlRm8AzcQDK6
UXaMBXSDrR1zxTKPYP8cNqwm0N1SQtJwUmAQ47bAVgbt8xZM4hObN+QrhE/P
yLoMkgxba04nBydEEVtiRlVP3LzDLACPK/tvvHFJAHyZYmQ43revw5tvtkca
CXp/6qnOQsMEmWdk3LSpa46QUs/xqVOfDG7fv7/jkCFDbm1Yff+aJ8Qzzb8M
eiI65dbW39Fm9dxTLMFntA24grEFlMmwyCaJupyXiG2cGiE31TwU6SEutHmU
eKQLEit8DAuipi6IimDpPzciiA8fw+xAXLnloL78FfgUnEldHBUHl1vYUHMi
pHomR1fkqZdrJQc8nzSqwoGHsUUyrZ9x/KrHzlj1fPu7atsx0QtVbzJoPSjX
5SIqoA9HP6tyyK6iL/1D86a2+YDwRGYBVrd8GDGXaLOg+qRCipoKM7v1ptSD
BRETBzcVPJn7EmeT5Tn1w9eYKFAyv7uu/bKd6+ueXx9gmRaydkK/VeP7CJUV
UJpHsGDgxfP6X2g2kXqwkpLLpTB5vilhnrjIRynP89sXQOx73mxYunxuKgTw
ThWRWM+5+aaIiIMtGFYeotnBo0NaPz7sjMwykjnKNyCduzORxDLiSpw0ua4b
Sc55KN5QZJ6k5FWUqzCh51kkK/WpV+Ez4lFycDA3LI8vr6pYpcAzNSfT0tRh
6ieFzxwkt+M4LlmqnceriUMhmDXMPCG4veUn0N16isaTS/C00kdBvOkryLOL
HZyDLEUUyRjM+WiMGFG3ZE7Hxlkn1E0/PtfN4yZ/mkeZx5RbTramkxh64gDm
xeSjPXx47axZu4YMqWJKspgoqqx4fNmp+Ife0AOpUodM+VN9kmFn78qGvlj4
lto5nyNQPC8yS062VDh+qX5SR4qOKJhIGZt4eImXZ8lYgGNyYRnc+YBYmLAm
deBA5/SQuevly88KbsdjzzcQwhKY8RQFt3B6C4YJbl+8+HtJY8BlRc/4yBcM
8SbDK4GaXMWshy7ZMZob74upUNw/0mRawHnRtDmuhYH943M5Pt8+/vYTkWTK
9lmxZT7ool88Kt5ewPlxzbdmXanQbN6XJ48h1tLwDnID4S1TFnEYhWFF/4Xm
zVkln+KUWqKVZcsLlZeIdo1/sx/cfs99Y/Hx8kJl3v2jH7Vr1t/osOuhbluu
6z5/wEW68Y3Xdt14TZd0HYBrXlVkcpxwsor43ngjej8JoHcyMnl5STWmSFb6
0reMHt0YKKjf4wCL5pGr8LvBKmHKIOcLyef4A33OzTCaI4zh5BzzUwhpIjnE
G/OT+iV3S6ry6VL0Ntz/c7pFCoqXWD35a/bDZ82Zd3b6W+sLcqZ4w5nI6bzy
iRUogGhEgx5YMmXjS8Pn19HiQ3eBrlMwffh/PxogO50zVCMeR04PSLh1xar5
G9bvnNxr0/iuLOcIAMYyC77popOekyPvKkvhiJFUfEnzIbLmlL1jf3HP1b+Q
fWvKKUzSUA1KJZgR5C4svxYvUTdY+DzsqyIosfCklyYTUUKTWOel0mPEQYVi
hycvLBlDK0Jyvgn3JUHul3XLPEJYLsYohn1qzMbTNWvOX7myElOeCReDesOd
Zzx+z1loFU88UQmQGuTzyCMX5XPFFVcE0eWvESNGdO/eHe2ZTRI5mdh16vaR
21vnw6JO4OJfmjd+jtjmpLkFqSHAEnBF4Do1j6YSfJVhNJUJGrlfLHfc2vzL
JM7h0fwCi6Nz8ybsUfJ3btJgvCcBn9aUHy5l+OUUAM6lHWI4mCLxkoAnkeSD
EnOWdY1UvuicKTbGS75z+3NG/8nSG/7nmkG/zdsiD4LZltMHBjIxbYtBhQ6E
hp1qyUWtWeQqHBWhNW2V/3IqNjeVnBnzC2EjhbH6o9gp4Zp+Jz8y8FSVj1mN
NIJYgsCfiUyeb85179msLNzf1PnOmksIQjY92+m5B6597v7xwe0PLL304RUV
QcVA9+rhFR2egQMHCkvHhdaqSr4zQUvNp5yLh7SvG3UZYZYcR2vPp75xticr
PHEunQqhUdNwZdcya0N6SVHTTnBvqrftWvLcq6kHDqq5a4SclDanM5tr4fnX
XE/MUw3DQxEqK3ViPe6fm7ekQXS3HCOMEU8EBylYikNkWsrsb98CCg9Qsz+u
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
PFtxFZg7d67+wWSthjL4rjz7f4ye+U7Sx/KqBzn62Xc/u5yGPMlfROEZSWsx
Yxkqy0AVeJEcx2uBWEPo60SoBg6R4HhtYO2t5Se5vGkkmWHpjlP+/zGN/K9k
bH+phsyrXOOrmNyHTGQmmzgzmDC94KHWge4+QHS4nU8KqleO2e5worbXh+DG
9ALKTCpbaD9NYyVaGvjzLaJThYW2G410YmWt03nobWXikFeI9Ee9U688dNpy
7nU79xFSCr3z+rGKMLaPZQsd3X7dug/yXdYr8ieC4nV0LAAtbBQ6SXMKNgFa
kR0Ln1f+Vz45lm0cGoeZTT3as0ur81E9PosKoXvZhQjJGc5VB7hy1j9dMfMX
sRNb2NjphqE7Yku2nQlUxiK5pOvDsd9VrD62s7dzLTwkucCEqf9HMqm2h9yw
7MwvP3L4zaOC/upUqWKiRLbPoTcuD9jPv36pQKq6YriX6ghqNDd623lOhSsK
Iawa/WSZZMyxCCwChtHgRdsNBPXBeglBoRAzFQJ+zRqaPoiahANlaXzwoUUP
PrxIWBklE3FqgvJaoWtHMhEzh2IGAgn/u4rVwtBj7YCMgZODA0CXHqsWEmPa
BSMrpAOZ4waGsHlHmPmZI99724HvEafZie64YufbLt6OCQ7jN2w2e/bskENX
/flrP3zPNR8KpbfypRs+GvQNiow8+GQroHij5Jw5c2bMmNHOW7Z8bOvWT7D/
h+H7WVHuFOMtBvu6U/9w7al/ALkRYGffxqc15sI2whyoaPKAgN8VgjthXgBj
990Y3c+qpPERQtpYy/dd43dfyOjJ1sR0DOKSu4Qo2Ou4aTwMPWA9scQ3EHsE
zGLN4R50OtEBgx4OFn01J5jpdju7GUf1aU5E9Js3AYUGBxsG7hJIKbLke2wA
frSHHuZP3/yhPngUdmg+JZNUTyP/0TA5ktiXswklRuxzZz/00ENrPWrkIhr6
adZTCdWhYpceNnn9CbOrdnC9Tz/7Xr5gb7ydIdftoJkJalZbM+XOi+pDzGeQ
2dFi3BmdF7XMNBZfvXarxTgUOsS53C8ZOZE9oDim9bHI6yt2DrrLFYtx1Eoz
JgkIepaIog/eqB7pLrYye7R6YCjPd0azQk8FOSBuFLeSe6I9K7kDK0fuqtp2
6tSp1CA/u25rc94euf7i36nB295d4w4zYZRllVJW7XPegv/jM0f/n2cf+h/6
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
k3OBNOVhhy0/9NBlwk7nX780iC5qqS7X7KCTIibNvfrWQ25Ytmr2Lz117M89
c9zPtyKfEcuGpHv489QOMWfO+NLDp3/xIdSj9jeIG+C+9uDND3zj1jr5YPYx
x6xt4JBEm/SZNJTtOQgmiyxj9KYCjSeJKUoJs9vdraGw13dAZdH83W+Z9wm5
BXs8SI5jyHTIzbd+6uqr728eMVHeEPu9/bFPxZMyLuFgdFI0eLC2ihHVxPYR
LkqRvqMgWKACQaICsT7gz4rdvPmjfTpp+IfdFc53IfTfEGzMCFq5euXka1fv
3ag3jtv33PL1PdsSPtl6+U53X70LzkygvQ/CQ/WcOnVqgO3uI//3/g2ByDTU
X42eob4vXnrymmNnyDLTX1qbbgY0TnjnI+MLYPxfJ+SdBKcBziFVDQADFnZf
GqlR0yuZBAoaQBCIzZaIuoi/ymk3/Id3jaeICj51ao0Dpe86vhDoVqxplKgB
LA54SUCo+yJHwBC2IPhUtN3vjy8Efzx7ATkeEJffKRCQVLi79uyzezbtqpCu
Ws5WOB9dnIHdUwFZdb3Tpk0TItGJqnz3RWysNuRKMD9FX8EyEjgsjrVLM53p
me9Crt/y+Ws23YUN0s/RhVObhdUy3dbBYky6p2YPq/fp7HJm8ReIn8W0EZAi
xFgqtL5RvLyePepwsnRaoH5VctXefSQ64pN1EVL5CAMhPsmuXpl0IHvC63ZI
xHDcVDe6rBxYZKNaAeNrfKZdGkFdNR8c3N5RVUwO08njS20uxlZQsDj0d4xL
tjaHheoJ9VRUd+SYZesufPjbn3n42+F2ejgdyDfU9fZ4N9udMWMGWzptKPNu
vZBcZmjwS5ad1ad1F06GhawBkmE/dWIDIbB/2Zbrq9G6zPfBY9MowRTYYiLl
h3wErO61pNRIBGqMX87SyMIjLP5UuCuPLf8mG4WpR+cVx2rYFQ1K2abyxTt0
iAyGrO6I+hSlxmJ+L99py6U7mMtwd3a6mr0OAXOMEwFVhlDVypU7PvPM7m2R
ZEouv+pWNY6b8a9PmDXmj5CrEbGzulGNFldVTdBp2BLB7AHmTVx/JewHtL8s
IGdjn/QCep/0AhVhojjkW8ubsLwu2DzRyfJa9nwtOP+NsWVeNk3Sa5mDvJJ/
YaLJnZLSkBEYYn/m2VXPfHvV/Q/cNLC4W7w+Eqoit8DwxCFhdXBdoGVbpFua
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
MOl/OTj5Nzjc6N2VjOrW7pkeqVKmsE3D/mDD0N/DDE8hGAv5zfGFCCEUToCh
JV1LAzjqJfOmbDK5ZY5HHAxBZHgXJn3MTDF6VvMtstNJYwMSVSvZ6ossCTEN
WnOccogTErn+10p+cys+Fsrz57hxTRMntuS/xNkkPcQbRyKSfyqz/KWXXhrc
HthTmNXsBRgpB8gllJudvbjL3OUX87wFtx/adN777/fI58c/7iO/TPb36NFj
2/0d39/c+Z8e7/jk2L8cMGAApRSiNBBsLuFOg5RGjhw5cODA+rF9miZcGVTA
Vc4DTMgF7A/mwaZOOeQfg+EFJ6YZxQYG60qFqWHBhjy+7MGKByq4yrUk/Z9i
y3DLM7XGrVhbQPu0pi2jRo3KjWAI5BQBlWwfrQTu4jm4BD5J2o1fOpfLo89h
PXv25LcXekD+0V3kHgXkBgfSkFdPpwt5YNbpeJQqS454FofYVVSibGQMWRxU
d/AxPIvUPw8uaPbGG7fec8+BW299Agsl31u3XopAFaMMoxsPwYIO3n7qiZiR
mgh6TcWkHMVA5uHHMirZivmrczB8u2z45StH9siTQv5nH2HugejsIDylVCzX
LcGwBHyQW/KbGJSgbNIxaSUWioyouWLuN49Pp7IKwwttTcRzTIGc2MTVPSb9
RHwu2VV0mhQVG7Nv3741NTXSHOS3fv7d41sOkGjYMh8pwpJviBpPhjWxCfR/
UpPszH+tmPBUaBMeEkKXKQeBirsbKwZKN45ZeihLNqk2F72RM/OacQkLNIUY
JNkRwnUl88oQx+y1WLPl2j8Kbs9n/8Rfrx/wm1RxBI9zlfNvoMpYMbFglGO4
uQQcZfST/k/GE1NPZhwrAqm5SmaSogBPWctyFVeYETtbeqAEVfK6Bt5v2nRR
c/N5we3vvNOTv/3DD3sGya9f3yU1vH3RqsY976x4fi8KaC5NViJVvXZBXT7c
WWXdv81x0E7aOjXnDq2WhYR2Cv45NUPmhK0aUp4i+9IJML4w5CcP+KOmCm7P
Z+ENf/lprvhvbfuXJMmcsH0+ujuonBPnXXHujyb2ynf1f6shOsx8AkTnIa82
LU/e4PZHHpv8kXl+Xb3N8Z6cwjnDqa9nlCaivmpV27feunjZsu9/5XiyVOKo
xcy0bATD0xivVlJNUXggqbb4VlfJj8fmX99Kbn9xYWooExNJWMA4B2RwyO+g
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
630dGua34vYPNnZ8p6mVXZC2CpoK/hF5Kt189iAMZ2fv3r1ziUGDBgUGBJ8g
iqRMqnp4LwwfUhI5Jt+83Dkxl6AMmT6ccyl4ZGfwD95+NnT63Bfwn1sr3PgU
IjUkDo8gXP2BPZKOlMIDFWaP+5tZY/8z8ZkUlWIDGFhSOQuUSvMGrw774Qpl
6lFFSV6Yg/4QgISxkx+umwrH4khVU3/sIK+GMEmZUgVECDDkwEdfx+aiqm1x
oW5UzxUjuktt4HIY4HkEcxs23r92S6ykPIVevXrlR56FNkwdGAJprvxOTdZO
7L9uSm2elNADcRZ6Wh6EhFlFtYNkItyLcmZNzQqaGF7PDn8p1cvzSgfICNZ4
VyvMY0Qjw+e/OWZCXcv4lc1sH4tfwiSFHqT/4BflyDQdoaE0pnUKQQc6KpMt
p2cQw7vAgRFswgq2CCgJlKEp/ZZciXUWyzTpdfesXjdz5Vq9KPvTqjjezTXf
CVbHOiuiRnB7mmvG6P/UdM9/Xjfvv2xf2mlty72Na2fnWzqDPIJWcadBZ+b0
7GEvSBFFljMD47GHaz68vt37k1uFKFl83MsB7QfHnsM/kHrmSQk3ILqe/dII
Brd/+Avc3u7A2LNlKmmp/W7206uxrrTuqu9l59ePJ4+jeINmb9EkBnX6DJVR
4cYErOi3yDaYB+Tl1bA6T44xtRFnyHfJoMEVrw/rsXgv1lm0M/GcXC5vd651
XmWrra2Nyc8QzvF5NNvu7/jkIxfkz9w4X1NmK5IUEEURtajGzJA879/HkRCq
0yFxP7apIENoJz8y4X6id/fjkiWdbCacWsX99PZptl9ykkzZiu/6E/tPYcvY
iuv7i1zX72rZ9jYVT3ugez6P/nCKhaqioZQtf8o71qYSLZueT3Sd3DqwnQNw
Y1BoGB0CveH2/JB1SKomOk68ytmZusHqpCAdJrERkUOOeix36uJAdUrIKLR0
WNfXbhnwzJQ+KYHHm2pixpAcFsyDb4AYn/9i4RKK+ZPKhmGCR42OAk9yAuRC
DivUEc5hou5ogXJFwe3+zLUIwlBLyzeTJPfOwc7KQPiBVIUF5U7zI4WA+mJL
OcklYMIJz+/6+vZw+4YNFzY2dmSzoLJzy2Py8PNToScawyXO2YKlk+F3/6pW
3G585oc3LBdeehrnrf1r8uECzX/5tC0HW84OaA+AZxPlMBFqI0euCmifPv1N
2mWpQ0l4RCGNw5kycFqD7cNYoNiZuYBOBYyh5gKd0OxpI3Owo0ZMmrQun6Iz
bBUGVMYFUoiSwQz+RklM4LHx49cGsQe9B6UHwOPATJzYEiSfz8yZ+2Id5Jjs
EZmY+uR3PpmnHJzS7lly4axFF1Dky9XxslbU3fHiK0vynU9940zkcESmcSvW
BgsFV8jCaZbkGVZbZgUV6xR4+HB3fYB4C6UX3kshq2nwjfe2zXT5+IOddzx8
fibNn2/s/OHmTv/0TJfMqgGBwlGDRoLQgnACVmWEz+wPt2fmJY5Nym/lyB77
FneJISAsMZBMatHUJwgqUDP7ZTKCeNEtQEoyg+A9qZZUAK6GhNF73GxaI8dj
ZYDZqScbgdoGlW8kn5lj/u+7Rv5HWkBpdlfhHt8ytO2mwb/IZksG33pNegU+
EltAdlGeYa7FlBzsoZ2nTt206K5NO0Z28ggsURGW16/QupBtMAqKjDYeTpG4
uaCyIRrl3NyC3Dr5bwChHLWPbtzx2KYnqVzmQaStBALz/6dZgiTz3zVjrgh0
T7NbJLJsIf9pHhZbANPYMg2CRGqekYT5IwbTCkIJjiD/mC22T01NTQ6zfFko
/dZKgvd0V/x2ma0YXOjWVoJyfJoxP56/ccDzNw2gbYKv7r/Mz3xzI+RFsLJD
xUXiAOGWeWclWhUaqU/K9MSkMp7E9gl0B87pRjJmPQ7Whz6ZQjJY5UfKnH7d
/1V/9/+eT8vDbXe/sWLz1ofyIuRJ0bRpTf9aEQLFVuLWyH8D1IP8A9o/uK0L
3J5jxDJL2SD3nFdy49VnBYenQANy6rNrUs3zk2tzy8cmtYL2f5pybq4i1iYQ
vWJTtM0paRCoOIflIwqDuik5VlqauWiMuLTDGZW8zIZE05a+56HntzwF/PBo
hFZLOZeoU6a1SQfQguA2MfflLL09Nfe+izTJd3qmIP1cIu/LEyM6WoRK+Sw1
IlcS9pV0hEXC7gTBxrLun98W3z/O0V2gSwHeQHjx3nMtfuS51errH3nAyQjz
NMX9C26/EiQZW1n3+UR195NjHwpp/PNdt/r3CaaiRR/0lUJuzw8wuzQvgxc4
J+QOyfPGw/nsZW9Q4caD4lzTwaII2EJZC6lGJqZfr2yEXPKSko2lDFmdIUKC
IbyXzH2B7o9d1SWHlSylIiVFMGEIZ4jIf1OmyMQMaMIwIbrslwUjA47wMUos
qTZCSw5G9sbow/SQuTUlYLk7PnssyWUCClCX3CdjYGGwUHsG8snmKMcKgp2p
PBpSvhkdJN8tYub2U1SOsWba3Hze5s0XA/Z/UNlkREojMGTomZNb5FHh7VGx
/Fi/vktTUyfsILQioz1PONy+ctWdBw435LNg0Q1819+pbARb6lbfRXMbQ2bG
gvM2vtar8bke1gJylQzUf1bZgldffGUxBmauMmLhKswQgbF013PdwrHHcKYP
jxxunRfVJDvzsKQXQUJAHMqRILRAqrKOX/SQxSRmQ6phFzDiWBP/qbLllOB/
4vBgMEMmlw6Sz/65c98LsCfyljIfWXr0gYd/ihqU/6Y7zXt4Sz78bAL3cuRL
ry5NS76ye1lD06x8gnCKdj2zgmRHjhe0KzgaxXTDPefkkzladNihQ92C29eu
7cw/GURBxRF1BFhlMmya0y6gfdCgQTsXXvLBzi4fftjzueeuzCRL3C8QPaAx
SH7rfR0C74OC8nv06NGBLsOHD0+xmYW1VXD7W4su2Dz3XCLVfL+8dsJISyRv
WjXAL8ekfXBXsonhJXUILpbYyRLemKYmW0GkncQ9iKsBxQKD5UjOFHXkBkp/
y36hmtnTUvvdYCF+WnwkCZjyguBH2SnnEXZWHn0uSqcFtaOSKeC9xXdvlmuV
VSWsW/QlIyLPpejbi4eFnfC6WS4sRAdg+KM5pTL5AajD7Wmorl275mACL7kj
qyG5L7xoJHZ7UrIlKvrwKceJ7jd1lgcZUQfHLMdvvOb31w78bT729GrpaHML
MNhT4/5qx5i/kD1WySmHs53Uj/gCcSIav1iLlofgNxV+dmq/126pWTTkEh54
Bovo1JyS6snmSWQSiwYJR1dPha2yCSIo2qHZo82FVMyqa569qgU4TAkprb7v
N5prviNUgfFC94YxlXGGNmkuEevvvin/b5p9x1ML8mLK4kRdyrpJTk/J/fr1
y78sk31Q8ZAHsf/j/f0/mNo+uD2djSFmbZc8TqoR4/HY5LaHxrWV2ik7g/Df
m9LlhSlXpbQjE9u3nn7z+QG6lIW2DTu3wpxpDV9NH94w6EzE+Hya+n+Lb4HK
PUJUKuMVSIMTVxTnIgGBWGMmGDqouCFJe+9aWn/7olUGzzwFs4aUgvmdWSw/
EAXF/sh/TcG4BIkgJab3CrpJz3xsw7r5mzZYzLJ8hsKUMY14guzwmc540cGP
4vQGewCJ7EyVyEJ+HGTCKMYlgFuqVbUR3atL+PTJkk7GXacp7l9w+1UhyZzA
bD81y73NP2fL2ERnfA5iVfWFTuaG2ekNEvRBm12oaTndGwGo53jAO7BWNmFv
BAJMqXz2X//gwpseW5adecfzqgZvr1x5dl3dOdQgWSJ0VlHf8wqnZHmWM6Ia
NCQPlSlV0h/+7fwAy7MfrQUtMFiR9gtNQgq0nAaCdIiQr1nTmni0cG8otglm
FLwp1DQXKomKBBmlTGqKuRxlxdTHcIe+nj9LpqQU7nh536q13FHW8xtPhlBk
Tsmgiu6eO2JBOIv6IiEaNoucdyK2BB8RPLdAQEQC2ge2tRXFSy7ir1fyJaUp
Sr4kjiAzOwyf05csu4W/PbidWGI2yfjGjWt6Zue2J3/UnBkk1Qtafmzp9i17
ege3q1IardCNXnp1yb79rQFfgg5u+/Frs/cczXcujUFU9JnF64EiHP4cPhCy
FWrUTVLSHJiFADNmTMPYsY3FETR16qZUTOwDX30qA9ByuvJoFVl1ZF06gbyp
OYYKSsokj5ZLzJy5b9q0zSnH7SzftSfQHW6fPfvtHHz/o9vue2Qb8WRc2Vzl
5d1LGUH7DqxZtebu6ujOIqwNmQvdyp+Cv/Lj0Jr2B9f8QqMmjdPScn6sNoGK
1hQkrEyVKIRwopLXSzWGDh06cuTIH/+4z9GjvX/yxMXvNp13pKHTEw+1pknq
2bNn0Pv2Bzo99Wgq2+WayjZ27Ni+ffsG7QcxQiDQe8mVg/PMf07uBqP4W5UU
mekhgegozakDuA7i4hKkhcnjMBKhaH5g4DDf2SOqQrSjKFEuazEUAQxcuBCj
QEsIIaezhnBF1Bx4w5oj6EfqBNrxjHJu6paKkQRP/4khlu/slxATK56WTk7n
rkfc5YRXMWgqVVpyzWXP3dB/xYjubkqssX4LZJJMr6mpSbNfeeWVsZg0uFtG
C8mNI4STcwnCzO8YWWJ4xfXkt0BpBCph2tbF+N4JyHtT1g3+nXxyrpRV20f9
afOgf5/9h6Z87f0bf+3I9b+5fsjv5ngP1KOR+0keovwQc5p71IyS72h8uF3C
WUz+NELdqJ5U5dMBULkIvIvpIG1qjYZRoDFzX1ToDVkc5mIQrPswFfM9c+Xa
4HYyobg3jVeeEcRLmdAD8kYzDLOlAdPgQeMjRowYM2YMf7VlHWtGLEdOG5XP
/bro4QntkFsKyyUAG1rm8HcLuc0g9g8qIJznOdUI/N54des6VO4irZpRsXnd
HINS6pD9KerguFZV+f0zeh676bxjFRWagtut43Tr1i31Tz118rT5kCFD0lVQ
3DFhKDoSAs1zJ4xs5RSoTovNWNGEtcLHldknE1YOI7kA4ZsgSoAzb5IFEe2Z
O71t45N3PrfnjmffGLdi7d3Pv5mPdVs1kVvWZI0lK2iuTSWfUQHYBW9Y9G9T
kbZI3U6Nc4D8ggY5JIsJwGuKk/NZc5ueDJlOU9y/4ParQpLRT6qXBj5ODbJs
IHH1HiyXz5Q+oHo9Ai/r5HMhZyVzswsDKX272mIt5BbZP/HYswfyz2uYE2HU
lDP1oUU3PLJE2Gn25DUMbg9KlNiIImuKdXUBmzgkKQ2BnHedB0BUfiArd3TJ
2ZdhpLBTMphQhszAUjzkGfYzwtAZlvwiv+F2AY/Y5rAQDIaTg8+DoALzI4Fk
BMuFUo3A4MVLb37hpUUBtPRbwGyhqayVnIixn9KobKHTlCzS2Dj55gnJ6SkK
sSfl53dulnMj1ZbmSYQRVXmqvPC87Bg4olK4EmCh+ivkPz8g/wz7+RdHPVXk
VF5D8V2T+SU+RqvHEmrakIp1sCu9xAkTmi15B9vc98jWpl09X3ur1RV84EBX
c0SabvnK21fU3UG0XN7VUYvXjFy0WsYNWb95s1MOdigoIoI1VSLibfU8V+dk
5nDDLs6R7A6MF5603KaYU3ITvPd03clp5h5TGR5Xy8rZ0IFSwujR9aNGrRYg
Jko0c+v1128cP36tSDEBsPgGFgg46HL87MVd5i6/mM8QCT/tHyNI4Fu+V9dP
Rwzm9yvxpLJDIkin5ODzjRtbM9dsvLftullnCcHLvw4duvzQoW75EYCEfYpr
GhggdBEcDUAKEgjMC/wOLOzVq9e1117bKgVZCVDt3bt3YPDll18e9HLRRRcF
CeSA6667Lgh/woQJ/fv3D6iTpdTszFDiipTcpwhoi9Ckk5Mr9unTJ3VAlsaD
VUPgVsgAXzQKB3V0UNCSCt05XSI4BBc3BUJriPRFPCclIIGjRmD7IxoBDzy3
ojM86PQuQFFSAMtA0sGkNOloWRbEecDsb1SyJkFx6ApFSkWqAgmdUR0+vL7d
3ttqX7u15rkbrgxqTQlpz2BOPt4UlRvJfXlAMZFiQKU9g9s90zw73ssC72Ha
tAP6/Y6RnR6/tgNzD4GNjSYmVOhoqqoDW1hkJQlazMPKo08d8qQ2DfuDwPgc
dnDybwS3v3/D1w5O+kPZY9MOeQFn1TXnY4mqaCGyZ9lxJWY2lY+VUVTuU39v
Ikd3u8qGxIK0b3VJJwHCJT4jXZL7Ii/DgrZGk2pDvOqGT5UnwnBgTxVdLNPB
tyrpACzTpAJpogEDBgwePDgNnloJo86JhtCceMUVV1g9SZlF1SrnslDyvfWa
dgA5r3u+tw9vL01w6l/iIDLIrOnzD8cmtfrbaWCKLhd4i8zp9c9DpDbplXHp
xrWzD87sHRvh/cntDo9vx8WdisXWSOWxuXSM/MjrjLvODsVIzAiWcSxzkKh/
uaq1sEBX60eZgzLfCezKzGURNn/Kgmeh1sxi/TcNIuTca5vt5nWP0266Z8+7
c18/eH3DptyXMcEiRa6CYWsqzNSGPFychPAJygHXZf6VqTBnnRrqSBZTTmcI
FNwOfYEZn9XTezLI/EpVAvrT22fdflVIMqeQkTkFq6rNR9GoPmukarVRGVj+
kZ0tdWBfc5vTe1my87WGN96Z8sCCpUu/99ZbF+fbpfMWo5zBtPgz0LtUa3nf
SzR3fqTMHJx/8ahLvYRHR4o8e/K9bNn3V6w4S0gmkC93EjAviyg4KsgUDEZg
zmCycPGNj82//vkXFwZCZ4jGDM9QY5KytJfhLqNQRgDDVIoiFAkMC1DNVCL1
M4H3HImUnj3IfgEANOFp2mSCXrTkprfeXv3W/tXzF05L5XMLtHFS+fz+WUur
AHLDnd9mgxB75Ga3sgA2Oz4XlTIpe1DZSaNjAWWsw6bgUUcJIPmrreTLSCvh
3qSQIqKSaudgcb4cJmvXdg6oPnjw8vzg33YisReaG5liJJ+C2HOJNCPtRHGX
glInTVo3blxTgOX77/fIZ/v2rg+t6faPP+vxwQc9Un6G9DTR0uW3SlRKE1LU
Xm4EkaDoA0uZjQcugItWJE6yRf8SiMrHzunH0AAjSbXQ589VAhWCsTNt5b+0
F3hlwXiTkYS8EAJqjUk/TXH33XvvumuP6hUd0eD2G2/cGnAl8Z+4WqCI2Brv
vYAyFBcwldfrxZcXv7V3xcs77t/9+orHX24cu7yJzYjTLvy5pMQ1aeYSkida
HUChX7fuAnknhSJmBsdxoj8DVkFBaORBKQMHDgxcGTt2bGBPwPnEiROfeeaK
p5/uHXwelBLcGLA9YsSIoUOH5vewYcPoYwOBKV8anTQpL3oAZyoWRB0Iga0R
06w13nZUzxdurmmeNEDYKTiEW2WBI+fymlrrR7jKfnltoLgzKhu9xFw6NoWL
ojmB9BAgEjKWddAOrjUfu9Q8xHlSGozBP8y1nv/KRkTwU2MCmYwvTkJ0DsqK
kLM4aDWB3rnWiY4213wHafnD688Nbt91Q39xfClE7F4aNmWS5UcFj3G05pX9
9bsPpDGDIbMH1Tx3lIebWllmIp4px1BqEtCOXIG7zlLLv/LIsL5XjuyxeOil
bla3NCSydIQzp3k520m//kIjZfIfHZ78xylKWNC9a9Y37T268oU3rbBkZ6fK
hmdeJJUwzwPd8xZIA5Ef+PD8/5ReVozong9Ofv4rOMXIIPDZXaQaTFG2sL6h
YwhnzimiVDCvyLR6O3JTFgiEV3Dm44TzAMQEXj/7bEEcaa7UM6bWlqFti9JO
7kuqXI4C1JqA/DwI8j7S+eXGg6jzrN+Z2D6FC+ThIsjNukqrrGL/b7XUtsaT
CqHVPpS+eI1SZ0k0CqeLFS9Bg7wGz0646MfjLkwPqa2tzZ/pS/IrlTD5adM2
Z0CeMmXDjBlvzZlzNMPXiBF1FgHvvffdzHQGc6OfhWNKApawS25uE6sZmfCa
XOFUfxE4851WMgh4izOGtOZK2HP0nr3vBbenG4h+Ih6VKYYznwCdbCZ4uYVC
XEAOMT1oJ7PtqXEyAnBBWcgJbY4z5L9SlXcJCPk02OkjQVTZczo09XNvvyok
mVMvypyC7o70dfL+auLWJ17aD+/CR16I/lJAuDfo4UcnrXnu2db82m//dPHO
3UHUcHub4wgfyyWdn3J70YT0rokf8RoSorm/b4eH+ncuZzEQcpgI8Vw3OHz5
8jPr6s7hpgbU0VTA4Fw0I0nRYM8IIxCVvHlGj8VLb9714sL9hxoCoQWqNzR0
aGk5H58ZyMxYyknOyZz9lFj+srKlTIRV+cf55LOf7RBcFyBhcTljnSBK5Jb8
GcSe6waMqZi8Sxzpwe0fbuy4f1U73nsLFmkBV8zdid+XzYrki9VJca+5UGqY
1hCmmoqJYYR4GTKSGSH2w59uqqBfq/848EQR02iBfMeOtUY1ppVk9ECM58em
Kmxh2sy75JrLdl7fd/6gH5ApwGBJk4rHnDv3vd27pwWo5xMQ+ODqy/fs77Fl
yyXQbLDc6vrp1jKAYYxWHB7GCM6DCFPe8ubm8/K45VhBjwGTqBZz4JAWQS3O
LA/SZ+OnggbzZ8yKVNL6ON+42E9UdrGoWEYox+ijgFAMk5yecoqGJL2X/BD6
B0sgThCx4fqGSTiZKWAItct37JcXts19cfu8l3cvfWN/0xOvNFkvYJGlTfIn
mU2poFgfXNCpnnUE8vi8dhZHsDVwh3KD+Y1uFIQTVJPp9Zn5Fx1paGXCBJnv
2NH9ySd7vPTSVe++22vnzr6UwEeOHDlkyJBBlS2oPvCgS2ULSsmeQM0ANjoe
VAdzaaKFMtTnsKbme5rXzWkc3686mydfMX817kehWGQ/Nn7aNvXMtcQaw/aE
Ijnnc3qujjvkW4yhpkCD4f3DSc6z4KzO1XPFdHtyi9lJpXPeiktU4BuVrKl6
FJ+/E+l1pAEFfopP5M7lGrXEo9Naz1L5/WPOCmg/OO6cfRPPe+2WAc9O64cB
BUbGzBG5SSoH5z9bLKlVL+8Lbg/4CZKMkZV/WfRhHtIMwb7IddOSco/GSlp1
XS/7RZgGHnNxLx3Wdc9tta/dUiO4Q3dSE6L6AkXz+ILb1w3+HSZ8KpnOoOUx
RnJfs1e1PPj6O7Of2+NhceyLIc3p6RX5c8u1f/T4dX9Gn8SKnvcX05syvLtY
OPjiDCZ5v1KT9D3Ua6MfFgqp8L59+5ItOqOSetUjFq9NRF2YQJ5j6kBfVOqu
oGtKmx6NNbtUFarHVNkyr/2Ge85JQ/Xq1SsYOI84oH378PaMKWQbBHL9wYn5
LwtOXAwzef3A778zqf2mwWd7W5l+/hvcno/1DstARub6Ab/ZWPtbvCimJ6sD
sqN6RzwdQdypRmr41HXnPTO2S15MQkPerBxP0SiNk8EqoF1MPTmv6s/w4Ssy
NdAQEJ4vCMuPzCOEkS1PEEPg/8l8mo9s4BmaUkmTi2GwBKRkNEjNZ712JND9
xuZtBK/I7I9YuGrgAwt59ooSRQncq/bBcpJL3Y5ze2onOY+9EvL9Px3feMXp
yVSXT23yE7FT2T4SvJ0OTf3c268ESeYTNdvbnJLufjJbxsZ5/onQvZz7cSSZ
EoKqtBRbwe074fbmfT954Y3hP/tZt3y43FOfoM28v/INIYxRa7dKZf1LpCqK
Gtyeg0lH2vBkoH2npKi80XQRiZCL0+RqDhZdtaotKJ6ry9NK6Jtn9Re4ff/q
F15etGTZLdICSmxKhDBjqRysmOSZwrK/qL7nKiglQKP/ooKTeaFBYZVQVFdO
yZiWaz3/4kLX5TlP9VI3DvOU3zzj+013fxerELDPtzynaRN1oJaQeyRcmSMd
kJETe58qJtaKEK2MnOg9bBPVK9GyBl5hoTnS0gD+j3WE7Gxq6pRPOYvkZvXi
aZrdQkP+XDTkkiCQnVP7SiYl53W+Uw5nTr7Xr++yfXvXTCINz3ZHcS9pUjMH
CaQyj/Mkk6MUCpp/FbECDyLTRB6i5WmuQlM2zrZJKps5HeIqgiSZ78zmbJD8
yRXPzZ7J7oYbtsycua+i6Pim6Zg7DvwrkvIlsXhOx7FnOJh5s9EeoSJS2CCo
v9+oZH5Ey8ldmNCdnj7z0qtLXnplScyZlavuzIdRIwpAVvrSDvoeWwC9p0A4
gpDcjNZfaAEhIQRgZN5EloCa3l/f6YONHXc8fH4m/Wef7Rfons/zzw+oqal5
8pELnlt82Z6NQ3+66ZIXl3e/+uqrBw8eHCQZTMWTL7lPoBEaBokM2Zqol4hR
DZaAzfLfHImIjtmSZie1nT8lixE0h6jcu3dvnnzWB+lL+VLRpIWgCisWaEk2
J9/42wWoC1qEnTgt5bWUz5G1dX/dZcHtrImcy+2f2kKk3MKCUuUA5Tks+ZXE
nHo1kL7yOw+OwUj3IwdwDpP6yY1bIyCaV3TLCacH89zXtDkfdlNgJCHKbARJ
UjLacxocNa5IDC2/ttuaMVdQm7EUAgznosuGX/7arTW7buifPaKbsbDSvXH7
Rf7mWrl3YoOtsoQj/njz8D+UbixNRKg8LTN+ZfOk1ev79OlD1kZ2JIEMtP2P
3fBr+UhZ5RJ89cKKLWPlSOQNrGl4T+wqPl6+Y0GkAv3794/xkv+mA+DGINWk
uYLhUw1Co/lTllgvINtZIECukvLThikkfZglni5UNOGZ4enYHlOuQnweZ0Yk
bB5cTifGwoLTByRipiEcxI7E4tFk5uIiIP0k3IO1BSRnEFg/5HfX9P+abKf0
JDn2CS2mnOyhs4oQ1bNnT8mIDX25+hMjOua6NJFST2EI+TOvrdy7J+P2OXOO
3nXXG9Onvxl4T1QhVeVOzzjzta99LXUzfaSGmXeyJzeYYuvr269Zcy79sdTZ
WnZ+axOqDrlumi71h9tvatmedhuzrPH6hk2p4S1Pv5oPnWSZ1ouv74TElJzk
xOtQcD9OCqZgmCIameMRAIqYZKE0VPswM01/eqrGR+L206Gpn2/7VSHJfMoI
iFPQ3T/OsmOrniI+orqJTibJ8IcDz96dEpGdPtn4xjvB7Y173nlpz4if/7xH
PitXns1GxlrJMTIuqQP6ukJSILZMDr6vT/vgdiN2UGj2Y7UFvj7Qr2P+RTQy
hX/4YetVCE/xP2fjmZeMKYMM0ZK8+9bOAGmyJz9cMPXNt1cfONwK3Zcuv1Ua
yoxIzc3n7d9/2caNP+Bdl9JUpGpKw0jJFINfTcakCBXiKoDiQJFcRagjVhUX
L735xZcXuy7aj6Ep/021317Z9sCqc6FlSFXm5VQjf+YARBS3nNEpP+YP+sFj
V3XJb8GwgL1mIXjOLS+4UuRpfuCfSClFPbKkr5IjJhsbh5YOLXdgQwZSTn7I
mSFAzTKXAHqXDuu6eOilpX1ovGQGhNsDgzP3ZYbNznuX/iC4feNrvaB0riRR
gTjAEjMhkWKw0+3PHqcg4QuwzX7Ud6IEtFYyeWFcp1+h4AJpvGoO4B4XhixI
Qcusn332fff9wtZItU3fsCgXK526ksALZciaRdozO/lLrTWb0FEguAEF5aUc
8RS8oGlGAuP5DlB/efdSWdcpbFOqkThV6HTq764BeN5RmTpxEkB30s0QrMIh
Q1iaP5Z8d34faej0/vqOz8y/KNN6YI+40Xe3dTm6/QdH157/Txs6/eOmS362
+dJdS7qOHj26Z2Uj/UHjPdAdpYELNIAkiCKTdQ7LN285DnNJ5ASKSO1qbQJo
z30R4laHGA50aUBE9F1oJFfZdWP/126pCQRFCYCfye+X545WwUWsP5SIA6qS
oBf/NgIGC0gJ0jiSN7FiAuEL8CTKDbTrgcjwJN91El53ns+m/t9aO+DbHhBO
l9xGzEDkeamjcumUHIyd77kNG/PZOf4HPxp9PueqgILcXU6X/gmLOFcBF/GI
QNOUkAPQiTtWNsl3xq1YG+AEEDI8sX2YKuA3sRHUoPTzJ0b/+baRf6JbCif8
b5UsydmTnsDTm03dsLDYla2s+Bt/LUW5U9QgDAoPN/XJiSkHASwbtEz7KK+8
cI8YDttH/SnOf55U8LkbP3y4e6aJY8d6yIKE9iY6tURkY8rlh3wByEUkcXJr
SIC5RMZbpJT03vRSIQDc12mN7ExnpjQu/5QUBnkuqb+1rZSTY3DADo1vG9z+
+LUdmHJ4hmnzbcNalWHQh3Raa44o3xYudb/ifJAnC90rTU3cNfUZNmxY+glx
p1SjVfdmZKdnxnYRe0KXUuLjvKf5nQJh9VU//mk+FcS+B+tv1KjVZApoO2do
4rrJU8ssQNyMAUV7wbKFSCXcGKE6WIX5l0XP2BTpCa35L+o33rVr7/QX3rrz
uT35MfO1I7ftfH3oo8uGz1+Z2YebHWA4GbQDQkUlI7+pYXwcyCksAmyBEjTX
5jhQz7VOwO1tjivdfVyZJ+Ook4HZ6dDUz7f9SpBkPo3qY/X2kXT3j2PLtDnu
Rf+4/lOa6GTdeHBdh5TYtM3xHk61BpwuoLqu7pygTS+arKAF8xd+O2K8q5B8
zLv56s39995Wu/vm/ouGXJKXXVJROi0P9e8c6M5qgNs/+KBHRoPY9atXt8sB
+ZHrZoAlIxmIK1YxI4wkaLgEGX8s6gW6HzjUqtRBHHvZitsC2g8c6Brcnh8U
y1PzlGyxLwNOTueLzkQmPxH4VBLA5UgqlDm3ZPBJITlF9k9StC+8vOjFVxYT
k0GDsch4bF2HfIQCYUGQzRGUmpLpwwerPzzgPMsK+f3DgRe6WTk9qdbTlsmI
Kpsq2yEHZCeED/URiskVCVEWBzsxgVSMkx99ETC2ygCUSqjELrCmmctJCp/5
xazHWy4FKk81Lg3nm9lz3opLZi26AKz1bUqVGD0/8EYot3D1pGLCCnLL1jvk
AUkliXPmlExt8MOIhatu3/n6dUvqTX+ZWFOOQE7YLBNcpsuSdha44ulqmXkm
3D5t2ubMifi6yA8pbdy4psmT15NzR2jn0RLkhTZDNUUHgKUZTdyVaYcAgEmT
1o0d2yiDktlfthoo2oK4e+Etx9sB/FhGDAeAkKc95ZAEpEIDaIGXCNv8w7Kx
8DxL1A4+pVmeeOi8I42dtj/QiXNs+/au//RMF58Pt3XO96xZs6ZPnx7cLk1q
bW1t0EJ+UxcPZtBKIhmzB48aeUY+FyCNGzbAI7fALKIuLiMM4yhVTUMFgQho
RaTBKGAKiXOspFer3Tm1H7tM4iRLMCV2QGsUljWWC7AkHVJ+Sy+LqJ9j8jgE
A8oMm54cBIg6jpXENsnvND6B9Aw1BFvE3lpVSee0PsJ2KOxl1l/JqUrFJR2S
/9kgkzrkSfXt23da05a7n38zGPu16QP3zho8p35DPvTGecilQ+JhpmskuBLs
xwmXnTan5I5yxTy+POXJazYEt8t9AyVSK3IL7hTXK52Zs7pXr16MJhaQ9QtU
nzzTvFmjRo3CGycdk5KZP49f92cB/Hgp+fYELcwtv7Zb/dg+mC2pLT8D6Uj0
FWwfObb0KOZMv379NGzqcPDg5XB77s6rxIxNW8XkIeafe9T3siGS4QgV9C64
Ms8i41tuViCwCHeu78DggO3tw1tFTeXnErjdu3fvHJkqYYgpnMzLz6d2eH36
QGSh6sWmrde02zT4bAo/VgBz7nePb+I7sKe8QSxiQ8T/z959AGt1pemhZqar
rm/NVNu37PadmmSP7bF7ejwz906wfa89ntA9HRSQiAIhJCRyzkogQCCQQBEk
JEQQCFBAiRxPAg5wiBJq5SyBhIRABKXpRhKq+/7nadb95xBaPTPdlsva9dep
/+x/77XXWnvvtd7vW+/3fqB7umLYsGG57yCxNyi/WmYSiXxkYkVG/vB1rY2Z
1rzIal1/feOSnW8v3rFPXg+w3AyY03lmLPWaB6mcZbMCm37buvWixsYLfqd5
Q7zPicTK0gNCJHSIdGBpQuqcjrp1484ZL72Tv7P3Hpm95wihiZSJvlI066pT
LPE0lrTsrZrd2qnz6ZCetf7iWuecLISZakX3VifRM5B7vwgqO6WL+CuK+99v
+5+CJFOeqC9+yilx/unYMq1OhE6XSOoWVy9fCvJnzBbfe86S4bRww8oC0D9p
3mD4nBJonQ93sYxIgeUY7wW0S1jMTMhhT0/ukwk3uP2t2ytZTYOgMjj82q/9
GuHH/C05WCnJ0DB/cV7vF+b2WrLs1h/9qO+BA5fkp4wYQfL5yO+ZESMVow+Z
n0jKNDS0239w5aEjlUTVtfWz1tbMWLVmeuD6+vUVx12+L1sxFWqFgYFPmuHF
HMh3xAYHED2mvsI/D/7hn5jpctgrry3LR8wO/g+GSX59b935B9edV3/X3+ST
swjOpGdkRBWYn78PD+0UuF4iUumZY2jQNslZTpF3yTK0OuTfnGL5Vc4OCxB1
dW3SJylHeGZ+ijnw0JALrHIae2H1TFWZDjCria4T1UFAkna2hFualFOgzFbZ
5i6/sGlv7/Uv9uZczQCePfNWdDERCIOykJraypFtTs/ByAZ0s+lV5urgDbgr
IQg/ubDBbHe9sE/a+kwHEGDm9BJkxyHPiMiFONvFk2KqpIRZs/bPnv2u7J9z
Jvzx3WP/UMRr2jhx4oYpU7Zk7itcegAb0oDbkX6DGSzKaAIpjFSAPZVy8mHy
WJjIvBwokosKRku7cncYnuJq6dXIZWmZQHQbt7zM7wRLzezcuYAip2XqI0YS
iM00mpuCuZ1ZFcUloL1pXusdOy556qnejz9+2bFPBuTz2We9P/+812fPdv64
sfOemr6jR48ePHjwjl0PvfX2um07Hky1A+A5+mjRW7tPaalVwBjRv/xEw5zm
TM4KKErFHCOAl+9OBEFuaMoEvAv7F9kJvJESKyWsHHVZDH/MKMsfoh7SXoEP
Hul0jnymqQbpGDQYCbzyHWM/l4BsU+fgJTGhNCoZUOC3YM+CbIUiAoepPypO
ap5HCyMC2Tvf2elI+PzYcn55zvNooW+JMA1IDjC7qWHbnL1H81n0zseNB34U
FDpn7UbrCLmiFAApPJXMWfg8JfUnwjmFRjiQNmbMAWYpwyTADytbdDCnbk6k
bZJesjCRAwK6Uk7aZQkjVxHOmVZT8kkfYqeA5fmbDlcNIktCv1HURH9nfAt0
J8LPNOMhz7mpeWBzcHvt+L4CTORFyvdYAdtG/ZZoWcnXsH08GGlXrpWOWvPy
O3NrNnXt2nXQoEEYLKKJU45EWuQfi7vDoyKmVXMoN+YukzYN2A5uJzKze/y/
iz0iDjTPQB7pXIhCadoi+vizm9vVvH4g2P7JJytxPXl00Zxyj8jssFWNBumQ
WPQZHIQR5Yp5U4RvI9JQ2vcEutcMqJxo8BdkjYGTahyacO7xKRVlmw2D/2b9
oO9YDZSOJL2UESZoWe4/k46/ab4V2xyWyUV+Q8n48q9BOH2V5gS3Z7DKka6o
kjwSFmgo/4gUCM7PqJIXasiQIXmqb6jZvGj3xgd3b0jJtdO/vWbqX4ghzeXk
ZC/OcKgDpC842YL7KWEPJFOORBUoPszCc6iWlGmBkb4gW+Z01I6vKO4/6/Y/
BUnmZ3W2l+2UdPczPCSnE5kphZTnmWO8xTHVmVLpw5SfrDr5deXKH6xadRaK
C+8okozwcHIxLGi+/fv6t90zdfAbUwc9MLA9ijsJR4GTaCEiVfP3nzdv/OGL
BnfM8ZVgz/3Dg7pzcADn27MHH1w28J39w9asuyvDWkp7ZFjnlBasyym9YUOH
dw+uPHio9uWd8+l4yDGBorNy9R37D1Qo6CQo+dIFyCOfCOonSFiSroLQECwK
B7e5VKT82xVn+6s/cbaLRcXcS7VTTuPsszbO+kFA+4aZ3+e9L3x1JHaokgAO
uybf71iy9u6V9aY2/v8APPmqMN6xevhsMXnwYTI7YM6kqPr6tuk9jnH5YdON
MRByIrH03/iN30hv52ATnLRNqYYUV5ZBLTFYU8jf9AAIhHdNT6bCZn+7z9Y3
+4ifyki+YPXFwe2pm5HfVMXNRVOdp1pyeZJ0nJlFXJ03sjDbc+6fn8gsf+2K
eqC98nnzSCXL4Yxvzhz3R5nXRCkWl77aouVIv1tEoefMORDcjkuzeGHHxxZ0
gMNNrDmdAkapEoc/IU3SkVaHicaTVshZOT4ACWIsPnMaL/i98tqksVgEKpab
tXzltJiWGDU859YReJi5CrOHpZDCydcLOi6OYvz/bNZB0hsBDwESmUklIYLb
CZg0NXX54Q97pT7HjvX/5JMBn37U8/jHPT7bekE+b6zrM3LkyIEDB27asuDA
obq33lkX0BJsGSRfuMTw5CWXXBIw41qwCuQWxMVIufzyy/v06UMYEK0lzaEo
gpcCnwOEtFDSP6lV0AhZP/APoZc3XkIu8jslG5dY3bwXgli1FwfJ+EDUIrid
urVViYCfNCE7AzNy0fQPC4JrGtddzTUHIARNcUioD6Wo3Gh3TcqDVBvcYoLx
Ulpgwqm2xICqzYK4ef32OW++P//tjxvf/VtZ6cviApZI+rkIMIJ8LhG4mPqn
VvLOy2MrN+uGl3q/tGhQ/XX9MZRAep3JoONyL8s9qV7uXVrKkYvcLpg6B+cS
uZVsB3ETitKW1JBKKm5Y/sVZsjxh6UTSh1y6YeKAfOB25ifOEkoeglPFxhz7
O1uv/s3qQGzB3Ww3RLj7Nmxf0LBVql8UIDXP91yI5WKPV1KsOt1a4dskN/M9
9ckpec03DP9G7AV+41Rgy5W/nh5mfoqZzU/W4NK6o5PO/9tbL1y0+fGnx3d6
f17HXbsuZbnguVncpNtfwmRuuGFTcLsnsCwSYdFwlXDIpxxuIgHUJjUrQfj5
IHr+lTV1y4izXpo8NGNyqme5J/ciY1cm2czUmSa4rdBQLWvKXpe5mEpbJvfM
FIbojHUkcZAqRd+LoDdUUubhJkoF0jO5BZs3d17w1jszX97ft2/fgPZxy+vq
7vxOZsBMN+vv/t7q2/47jJHKVKOO4nIPnKgm9HIPVkOdor7eAvB87cRWDaIK
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
32RWlbRUxkyRgJJ7BvJxDwKcJC+yMz9xPDKLrClYiw/4WdCwVYgEDRYEePHU
Hkj0GHyw9KT0AXlyODBFNHPUF3OSRYDxghSdv+mWQM0AJFDH2gEdSwnisYnw
T3Kw1nGwo75D3XojP+Hk534hLYitAKU8rh6YQLuHm3ZLtUlmHH+eHki6N7VK
HZzlmf/2iTS4RSETr6y0iP8fMUl4qedcdEAedaGvNdf2WT+pkg9XHAfJI+oo
/fr1c24aLo+PiMg0/5Zbtt9887Y0MN8HDRokiyu995TM3d2/f//8ys9PWAYx
jEs/3VKkrvifxXqwyPJGWJ2xVsjOTcn5/vxNlWDkjDDc4Hhi0rBywhfrbG7N
pnyYEhC7xSx0pjwhEi7kraENxeL2rmXbcc2/OnLj/3Fsyn87ftN/DYDfevVv
kqa0FmOVIc+GRcZ0UWzYVCa2TKA7J/PsNRvWvfru/Rt3pJ75VaAHs7rQ5CRj
sppJAFMyjvwVlu5BIgKZ3rj++sYMC8ZzQVhpcv4iR2mXFuEL0eS01pA5aOOQ
7+4e0561Iqorc4r4Uy6mTK/5yyKgOfytExsFACHbab4L5dzUlnoSx4JY+xyW
RqVb8hRRuclTIWXq2GW1B9e2Dm63ti6BeL5k3oTGBdBBGr4XRgEEklnpV3/1
V1udxK84JUOm+t/yXeDe6UJTy7VSn58Kq065/yuK+xffvvwkmUKs+kcprZru
Xh1heobjJSwgpnSG5Krk1rniVbg6fLU6IrvVCeq7WG/b2rXnrl59Ng+/wJb8
mr+ILmhpzuKKR/PgqRaIyoEscWpGjwxuSO8iXhFvMqR84xvfyCu/bl3rAwcu
OXTosp07u6GCCE3lcMuAZs2ukDpkuKMbE2RSV9cmlzBYpRpgIbSJwk01F9Uc
E5JAVvajpqfmuDQAtlotWXZroDsolUYtXnpL7AJ8GF5ZbvZCLATgkdWzB8lc
3jpoDVUG+wXbRGYo81pKyykZ2NNjroKxk9NpwkD4mD+lFUg1/PN0ABBgqNOQ
1sx3jE0CL7g9TBX2S+rGe8xrlEIC2jO9ZmzP6J1L45bnAArbhFCoXD625OZX
Xlu2as103nhpYa0gcAGRTOdBEgNlykuBBP1I3mXKDg5BhGbUSIZlCub9BuT4
z4OF0AaQMUqQnVyroDhlNv5SDvZcRWZJ9HKzoWg4PkPzGlaSKwKEnPPQIPY7
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
Hn+8sjTG3eT5yVmkyYDbD9HQAz8KXKFKIbSzLTemrYqFIDtp04sfvi22P6Sw
VX5Oy0NwUVuKu9MdjjPbEmNKmXIJDjyisjfWse//JOX5X5jtGCTJoJf8XE6d
8y5ffkJwO6r5IerxhNYPP6o8ood3JnFIuD2APH9lWc331M97j0JDNDtIPhg+
n5T89YMbijsvvZICSPMFZd0TXhqcPX4F7DFn8pNsC+RoMkpAWUHm+QS35yNy
00px48wf7m/uIPrywyeG73/ywqDuDEFv7l775u7ajB75sued+pdeXRY8j9uQ
8Xn12hnB8BnB+A2wRPhsM/RhyKcewrl8rRmrMxhmrnl7wmcffX3Aph0DMdU5
80s+PjA+Q+6sRWfOWXIWNzsZcO4mVBl8FYU3bO+TjzRPPMxCHREnikyKZYWM
nFBrDlx8UZclF5/PUpCVD3EF/4eITQo8e93AlMyVEoFkL1hmzbBvVhUSC3nC
yalHEFM6H/sa4yXXmAtHOAeqOa6tOzgEXTO/BrRnEgnkaBp6fCbT1hEnyleb
MjMXnCHNolSq5jKCBgB5ppLULD+sWV48l5ICDYD2XDjfVLqd2g+QL3BVIDOK
KekeOqK038UX5Hu61Owm8EqAQ46ypiy2NNVaNIGHoXTqjuCKJ0RcWOkuLmiX
KaIBfUsBuvH03vm+CotboBkKSqbCgQMHZuIOlthb235fXQdkj4A0UY2Z1vMM
UBpHCRDESrA9v2LtCllFoibTYd7n9+bApDCTwjzJRWII7ZYNy2PPtZtHKJM4
PWo2IA8nl2x+Cm5P+4N40zxZmUaOHBnwvPnhB3bsXNW8/m4hsWlVLlBKzWDv
9ya2f++a9nKMptmCQHNerUUTIimTf4m6pH7hhGQ3UiawP3tmXfmns6/6szQg
1QawEV1Mz+SB2d/SIR9QjcAIWoULD97O6QKWnntwaj7CWikfCmV1a2Bs0pGg
NY79hNXN42rWcUFTF6Hml19Rm9IM+iqpIf/27NmTqrxlEcaXaAXWN2IJfIXM
LzfQytE9ll7SldGEByJpaW4Wzy1HNDVaK4DcsHNrzm96od/ilgGpiu+CaIzX
AfxLhbmiXA4lRrys9AOjEk9DXHyRPw1u33P1x91yXDWv658f3GRbyMNviRBL
nzKPCBpNzUskAVZZemBPCa4hUwmFkpGRyCmf4PZ3rzl9y6WniZSkG0+oEAmc
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
F53DqIxQQWc4O3XrKf8exEVpXp64dA6uQrthyGjdOI+jl0z5dwd6c6lQW+cv
ONIWsDV8P6lM0GBUboW3aPLkstGj8yXVG9BnFiQaQZQujJeIIqjmoefmLygo
ekHMQ/15AWQRUFVMSGoO3lNjRAAvNOIt5RWVgqLbU9kQ8YN3bUb4IIXNfqkU
OidVWTe+1bxC1kc0rvyj0CJiRGQXL8ws4ngKBLSz7hjx16+N/S6oW/IJwAOo
A0Dina+qSowlF+u4bVtrVtnUMrQBkzpm1XTi+NKty945tbS6uv35C+nV70a4
XdCuPHuE3q93fvfyM1evjVp8+gq4/UJ1ZuXFwv2nykDpU6ZM2fNy08s7Wuze
3T4pKfJas3PIkCFdunRRbhFkq8g8v4LtAfN793Y6en50pKl++LRGE4CZU7p2
7epkhKIuJoTVY0yFqapsN/ZwvxNzStkwC5JAl38BwDwj2TLsn3foFDDeLEJB
xJvDjBeWnkStDhzodulSB4XusTgaxBbV2vXVay4pMWrMwrZBT+0cVr979+6Y
G7ah0xwy8FWY10agqrwzHCBrhdeGOlNJxedDV6OxoE9bBUsqP+fgyYUnLrIC
ShcevwhiZzviJp26wk/eVElJs6qqhMLCRkZz253yksuHCSorzqMplaNTxUko
rqgeaQjV8SvgX26HxxcCN6yq4k7znnkwfVmTF3NKRPW+SyGXkyiaCsRkuyJB
SHby7pkDzlS2Rs3ziemB18o2IFf9UlqAv6oy8vRls2hxy2+ZNCnK3cD3zl+7
MjWdpM3LP5SEY4/HxvMD/tfMwfc6/Wc/w1/vyOdoaK3WgREx4Pb8lPudNQsJ
czkyUveKMWQKF36M3if3/pZ+OQd6htco3eGbqetTp3FFdd0dkcOiE09BZuHE
TRdH+dtB7DdC/QBFgsB1PGHgFstdt6TZ3BML0AuZYj4JYoWpgU8CdXeWP5jl
SzcLXNUNfqNDPqjEiFrdqe/9d17od0oYBTvinphYuig3eM51s4cD/KaC1z2w
aAwhD+jdPSHpqt+FmZXE7RSbcqx6wfGL8liC8W4J1tlLc641MRWCvwrplamx
WwDkOF8Q9HNky9iT6H4Hp9GJ6Y2ntorP6AiV8Q5s04MKVHu5V5O1/VqYXpOd
dJib0mbSR5mKUdlq/YdK5LG9ZcET4HBGZGnAjE26bdUJMWJIrT+1XOjbnSk2
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
k2D4kFWi+5c9gkw1f2Shm9dDb7bmgOrosmg4TGMKNO58AT/xsCTV8PhMfSuk
d67EbaXbVGh31HOcVY9CxrvpcYXrutaduNFG0F1P4ZpyPjLnIyhHPrzDlmQh
pwY0RrypSDs0+RSgfcGCM+PGRdLoqsYJPiUOUZQudO1BJ9AF5CEEwEA2ZR51
BoaWdGaBw1I3TQe6+1pyrbFjC0XCUdzi5DJA+0sv/Zp/2alRadp0igW3A6qN
EpVzrtO+fEk98LYTMWrFq0VJNZy2yJn9s9w5j6gXDV4q6PGIyjZmFlNEmgKB
bexXIgNIs334Nyue+ZZq1UX9vpLf+8+UGI0KGfg1/uW5K0OK7bkgo1B4/0+x
xdzrHm8kLAvVViSEy/Ftvnlsc1ZOsu+5XDX5NtxvFOIaA3Ksu3YlXrsW6beb
4chcsRcvRtAdMM+v+0Y3A7Sz7n6mIRC3bdu24O0BAwao+qh/W7KBZo7EDBAy
0F2zSJI5+FyejNNeQuUWLVoYwDshu2RaUQUAngP0xpvAlH+B/cItuSJGoLBt
DK+4V3+sTy0wH5RwB5mrRm5ApQlzhw4dKm7fvr3Ntm2tzfWgXCTHGxwKHgbh
Jx8+TQ3NnaRyI4ULFJ+MLVSSq3B3Y8aM6dOnDxu0D3/N6OQi8dv+bdSmPPUw
FX4xNJLSnKxRBFIjkT0czCoNJqRsY6OoqPGxQ41N8clPs18/MefAO2Mzini+
Rm5uHfCrncMiy0XNTJ4sdoeMfRr22KYnKjN/lTYsUQ3SBc9+36KUXZJeToWN
xw92JS+kxqPvPy+hYjX2UYD5WUMiqXYuxE6NCNrckHmuolE/enT+okXn+Qbp
DQDw3P7UqeXTp++wix45Mmf+/NPPPJPFKdSNnVxFZ45ZnPjMdenIE7Of1OUi
veeFsT/kdlSbVFQnSHtRZ+pDgRyGNSrDx37sSHH/ypzHgeWZcx9aNvkfM+c9
9NaBOVUXXkw/Wbrq1Uxxe27yfVP6/LUSzUaQhWFXsjp9oJPjylnQLHJZgytP
p3otePOlmhRIYSAOLJobA0trBdP9Xv3eN3IYBBu/vyveWf6TLku7PH1yVm9W
Nmr9VCtw9XaW8OL5iTnDdVOZmtsvrZaZHE+eCdjez1Diij7zUEKwoyXPyJwB
lnDwK2smHT66/qXX9/dfmRqCTVw4Mi3tiQ8+aH/+fBuhuBQd0JF0GruOoC3D
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
wIBDUMspFIF3rnW2g1AR81khDLyg3LG5EPQ2EV3EFArXLsusBcPykv5fMLCE
Jm0Ws3MrUqGElvMuuirBU7RU6KQUI2NfIKvLhSmirCYpTga8FFMGqhhVGT6o
/MjuyEi1/JT/VoRl6qE4vkpODafdCJYPDlo8EgbSkun/+eqSdeQNEX7XsLLk
q+lSGKL5qZMlBazbdNqE+/vk39e3NQW3b3+ztVQw1GNlzt27tigUte3mz71z
x2e23vSZZaf9608CjbwvcuheupfuZbelVF8qnPOC2OsXqPsftYXfm4j63v0U
lF7Er0B3MF76DDe7UYtB8fKE0VumXPDkuDPnXXj0A2cPhts5Y3FsMpRxNWSr
lRP+XF6qyQsnNrsK+PzpC4vzHvTe9Wbr1m1NmRlNZ/tXldhVnZYDu29Nt7x5
6qFBXBmlZY3JL6MskRmHJ7lnVZO5ZFmC6PvWStiYvzg04B/5j9CIiDn2S5F0
C2IfMWJEUESMgh89NPz7DwxRkCX/Zl4LJMj8ThtcjD5fgxxwJ4SnEYEwIVFi
OKw4pXN0sd28T3tk0PRHB4Mi8BLBAf7zEhEG15GCclAnK+6MSwB1/7/s3Xm0
XWWVLvwM64+6pZYK0iONKGBV3TvGd6u0KCAQEggkEEhDJyoIIk3oQt9DQKto
JKQhIQmdUCACIX13cs5JHwiit6rulU5BmgCBNIB+hfczuQWM7zn75553V4AY
uXrL5qyxxxn77L32Wu9617ve95lzPvOZZCUsoPqTzVKrDy891miltrkL4gJ8
5u4+Bxepf87eQNlAHQbOA8OOyjDITScPyGGePdN4Oc7CHBzOOkflR+gUrddV
lP/Q6cAAfHis0XzSJS4671DqfzghiOJ85gceeGDuWt7k3wyYLgHJ5itAPQA+
AynYJgYgMB94H8SYGyesI4dCZitdvqVnH4gEYvwArkwMTNfSrgy0CHS/fFr7
N+cu5hlWe5dbmyqOH0LOQd35VrXQfBsEGJSrhhdDjIxSri625JIlR3KWMu52
atZszdk1ni89GyyXf3Udq0fsAHkbFUSkI0MIuX3+/EFr1371jTdOCIwXAGJA
GWkYVjs0xcPV2yV1iFYhIxjwU28oX4mb0GkRcSiZxGJT5JKvmN6RzyV+ou50
lXy6bIf5Z31i8rnHPHnD6TMv/qpUUMmYhHQkPOp5oFdGiXxeBG/A+LkVXSWB
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
grvcXPc/NOP+hzp5O4MT0sMqMZlPaKEgr2KG8Ctmh6OmzJl192MX39DJ98jn
DO1w06n6irJi8QWu3tQqXFvcJJ5Vbup2zi32eDbIIRYv//m8+58IfFp26bFP
XHZc/paPrlRlNm8KazIEOOgqKKOMo6GuMwjMWOVlPjDQbCBkgEUPZghMoASk
k0FfhAdxq0p8xsgBhxDmyz+fjaUG5EawI2A58omAKBDOAVupuGIlZZjAbKNO
/ovRp/xK3AaXhlBMNot1ufaW4Vygp502J7g9R8zFD2jMXc7YgzOlMGzVqowp
ZdiJdHXtv2jR8PPnLL78nmXfmHdTLJRbTn7T7ae9+apZv5g0/9+/O/+mHCX7
eerRzzz/44PX/vBgoMtIK8vFZZHLnFNTTEdSIXMMewRiF+5x98WAaic2yDNr
jLGGXGRD0e1ji7mPAGeuxqXT54+cPBvjOrg9lytnTR9mcKN+SUPyz5tKRv5K
6ObeL0QdVJlLwbKQ5ZpPgttpe+68884xcBbefURetEzzYTZQuBO6FhzJyGEj
v6Ulty4GsXVTUCngv8+9f9nueW3TSOuLyAxuCqLJ1hFPMTt5gvCITDusZnB9
81ZZH45uG/9Zq3bYNq0CrKV72S5fgy0pL4OerQeE54RtC1qLTfBL5+cPPNT5
5Kqep/51cV4renuyASojGlgpw6O+o2wxKvn8zTOiRaQXeewd3SPMJCebkK9W
zts/0D1f1fxvufGJctilIQm3W1bK607Tfv1G5bgc79g7XEl2ZVlpFxwunqeH
6KVWQEx7i2wQe9D7uri91lwuLCtasUwrcxYnzaGLurOut+1FNd5fFAkMtIE2
0F4L7RVxO7YeGEPodV1j3LTw28H12oO5dP1GJqsQeEfjQ1ivrXCqabmmzY6G
TlMprq9ricmXMG+mplNPnX3SSZ1FWeRjySRcmlogomSurE1ZgOScWmUgq6xl
JfHdt8RPmzfnvmWBpjNnj542YwSBBQSMt7Yqj+fQPT0HrF79+cWLDxLH3377
7Xt7P7dq1WfVWuKnlYoFReeIC6/YU7F4fqoiM/B+83lCLAV4kKXzyT1XnvHY
2BMnH3dY3st9Q2JhHRBJQ1vF9AB7xBqCMbbbbruRJ71rwbj3zhrzXs5nf6dM
+w42TmAJij7IyrdPzE0SHI0IjsFctGDppav+ffY9j/NCb93UdsF8YFJx3JHx
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
08N24LCiULH99tsHSFOHCIpesODARYuGQ1zcSsCDoDCUW9omS8Z/fNXUXbq/
2qcdUXopzI2s8jRG6LFnz1naFly+RxDXzjvvnCO+qSmxBBpt2ioGiqph+aYU
x4UFcTFDQHf05nxInzB7XnjFnsg2W7WKh8agM6LA6cD4ScceKg3W6UPv0BG7
Jkj14TsmLPzKboBlX83Knz4y+qePnHh9Z17FgqbGAEun27nCBf5Jf0jFBTA2
atWZgpldNycFMdKs3qCpol6MJqM0vRpx48y8BOLT83b9OvDAwwK0OP38fOao
Pt+s4jsATC570C9WkhRaF9NxcSQC1087bU42CGjPG9ZTgNzZZ3dfccXjp546
mzEIupeyHFCEw8DPWRQpXSoZQ0I0wHag7Owxf7lk4nvnXPpXAYfKMNly3Ljl
EyY8qfqqYZk7G5QeZA5R55MMvJyRHNhA+qd6hgWsLlw4LK+8+Y+Lhj/3neH0
HquQaMFjkFIWBtAulsHOwsUyILl2gUCJyfj2SGjGDEwrqwJhg52bv5WYLGiF
fd1eJozXunIqRTQ8tiUZBLf33Pn5sWf991yxS097L7YVJ3b+5nxzocrQ0FU5
yHrOGa7Ysb0Ft+ffbMYOZSxLYMFyF24IYl9yzJ6Lvro7IE3XBQnnA62WN26K
7R2LWApKFY1KpmL2XHklgHHF1GBUT0Es5dOnzlOMSVjtna2arVXqKL/lEHAI
t4BpyRR9U6vANEutsr+Fbjdq6pYC1TbgaZEtggNz/4MzHnio05hBMCu9SnHY
InVI/OQqkYrFcVTFl4Hw0oxi6nL+ZIfcOwVcrVyeKfObZ7xKo7IUSi6yPTW1
9N47GtHF9qW2Hbfnby7ab4p7zTkvhb1fTWuPArS32Uf+txXf2CCvuUdtMOdL
b5j35V9FnV7e8Z5f5fUyh7PPV9xsoA20gfYbtR98+UD+9l8521t/8++1Xxku
JtiOwKvlWxvA1f+taf2c6pWJ0y7DWOSEojW276FdAcC34pIFrqoPBfLtDaHC
0mPn3tf2VqtSaN+4qZqKt8wtE0w+b96+K1d+prf3s3/SyHcDD9aL/Oo718+Y
fc/jIyfPLtd31pQg7bz4Vy0N3d1D587dBy1z1pwxU6dfLDJL5RsstJjuuOOO
WfQXLz7o5ps/KY1uyZKDszfuJu5HXmVLGM8kby0c3jtt15tPHIxVXkLNyKtS
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
9ttDV1+w38zZo4Pbe59eBLczpvjDIW3CL5u16kqn4bSs15Qo5a/G98v07pmF
w0uMvX3+R2tPD9HmN23K+dUOa61xaIeT28Jl9LpfV4DsaOAuE6OjSV/11cuo
LNr5//US+gqtHbq/Im7XWDS5g4R01m+rHjsA3QfaQHuNtD9iFMxk29FwXdad
GSpFSD958Mot3z7N5sMtWvXpijNvzqRR1tHmlpe2X7idA4qjlZsI87OER8ol
7tusgDjYle8GJ2Q9mjZjRB9uf3BGXlOnX5yXiDCe55w5n1i16rO9vZ8Lbs8r
GL7UISzrfdB6Vc+Uad+BJfJh0JTY+lta9cFVQc3hUIs/+MEPIsHm/eSrlp57
7oKA9oBnbjqCkNlml112yYHQNh58eNbDj86p0ucQEfSLjoJ+AGfimddC7M2U
4z8lETU7v2nC3ryF/LRrb+mjZ6OXMzpgfgLgyBgU4/NhsD1yeNEGyNqrG9V5
ymcmH3cY0kI+nzj9k8HtOcGFj/x89r2PQ8tuytZNAUcRfzfLibSbWv76ClAc
NWVOcDurDTNhqzadecCMsxeDhdBiX9hl9C5dY3YtgjRdFFh0xsyR0zsvKdjJ
XckVieChEgGReQ460IIhGcixvJWKEptls6aC6jZNo+SjV1ZVOQX8vfr/+BOL
lz2x2PWE2JkqTEtn6uyytwyb3u4Dloz/eLYEL+k9gnycxr1dBwS33z/7hPPP
X5RX7lfgPbuDyVZXiZWHMwZ/FrTLBr+i3LRwO2+8fOHBTYWgKl5AgdD1YfOW
SGkfZ+yonVedt0/+5tX1pSHyhYVC7MRYfUtThAhXHAQtGhuHLXfxRq0KyJ0j
3z1z1Hv8K5c2nZSamkEr2ROmzcbKVDEVfZJt8iaQPqNa+oDxTNQxYBtrpRhr
qHcqmfJI4+RjypXqo5uSZ1nQJLti+TJP3tjUGxU7y7fSoo1wcTQDozKaPSb6
vGlTJNpoqUKuFYZzGU0C9mP2E36SVMLj3Z7Gjl4umlnqXlzcablluX295+3b
e/6+edPz5V0ySQa0P7mqR72AN7fE/zNIeBJq/FSlDOlL5n+uePIy6zVlPqBN
sVo2xZ82hbbrV5s3ldSIC9W37RSR1zcFxOmP5QK2Sy70W6RcB8fNdWj/9kUX
Nef1u1pGX74VdH99U2H21bTXt2reSbAq62MAug+0gfZaaH9c6loRBc14Heu4
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
Bm5HWn6YDd7ZNDT4YqpncMqGCBrPZs66GHQKtCHh5BPC+/mbLT2PFXgSEuJ+
X3luH24P+K+8ePIybqKk4BJa5LLwXAse1XxVHKQ3NHJbppdBTcI7rFuwvLzr
Nee/vmkoNDWeN2rKc5SzhYFfdMeOdbJTTbzr4vZBjawrW2DDRvILiiZZtl7T
nIIt5Sth+Bc95qVWrnbhx1qq3tAoD6+76vVD+3Kv+jF/BtpAG2j/Zdp/OtDe
8UpSkFp9Vf4HFPfihHBFjrhx5qgpcwLar1z+y7woAHQ0pZf4jddrK4RhZi5z
oLQlxV4h5KK+W9znzPnEc899Ma9g+A2a+qFWkI1aAsUwM3nzHMibOovac+Xx
gej6lnUZfC0/NjgKoCKxcKLiVGzYqjpqS67gClLzL3U0i5QqOXB71UiVF2bp
QcLfuClHbsuSDXTcPtH7nz6Sqwq7csRxoYtlw9Wl7DeopTtBag9RpJA8z7YT
53ku4Tuu2gAMBHhBCiiL6/uNjcxa8aNyaBCL054PTcR/y1ZFe7/FBeJCxBku
+TvXUEIrecxTTpkVXBTgGlwEl5a/EYAkaZjfBq5Pn/8vk2f9jwV3fWHi9E/K
md28qabK58w6QBrnRiZTQ4aRlxUcHdyqEMpdCc4hfrzvfe9DwzBg3AKnIIkA
Vqw6m65VWTGUiPiW3VkXyn1nCOSIH/nIRzixt91220B3fngcGDhTkIuXXkLr
WWd1nXbaHCe7YUt5Ui427kqp4jBJOOQlXdJmh3LVfgK/nX6p0FA1l8ip4hIx
8xo21JY8npXgDKIzbXBg1EgiLyNGUIEkj2F2ArR7qU+0dVPINWc3c/bozlmj
dDi3gxi7tBQxGu70/LDMw4D2XEZHp6iDLJT3SPLZA4F3eqTibsYANlq+ZTFJ
ic02yO0TJjw5fvwTIyfPnnPvsonzllCw2aypVpzzIs+uoKpBgtufT8g31R1h
L/O9q/eUs2ATVRo1tSWPVaFNrmYoVNBqi6Y6gDdmSJNtZU+XRJUZGGXFtNk+
a9VUz6ArfRsdqIk6W0pr0iWrSTlkio7oKOs3eazCc8JhclrFAvDNOhq59Y4G
eAPS9vD/s3cv0JZV5Z3oT9Wp86o6RfHQdox7b/eNMVpQQFEUT3m/FIEqoDDa
497bRhNjTHJNtKOIgPi4PUZ88agqiiowSWujKCDyqPcDCgqUJP0cHW3EdI+O
CqSpwqRbu02KO8Rx/2f9nN9dnCqwEPDVe449zthn77Xmmmuuuef8f9/8f//P
Vhcz2THPworhPym+ZRkFz86B2ZMhr4V6csCfGZRB+YUpP4+gfWjfcPtQm6LL
r2KXM9P4x266/eOfuwM24NNLJXQAgjOda3a1+sxsOUzNzLVqAPN1reEuMas1
wiwKkOTNhg3nrFt39uyekvBQc8tYB3OKdKKuUsK/Q20aL2kRvhdo014z0FWo
ozapQfQi55T7ixs5R+ZaOcu1aj2tndZSuUkLg7KC2/PX7XOX2eOu+NbyV5dK
DFfzjb99wU3/90X8b3LcW0kZC5hCWBzsCJihKOi1+kNWjA7EmLQQqcAtBzlU
0Nx+LQEo13qfsoIbU1sJlt2RXj4juLdUEEswHGyOlbfy9k2QG8QIOafy6657
ZM2aR5FtAL/8ve32T9AVyfunvjyVwSqdsOrmC7Z+9S13P/QbAe2aMbflkOXi
06VFAkep4pTOUy7hSn1YXFx3rXttvuzfsoIC+RCXz0Xa6iI0j3lNAVL9zkXo
9cQnWy54wQX69sQTT8T9Pu6444JC5zX1Ho5W1ofedqEPfejuAMjASPHUfoMl
2mkzBXovPs8v/dIv5RJBj3STyv/v1l7WMqsW9vNbEKHJoe1xGPbMQFaSAXZg
y5PlvhDOUZLmdolucXLg6op6YPdtb6D97uvnV+Cq9ngWbs1+REW58p/jt6PQ
2A5L8xZ0Jdg7AzvHlwp9bio1OBGQZtGkzYw1exD5MOfaejDqRApw2gftb/j6
Y/fv+vt7H/tuboqjm9ObXUBV3k/VvTArRGEwt4nJ5N/Nv3XS9necgV1D/Gde
y4RrHvD4gFVTIlYJl4Wfcw0ktkB52oWxTLSsytzaky3dwFDnhynf+GhTR7Sc
MQfMAJNNa7RWOvX00eyMXrLUotOk2WwB0yN2uvnwwC73wWhL1arm0Z7scJ9L
P9QSiHAI1PI0jRVTGmXFhOSo33fIvSd0r4XGUtVf6+966Jt57WPNgzIog/Iz
Un5OQbvyI0NTh9oNlm8crTHlnke/s/3R72S5Mf/P67TB91r//k3bHLRQm/nc
mzoekuckVNtIy2Kzfv3rNm481zxsTq69V4xE+OG/7NryxN/ec/OtHxlqTMVy
Us1pyZLAufKicFEeeuihFXCKDg29F5tFQCIUag06qGWEzOmXXLIuL+sUIlBR
d1ARQPr3vndtoPt73nOnKMiSlKwFsdiV5UfNV1/56NsfW/nOr370tysCd4rX
veLUvIDJyU5JG+Eca90xtv6Bk6Inud9y8tNCoRbCAVv0HsYF7Jf37/n8XRff
vBbSQ2OYbNqM5dcqc+OlLZE99CgxKEX3KXLRF9bnpQOFB4KFqTzdeNllGwvU
QYB33HX1f/4PN+zatPSe1Wflb17lZSXBzXGtwZphIGlDxQtwZnLzTrasOhMt
lwp/oFvwIPq6HxW6y1GPHQH0Ms1SYW7qqlvWwr2QksulhTXYYDxsaneRWzjq
qKNyWGy6APKcIrYRcsOrYYUZiqn5phsfv+nGnWnAfTecvWXlaQak29d1xhUy
FfCZ9u/avPSJLVNhrS9tyVLFIwSIFufEbwSkp0UjNkHv5RQBocJayzIqojiG
tsulBqqegiUVY0BYsU2KVLjikletXT5/1WWHiM1k6RhdiF6eCyH3o48+2g5R
zs3PdtGiRcHYRWiHw3NYvgqoxn6HP43GksrJ1XOiA+ytuC/3cs3Fv3L3mvnr
Vhycg6/8g5fn5V5yQKyGVXdu2bHz74LbjzjiiAqdVkM6U/ypn57drrwXOFDc
sApB9bDYHXa4atev1FwN6dqvtN257soTMgOQr59sSu+5osFfU9Boy0BXLgue
h5pgC9OaEuu3wIcwp+Ug4JDHQBvqNB6nxbQWW2aoR5ipcBh+GMw3lp0lo1iC
zh1rSbf7CyuvSw5Giawg8f63nOpmqmnhsc9Ed3+mUlpqey1l4Hzspttju+WV
N/te+aAMyqD8dMvPNWgf2jfcPtTmsdEme47/sPahb6392reyxAx1/cAlvmf9
+RBqndllBhEVNdStEXzUFgIWgbkdjjJRlzhGcHteOnyiyUWmnnXrzs5Lq/LJ
f9m19W/+6/av/6fbhxpv36TNrUqkpZatWoDmdrlmsu5XpCe8Wmon2CbgRAkm
gzcrblqy6uYLAsWDybMQ79z5prwsnVw3PMnjTWIlRwaelae3PEKjTc24Vi79
nMO+sfz3gttveecbiyA9tb1+zcl5zWvi6m4NDreojTYJaMgT2C4xmfGWx5y9
w9GK/2Aroagm+kfMwrs/dye3vDLaibC5C/xqV2TLTHaSd0V7CNoBXQKueD4h
amAMIiL0EdTqX8wloppbrz1956YlXndfd6aYTZgttbkpYFVv7NfyxcCuILqt
f++pbfBjAyEGWxdG8Rvca0ZsWXMAWK6YmnN1eJ6lFnMjFtnd3/jOuocfgX5B
fU/Zjdjop16YW8gdcXqn5EbSsTL4EL1MdwUBiluc03LUvvvdd+SYNPWWP9lx
26e/lJ4MaA90T/8wWBCYKzix9gLgwJ0bl8Tk8Yg9OI9exivcfuca/OA6UhNp
IEZfhaMyWAjROKwfMsDhXLSiA1uOITsyIkzBeIKHJ510kkjYgv04P0Z4zs2R
COfU1PMmPRCTZ/HixdQgEVpw7/OVz7nK+fxBentqGCwxmpDeCUKyPnLF5e99
ZXD7+pWH5Pg7r35lXohbMq5miMZGW37bBgKk3OkV3EqiyuZC2l/UtdRfVpUj
idjM6dInpTGGPW9AH2nPbtqM/b28xzecl6eZxtfA5o5ODZwVFZBiVIw3lary
Wgz1cHsxXsxIpF/7O1YgetEaRY+W/2SoFydVQFrLi2rCrrQ3Z48mb9ZfdeLj
G8/LX5UUhbJ2gc3h9jrLyVObm9w4Y608E5vl2aH4j3F8rrL90e8EtG9/7DsD
3D4og/LzUn7eQfvQPuP2oRZhVD5qXALOk5lNyHeaLsFQN7vmQ7gdtOvvtCI2
9CObSqFX+JKpHkN+qAXScorOaJJiAe3B8xUAdfOtH/nL/3QHZnuOWXflCXlh
RcJdvJ213QntWEeImXDATrTsk5YGCyjIyglvE3kKT371LXmhNOd2AtqD+jZs
OKcvvABWffZ3l339U7+1ZctSwLK8Qy5hpSuXWu04p7XB7XmBmhNNFRweCDzw
dKDcyZ5mO9wO/1jTy0l+UFNlnNeytdrCDgYAJPZvuu5ix/yrlxAkaLC4BZjB
Mlr9qTcqyBe7uK8rSG7xf2mlgnD5ltH4wf6gnU3LTwlAzRvoPaAXpTzwaeHC
hcccc0yglJvdr2V3BSbdflqI/1CtEvRXvKyDWhrKDKcf/GAqyVcG1UTL8WrH
xJi/+tZ1AWxalb/6MEf+/7j9a49waRZ0r4MrLDe3s2vz0twFaJdbFiZJ4kYm
WVyjgzqRdo/p0ks3fOpT382L3Zdvjz322COOOILJCSG7C5Ts1Mz+VYRg83Xj
82ih+7L5YvdEp+EClf95blMf9QkCGKjP5au1diVsnaBgqZYckEHF1WyvAT07
/xKTzMCQvZQiDZGWHMabDbczK7zPMTmY7cZzHmOHoXrP6rN2fPJ16Vj7TWwK
FBoIUCcH/7OP0i2xnkwCgHfqPP7443ML/O1p4fyuSMDqlFw0hgMlfECXgz1/
cy9zm3jpRFM0Yr9MtGyzaEIHdflzc/siCPJ3VstrDI6mV4ebVvlEp4iVA2K2
b15xqg0sv1C7PKXN0qcaQu9zelmWDH64vb+WDTfhLxuLeQ+321d1wIa3vnrT
204cai56nxeThAuiflyjLeFdCQ7QE0jJLey+/8K84Hbctoq9rYaNdJqQWl7r
QkXZ1xbAUGO8PxN0f07r9bNAd/SYvNY+9K19r3BQBmVQfrrlFwC0D3WzbpEb
n/3I8pkUbTszee3GDnV0x9rrVN55423v+swX8yFyeF8xoEyALDfVkz4f6lxA
pnfonWd7qLlx+mozUD0HTv0LXprMA9qzNCDTwle1e4umAptZXHi6HIxwjnFd
2gvF9y66+7WfPz+gfc0XLrItjsMQ0J6Xxtu0tSn/uXe8/ltrfu/hf/42QH2s
aVeOtMyzZRz1GUf5/C8+8vavfOTtJezG1wQ/S3NppS7hF7sJoy2H6ZwueQoo
W/LvsDrQiLRAr4P/WSfwH5ZJgpVKbQZ+K7cqrTYn9rlMQGDq2br1/BgsaBJg
gABVUFYsp6Wchxz8ILidEoi7a9PSgPZgoSCxgOe8wBV6m4GveM7BPwZn5QyC
nVgHiOIsEZz/MjEA0dhcAe3f//5vxv7CDEkpYZwcmesuv20DJkMgHPqKgZSq
rrplbQ6AKNiAsGIpNCJfxQbZtuqMCgVNtUGP6NbgvfohOvcSDBncvmbNY0Ik
jLdDu7KwK8IwSU2iddlQsGmFucQUJSpegplAkWbwx+JyaDNrkVZq4XYEdS0E
L3MvYkUxQ/IvxnuuBQYLMvWIDUIH0FrJ3QUz5y8eS0UQML4qQDiXyP1KlkRi
nXM+7/VABjBGVj7MmLnvhrMDqlOtx81eYOJhMdkmOPLII1dc8qq718xfu3x+
LsHKzlc2hiR4yrkiVXP1vGd04MznlDSgv7FVt4kjlLMMMFED+bxGIBPYPhSV
JPY4jG2smq9Gml7WaEt154eZE20I8t7zZsxuedBqh3S8S7ZlohhqojE29aat
ZWYhLg7zkt9RX3Zm/W8cv+XtJ9fB5rHyyfTDVMdb6iWf1JTu6W+4+qSdG5fE
+igonjLlgd9wXl67d1yYv+WlJ5KjSeXZsFM5jTbzTBz1Phl+xh5l5h6lIm2n
FRzR5+TAH5RBGZSfbvnFAO1D+yYF2T8YPBvtEnYUi7s0RkZaguyhDrRP6bf/
xV/xxzqrQquK7qLC4Sb5OLPJxRdNcajr7QNaPlYhTvUVTIJVrg0qsSPAv2ex
mNfSieJRIJTCmeV3zZF06qxlOKjY3aNNwh2LIOfCq9T/8JBTOeQ/2ZKZ1qYw
7Jdr3fz7bwh6Z8VUrFZ/4SvjqOwpC5OVF8d+uEUKA6IAqpu1whZzBnrUEj5P
1BE79ZNNXJ3DE3cF5HM5qFJ3AQYQdbXc54W0i/wzt+UhKuQZ0B7ojmavl/wl
b845PNEknUc7hXO2A25PYNI9q896YvP5QWJp1Yovblx5+yYRf0jCCOdBUDRG
aKFAgG7WpT2meih1OdsNUwzwXb+W1+bNSzZtOu+gJgSaN5dfvumSS9alSakW
IR+Hmc+27hqC5eev+GXAu+RWgGf3xUeaEswpbLMgX5GcGVYv7fJSkUCEqFNV
WnXFFVvyL9d0avjAB7YGt7+slVId4ZksPhVaO4OCxZf6+XUrSKFCPMRoqA1/
Y17LMlDu+v1bRoCXdYmG+Z9B31yIerldgMLkB7SMXeLBUdNRqopcZFDpwNw4
00yAJ7RMjDF/jz/++CD/9AAMTFk9Xx177LG1F4NwjplTYSzIM+tWHCwwdluH
3q9+zyuQ3nFyZJJ9VVdKfkf9QlDzF/m/SPJjXRZgDnA96Y4YL34pfrwsu1Rr
58KuEMe4vb/81ky22sxRb27x82EE9TdAi3yOWmOyTf1qq5mfAc7dUfO8D/m3
zQOeNT+/GZ7dUVEVaJBVZ60mfaxu6i7cbj7BwqJpwCGTAwLmH994XvD87vsv
zN+ajtKGmv2mgW236U61oTYu90TdtUz0y54wvm5hz7X+YzfdPuDGDMqg/ByV
XxjQPtSblPYFtw938gXjTTLFEj+jyZWD0NNx+1e+AW2WL6XvoxBdVZWUk6T8
RUW8IS9TEyl6hq8K8boXW7TINjzMTADY2zw/1qUfhQnBzuK9H9TlqbFMqI3I
w9yWFxVnW6rK1HbNZ85ddfMFBdLGO40FQbVjLUGPSyA/BLvu3PkmxJ7y55TX
nX1RkZ7Wl/LDkygJ7P/s7y6DNkXqWUMhAV4yb+Ar+BBGRYlxAM8bxztUs33N
a7asPI0JULT54gXhOeRDVpUbBCTYMgjtFQfHNb3+648uv20DD2QRjfpyPWUR
wJkAScEGY8abPIUdn3wdgffAQmnrBRjSLUF3QbSQ1paGdt5zL/MY79eEr/VJ
eRR56TWmEoza+0jNd3/jO3mRYUFo10uaR/Id4jKoDBXdiCCBKsO8Kvcv5nmO
CTgM7CxyOA52HsfmFafCqPjbxl5AfpFz1qx5NFidw5lsONSaE3O6u6udHb+F
uZ0qJtaHVhknHqWx4cfuihgm1ISKc+WJM3udWPQSCo0pRx99dDCzMF49I20T
fo57NxhKg5FdU7/H2uIBoTnA/ZsuSuXSnuaixxxzzOLFi3NH+Rv0zhmefgue
FzqaixKZR6epZ0QJc+X75hd03/7J+WtXTGnXX/XuX17+3illzqOOOsq+gAxT
7B3O/zQglfh1p81yLYHZ+sqvw9guTcW82fS2E3d98Jxtv3NqDsb5YVakPX4+
piPAWNyN30sOrlgMJgyPgWnWRGqWtt9nbrTdUz5zCHaoIyuOPl0jhYFQ26Pj
ndTkS7v0c0g1+StUweWc0vc29Aumn9l7vAkC5PhNy0/ZtuoMP6ji1RSfh9XP
MHSV8ZaA6ZnAtu3aalKtWXv1ij8nzsxzJdgMyqAMys9U+UUC7UP7LAWpWMr7
gUUVUOlbC0TVs/wv/iov0+/MlqK0JvbRpmkGVHAT9f3t/W3ZzOd94qJtXO/X
rTsbKaXWFKfbUK4UJHxKFoX9exrm5crmrcqHhGVoHQw38nPp4yHJ473kQlff
eM7qW5dZUnk1OcoK0RUPMxcNPNi+/aLg9s2bl4gOG216lcUy1SEFkOwy145w
6pE7tag71ncUVioomPkv7US27bMj3EJWYDM3JugOEuQs5A1foUOU2xPWQquY
2+THgUAUEQQAG/eeRe7rqlvWrnv4kZW3b0KWEKyaTuDG1/nMjdSskag73LnF
JqpAy+JvCHgMoHr1q19dNIbUI00P+k1gFca1MUCX0lVYB+WDLUaKD4HqCuAF
eNZ97ZG8mHhQhJ4p+XqqL4DugS2dkN8Lej8Dim1b1FyW0cUX3/XBD247+eST
UVBS7RVXbMlr9/0XPnn/hRgmEF3uLt+mP+U2ff/7N99ww3/hcselsaWSSvIo
Y+Mc1LJxGedco35cL+ulN6X5w5iCPz0gtDG4PcZCBR0wRkoJs4w7xhcwxsTw
nvHLQHA7vNwHNhnJwGw1l1e8uPoukWHDHvGkci6eVZ6yR0yekThksHqge2yZ
IPYTTzwxFg2KCx1+3n76mRNdAoJUnr8B53dd8yr+9lWXTcVN3Pe5Y/IKgOdp
1wlIUxl1FdyqQgQweqoVBT/a5TvTZl1hBObbLW8/Obj9yY8s3f2HS7a/44wA
eDAebq8YUnOLTUCVHNAyHev23DvcXiEbplk/anO1bbWizw013I5VaBUobh6r
mbkKkMPtrAk3lVu2QTnZclU7fk//tq3P8SaEBXun7Ny45MkHlu3avHTD1Sc5
XSQU9wKKXTlntGpW04F/ljKjybZPo83saVA80+fPVO0v0ro/KIPyP0/5hfzx
FhflR+J2K74pfawnJlZxSZlvh3o7sO+88ba8rD5Wk/Ge7m7NyTM6wTEzvFm0
oEXtAnAADvX8JzwzQx1uF0JYbhlrPfTO4YlQCvfCw2Vi8BrV9nEuh3M7u2li
pzaic9A7/zlVt7lN+70CGEvRxS0UNcgbXBQuxIkm/TGnJTAd6Qmy8TNrm54p
3jsnp6XQqmpxdwnHl5ihNsMJ1m6uQhodoKbQYM5h+mxazgABwCpyEALh+Z/T
0gaVx94d4QiVFCQODB8j3ex0gouWugV8W9eFGHn+eSxVzmgCntPOIDE5fY47
7riAXuAKpYTyYdBaDsjBH//cHTEikPlLE/4ftESQbIRy8I72EvvKeQQ6Fgj3
HouAU5QnUxxBqZewnvDG02ZaIkYpxO7e8/5971v/4Q/fs2jRIg7/nHXppRvy
ErLnWbP7SjVlwYIFGaXY7DAzwC9ZpxBgWxL9rEB4FOMtHxbahsGQY4J73e9k
E7RH/4Y2g2ODYOuHoN/0BuvmZS0/r0EiNJU1gbNdQjT9bQs/N1o0Hg1GB1ly
PWksVTJWxeOTRspF85PMAGDapDOD3gOzg9vzNwA+R+ZNjslf7HQkfFYnh38G
jOjUdNq2bRc88cSv3Xvv64nG53jn2uVJYdgab0LUS1HTT89vlmFCoRF3yJ4L
Zftg9d0fmcLtYPwTHzo3b+pHkcdk1prXkvnaJuiHYCOYmZfYZeW+3q8pPiGT
jzXFxX5YTeFh70e6zKo+NHcZBpiBtbNpm29mCz7tT/t7ImGjbrgl5ki1G685
+YnNS7+95YInNp8f3O6Hb8oCuZ1SNcxoWgT7si881PI9aaFPnsnx/kyf71l+
IVf/QRmUX9Sy7soTBMj8Qv5sR/dNUibI5xOfvzMzYf7mBYfzvZdDOHPycBMo
qBO5tfmBS5FgpJdryf5mMTOHOo2XfgRTauPVKSYMTA77Od2KYJUhucALZAGy
Iw8BchRrZznGXQ4wzolZfC2Llhv+LuDHCphVO8fwFgJmFmgM81Jy4PzXKrSZ
Qw89dOPGczdvXlJu9rqdKgwcrvu+KITbx5u9+fff8JnfudAeNOjoWlkEsyb2
Gafgeok3YmUUdCdtR/PNag4t7NdU7svJxu8qapISJl+uB6Enx3qiPTgPL+0S
pHL+40tgL/M8z+myoPKyluUl1BR0RFmpvEUWfZeusD6gK4Bt8eLF6CIUQvg/
8+1UWOvDX/vzv/7WF++4cl7LUwkZlu5KecINMM9ak+BkTl39ULsktQGhQzzK
zStO3bbqDDgQygJr4WeIHT4H/PLhLe984zdX/P5DH/9d6BrlO5cj0Q+t6ep8
SCDlntVnVTRf2i880x3lvf4vORo4uTaAdCxLysYEZI4Ekq5DbillyP06gRox
v8UCmtPSexVVu4rNF+QlnHwMpYoM9VxYDeCoTk7LczDeC/+woWu7pGJdGc5s
rhQZlLQw50LyKUcffXTu5dhjj6VOE0tHJZTepaAytEiPsnpyVsbPlBzNPcsC
2iXDwn7J5yeccEJGWjqnTKF+vqpUgu5SmplQNB3ICotwANNGGK/glyke3W+f
su13TqUDactj/VUnblp+ytZrT9+y8jTmKnNb2EhaIiDFT9u8YUqsmGtX99ss
OmJ/jqq5mo2wX0vMynqd6HQgOfMrqiV3MdTSmM5oCT6GWzAOP0Nt7rApTBS5
FzI4GcCZfNBvzO36ig9h2mI08+k5tfdxaZvVZIT9+0wO9n2nwQyg+6AMys9F
Adp/8OBFu++/8Kfdlhel7AtuzwR45c13Ba5nioPbzfzzWuIMSCbT8tAerntL
2Kymr+5Dk/CMJttujYASOZBrl7ZED8Z7iZYKNY21LKVThMlN5+VVCIEzvBpm
L15LlFJLK8rlaEtmPa/LVjnS1BR5ua2kWiX8MAsx+Ie3fEBLsjnWSyDO3gGJ
b/ztC277g/9jy5alwe1F4J/VlJbdaYV6zWny2sjY/a3nXEt8K7cSrMvPH9ye
F6yoDaNNt9ODEOwJ3cl9WbwF7v00rCRTir9UQiJFjS4fOxRd6N1WuBDXcvzC
NuRTAMgKHK7wPZZRX7ISM4cnvBywoDubsQgbafzK2zdd84X1OM9wuxz3QWJ3
rr3mb/7b9qnXf93+hS9+fL+m614SfPCkezmgpTqFsWFFQCVXmdVp5ngKhivj
Tt/yDAeTBJxAwsUkKW1wgYr9W8ulMyoKt1e4qwBnkKy2S9CEAh1jGuRCNr80
IJfgBxZ6eWBLOepecmmK8fz8nmAuDbTnLIYJGkZhaZUwAYDwChZWCYaSDRGf
pNgLyCPwaFI55Maq9f6AloZAQHHRbCoXavUeyZRA4tQDiNr9YX6mKtsQgpdd
Ll0tx2tMuQf++Nwdn3xdicMYvVooEVjazwwnK3raaaedcsopaUZ6Zvv2i3bs
eANSnLCC8847T0JhDfYjZQbSAgrOd4/6hMFVTP7cGg0ohCjdhUUmCDdnpTEo
VSax4HaJxgJ3a66zQ8SeEgRt10CctYJtzjorQuNYUzivKaXm5KEOwcL5/CQ4
LYRcJDwyXTM6zGlzWtq44t0pfT82X7rNKbR2yv+slaHm9OYF4uSZtgCNPD2n
9j6SW4b2RpvZK0rfd87MALoPyqD87Jfg9ilNqo3n5c1Puy0vSnkW3C5qPlN3
kGdwe1HB7cOKTipkO9R4MkNtalUgIrwai0Vtts5syYbMpXNavsvJLjeTw4qx
iSpTnmf0ztGmwZIL8WMXyYERAV/xms5rmbWLP1/Bp7zTQ02zNyWLviXJXfAa
lZoK0IhLDFI6GBqc17LtpNp0YKB72vOZ37nw0ZXv/Oby38symnbK/TrRsqgo
1XWzmv4YHymPN5Awp0kW4yfUmmj/3YNIzbfe9rFgVJeA4eFPp3NXcmx6E6ye
p+zba+/YHAw8t6WF0qTaxYYQxOpOtKBRUQxQH6U7eA+a4npFhIBhdBf06AEh
WoArfI8HtoyZIuMqmBHkm+hicilVpj1p8IovbkTDALrKyR/c/tWdH87r2//1
nttu/wTIxI18+eWb1qyZklWEbLWQ3oiHK7jP0q/x9FUmm0o2M2246fJpIT+w
rYTi1bsjFpljmCdpKtRnlwcoUg+6L3Cb4sdi/yi2yUEtxU+F96a2wMsM3dI5
xzyx9QAy0WMR6ZD6EYeIZGpVCePgOCHeeDrgegkT8fAzBuc0rVE4nHrMfk0F
tIRx8GpcCPSVklXLJUUSU2yIshfyRqArfntFQIgzVSc9FpwZTvuUJ7ac/9SD
Fz35wLLcuARMCPCUJ3OYMNX8q+YcsHDhwmXLlh1//PHB9gHtDz74f+YYexAn
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
AAAAAAAAAAAAAAAAAAAAAAAAANrwXxg0zQ8=
    "], {{0, 983}, {1000, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSize->Magnification[0.5],
  ImageSizeRaw->{1000, 983},
  PlotRange->{{0, 1000}, {0, 983}}]],
 ExpressionUUID -> "b502b1e3-c005-4f94-88a0-3a009af6929e"]], "Text",
 ExpressionUUID -> "7dc95cd6-f322-4707-847e-2dc63adf4b1a"],

Cell["The image was generated using the following code:", "Text",
 ExpressionUUID -> "46ee495f-3769-4ab8-b8c2-fd55fee97b1a"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"lg", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", 
      "\"\<CondensedMatterCollaborations2005\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lg", "=", 
   RowBox[{"IndexGraph", "@", 
    RowBox[{"Subgraph", "[", 
     RowBox[{"lg", ",", 
      RowBox[{"First", "@", 
       RowBox[{"ConnectedComponents", "[", "lg", "]"}]}]}], "]"}]}]}], 
  ";"}], "\n", 
 RowBox[{"c", "=", 
  RowBox[{"IGCommunitiesMultilevel", "[", "lg", "]"}]}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"pts", "=", 
    RowBox[{"GraphEmbedding", "@", 
     RowBox[{"IGLayoutDrL", "[", "lg", "]"}]}]}], ";"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{"this", " ", "takes", " ", "a", " ", "while"}], " ", 
   "*)"}]}], "\n", 
 RowBox[{"figure", "=", 
  RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GraphicsComplex", "[", 
     RowBox[{"pts", ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"White", ",", 
          RowBox[{"AbsoluteThickness", "[", "0.3", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.05", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Line", "[", 
           RowBox[{"List", "@@@", 
            RowBox[{"EdgeList", "[", "lg", "]"}]}], "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"AbsolutePointSize", "[", "2", "]"}], ",", 
          RowBox[{"Opacity", "[", "0.7", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"MapIndexed", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{
                RowBox[{"ColorData", "[", "45", "]"}], "@", 
                RowBox[{"First", "[", "#2", "]"}]}], ",", 
               RowBox[{"Point", "[", "#1", "]"}]}], "}"}], "&"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"c", "[", "\"\<Communities\>\"", "]"}]}], 
           "\[IndentingNewLine]", "]"}]}], "}"}]}], "\[IndentingNewLine]", 
       "}"}]}], "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Background", "\[Rule]", "Black"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 Evaluatable->False,
 ExpressionUUID -> "d180e964-ed48-4ab5-96ab-f0920c460666"],

Cell["\<\
\[ShiftKey]-\[EnterKey] evaluation is disabled in the cell above to avoid \
running it accidentally. Running the code takes about 2-3 minutes on a modern \
computer. Copy the code to a new cell to try it.\
\>", "Text",
 ExpressionUUID -> "54d6d959-6329-47d4-b030-576c38150a06"]
}, Closed]],

Cell[CellGroupData[{

Cell["Gallery", "Subsection",
 ExpressionUUID -> "1b1014e5-de61-4329-b984-f7481153f915"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"RandomGraph", "[", 
    RowBox[{"BarabasiAlbertGraphDistribution", "[", 
     RowBox[{"30", ",", "1"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"layouts", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"#", "[", "g", "]"}], ",", 
       RowBox[{"PlotLabel", "\[Rule]", "#"}]}], "]"}], "&"}], "/@", 
    RowBox[{"{", 
     RowBox[{
     "IGLayoutCircle", ",", "IGLayoutDavidsonHarel", ",", "IGLayoutDrL", ",", 
      "IGLayoutDrL3D", ",", "IGLayoutFruchtermanReingold", ",", 
      "IGLayoutFruchtermanReingold3D", ",", "IGLayoutGEM", ",", 
      "IGLayoutGraphOpt", ",", "IGLayoutKamadaKawai", ",", 
      "IGLayoutKamadaKawai3D", ",", "IGLayoutRandom", ",", 
      "IGLayoutReingoldTilford", ",", "IGLayoutReingoldTilfordCircular", ",", 
      "IGLayoutSphere", ",", "IGLayoutBipartite"}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Grid", "@", 
  RowBox[{"Partition", "[", 
   RowBox[{"layouts", ",", "4", ",", "4", ",", 
    RowBox[{"{", 
     RowBox[{"1", ",", "1"}], "}"}], ",", "\"\<\>\""}], "]"}]}]}], "Input",
 ExpressionUUID -> "4e70cc31-6a3d-4679-a3da-196bc2735f76"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Community detection", "Section",
 ExpressionUUID -> "936f125f-91e1-47b6-8bb4-9f67e58f1be6"],

Cell["The following functions are available:", "Text",
 ExpressionUUID -> "24ba5fa4-dd05-4bf4-abad-08e33fe7982f"],

Cell[BoxData[
 RowBox[{"?", "IGCommunities*"}]], "Input",
 ExpressionUUID -> "90a268bf-a668-4304-85c9-c1e72402ee36"],

Cell[CellGroupData[{

Cell["Concepts", "Subsection",
 ExpressionUUID -> "8273bb68-465b-4de9-8a15-9879c54aa588"],

Cell[TextData[{
 StyleBox["Modularity",
  FontSlant->"Italic"],
 " is defined for a given partitioning of a graph\[CloseCurlyQuote]s vertices \
into ",
 StyleBox["communities",
  FontSlant->"Italic"],
 ". It is defined as"
}], "Text",
 ExpressionUUID -> "8205e9f5-dd64-4729-98e3-3be19d524013"],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"Q", "=", 
    RowBox[{
     FractionBox["1", 
      RowBox[{"2", "m"}]], 
     RowBox[{
      UnderscriptBox["\[Sum]", 
       RowBox[{"i", ",", "j"}]], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         SubscriptBox["A", 
          RowBox[{"i", "\[InvisibleComma]", "j"}]], "-", 
         FractionBox[
          RowBox[{
           SubscriptBox["k", "i"], 
           SubscriptBox["k", "j"]}], 
          RowBox[{"2", "m"}]]}], ")"}], 
       SubscriptBox["\[Delta]", 
        RowBox[{
         SubscriptBox["c", "i"], "\[InvisibleComma]", 
         SubscriptBox["c", "j"]}]]}]}]}]}], ","}], 
  TraditionalForm]], "DisplayFormula",
 ExpressionUUID -> "c3533a7c-22e1-43d5-971d-432252da0e71"],

Cell[TextData[{
 "where ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],
  ExpressionUUID -> "9917efbb-a938-4d24-a92b-2101d6e4a738"],
 " is the number of edges, ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  ExpressionUUID -> "22737ecb-8bd6-4216-915f-4c8b3b1fbf3f"],
 " is the adjacency matrix, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "i"], TraditionalForm]],
  ExpressionUUID -> "f62de5c4-f51c-4d11-8552-448ed55df861"],
 " is the degree of node ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],
  ExpressionUUID -> "73fa38d5-e199-472f-a5d4-c47df36378fd"],
 ", and ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["c", "i"], TraditionalForm]],
  ExpressionUUID -> "612454cc-7bed-4100-afdf-c60dba8fea20"],
 " is the community that node ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],
  ExpressionUUID -> "81f0ca61-fb2f-4bbc-ade8-7bbbbfb6b0c4"],
 " belongs to. ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", 
    RowBox[{"i", "\[InvisibleComma]", "j"}]], TraditionalForm]],
  ExpressionUUID -> "ae5e7230-ad2d-4572-ab9e-455c3c4b5f5c"],
 " is the Kronecker ",
 Cell[BoxData[
  FormBox["\[Delta]", TraditionalForm]],
  ExpressionUUID -> "a37fa304-4613-4fe7-9109-fe99f43805b7"],
 " symbol. For weighted graphs, ",
 Cell[BoxData[
  FormBox["A", TraditionalForm]],
  ExpressionUUID -> "267e3d0e-dc4b-4291-8d20-8c775f556a69"],
 " is the weighted adjacency matrix, ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["k", "i"], TraditionalForm]],
  ExpressionUUID -> "53e1ae39-7e2a-4235-89d3-ea2a79b09655"],
 " are the sum of weights of edges incident on node ",
 Cell[BoxData[
  FormBox["i", TraditionalForm]],
  ExpressionUUID -> "28732075-7fa6-4356-a838-47457ec273fc"],
 ", and ",
 Cell[BoxData[
  FormBox["m", TraditionalForm]],
  ExpressionUUID -> "3ba65b6d-518d-4ee2-8693-a9b6437fd2b5"],
 " is the sum of all weights."
}], "Text",
 ExpressionUUID -> "8e214ee5-9e3c-4d9d-9e18-cb8549aa3b66"],

Cell[TextData[{
 "Modularity characterizes the tendency of vertices to connect more within \
their own group than with other groups. For a given partitioning, it can be \
computed using ",
 Cell[BoxData["IGModularity"],
  ExpressionUUID -> "0e1737c0-c6de-4542-bcfe-1a6de5696de6"],
 ". Community detection functions find a partitioning of the graph which \
results in high modularity."
}], "Text",
 ExpressionUUID -> "c11fee25-659a-49d2-9ede-c257fdd6356c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Basic usage and utility functions", "Subsection",
 ExpressionUUID -> "901cc908-6911-43e0-99fb-b242f9c4ea9c"],

Cell[TextData[{
 "Community detection functions return ",
 Cell[BoxData["IGClusterData"],
  ExpressionUUID -> "0c92f110-96b9-4563-b0c9-a8d71c6e1a1c"],
 " objects."
}], "Text",
 ExpressionUUID -> "37dea2e9-8e6d-488d-85d5-6cfdc0e14889"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<FamilyGathering\>\""}], "}"}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "5dd9befc-53a1-436e-af4e-58d3b08233bc"],

Cell[BoxData[
 RowBox[{"cl", "=", 
  RowBox[{"IGCommunitiesGreedy", "[", "g", "]"}]}]], "Input",
 ExpressionUUID -> "1c8262de-c098-4d73-b626-3475223f1635"],

Cell[TextData[{
 "The data available in the object can be queries using ",
 Cell[BoxData[
  RowBox[{
   RowBox[{"IGClusterData", "[", "\[Ellipsis]", "]"}], "[", 
   "\"\<Properties\>\"", "]"}]],
  ExpressionUUID -> "1b859d6e-ace3-4a15-a8b0-b18e8cc142ce"],
 ". See the Examples section below for more information."
}], "Text",
 ExpressionUUID -> "152e33a9-caa6-4498-a657-2db2d7c817a5"],

Cell[BoxData[
 RowBox[{"cl", "[", "\"\<Properties\>\"", "]"}]], "Input",
 ExpressionUUID -> "a35d19fc-a799-47c8-b845-81a9304b1b74"],

Cell[BoxData[
 RowBox[{"cl", "[", "\"\<Communities\>\"", "]"}]], "Input",
 ExpressionUUID -> "6357dbd4-14fc-40d2-966b-df70f0a94782"],

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", 
  RowBox[{"g", ",", 
   RowBox[{"cl", "[", "\"\<Communities\>\"", "]"}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]], "Input",
 ExpressionUUID -> "8092978c-876d-450a-8c21-8710814c8ae2"],

Cell[BoxData[
 RowBox[{"IGModularity", "[", 
  RowBox[{"g", ",", "cl"}], "]"}]], "Input",
 ExpressionUUID -> "923c4c17-7729-408c-ad88-83cc59224de8"],

Cell[CellGroupData[{

Cell["IGClusterData", "Subsubsection",
 ExpressionUUID -> "c97e25c5-8eff-4387-ab26-d08c2923c8c5"],

Cell[BoxData[
 RowBox[{"?", "IGClusterData"}]], "Input",
 ExpressionUUID -> "cc384d24-6f92-4f71-8247-5b7871a5f4f1"],

Cell[TextData[{
 Cell[BoxData["IGClusterData"],
  ExpressionUUID -> "96fd34b7-4054-4baf-aeda-d267415e85ce"],
 " represents a partitioning of a graph into communities. This object cannot \
be created directly. It is returned by community detection functions. See the \
Examples section below for more information."
}], "Text",
 ExpressionUUID -> "eead296e-dbd4-44ac-864f-dd81266c4014"],

Cell[BoxData[
 RowBox[{"cl", "=", 
  RowBox[{"IGCommunitiesLabelPropagation", "@", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<FamilyGathering\>\""}], "}"}], 
    "]"}]}]}]], "Input",
 ExpressionUUID -> "b3c72c3a-8e31-4668-b734-213b7ad7e206"],

Cell["Query the available properties.", "Text",
 ExpressionUUID -> "73bf8735-1da3-4eb7-bf40-582aa41b329b"],

Cell[BoxData[
 RowBox[{"cl", "[", "\"\<Properties\>\"", "]"}]], "Input",
 ExpressionUUID -> "9a352754-891d-4482-8a34-8e67488346a2"],

Cell["Retrieve the communities.", "Text",
 ExpressionUUID -> "0508c96b-1062-485a-b252-16fc7a3c99db"],

Cell[BoxData[
 RowBox[{"cl", "[", "\"\<Communities\>\"", "]"}]], "Input",
 ExpressionUUID -> "f73673f4-38fc-437e-b5fa-b0b94e1af63b"],

Cell[TextData[{
 "When the ",
 Cell[BoxData["\"\<Modularity\>\""],
  ExpressionUUID -> "4e95b1f6-a32f-4dc6-973a-7d31d20fa631"],
 " property is available, ",
 Cell[BoxData[
  RowBox[{"Max", "[", 
   RowBox[{"cl", "[", "\"\<Modularity\>\"", "]"}], "]"}]],
  ExpressionUUID -> "cfe40ab6-a485-4d53-9801-5dc37f43df1a"],
 " gives the modularity of the current partitioning."
}], "Text",
 ExpressionUUID -> "3f3ee0ff-51fd-444b-b9a0-d8a6e2e1a984"],

Cell[BoxData[
 RowBox[{"Max", "[", 
  RowBox[{"cl", "[", "\"\<Modularity\>\"", "]"}], "]"}]], "Input",
 ExpressionUUID -> "7effcea6-e609-4e51-9a41-263a61f76192"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGModularity", "Subsubsection",
 ExpressionUUID -> "5d08b147-d4e7-4bf1-9843-dbf5516e8761"],

Cell[BoxData[
 RowBox[{"?", "IGModularity"}]], "Input",
 ExpressionUUID -> "3f7514eb-2c6d-48c3-b0fe-3987fe1c043c"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGModularity", "[", 
   RowBox[{"graph", ",", "communities"}], "]"}]],
  ExpressionUUID -> "fa08bc32-48e6-475c-9ce3-309fdb9a98f3"],
 " is equivalent to ",
 Cell[BoxData[
  RowBox[{"GraphAssortativity", "[", 
   RowBox[{"graph", ",", "communities", ",", 
    RowBox[{"\"\<Normalized\>\"", "\[Rule]", "False"}]}], "]"}]],
  ExpressionUUID -> "5938fc9e-e6bc-4cbf-905f-0c56fa5f9a98"],
 "."
}], "Text",
 ExpressionUUID -> "d12a502c-09a3-4f88-874e-411636bfbd62"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGCompareCommunities", "Subsubsection",
 ExpressionUUID -> "454e7336-20e4-4e70-8a3c-b38639528b25"],

Cell[BoxData[
 RowBox[{"?", "IGCompareCommunities"}]], "Input",
 ExpressionUUID -> "1520b29f-9278-4f1b-865c-8d598f097d8d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<FamilyGathering\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "a7274fd0-d3b7-4535-89af-142e888a8bd1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"cl1", ",", "cl2"}], "}"}], "=", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"IGCommunitiesGreedy", "[", "g", "]"}], ",", 
    RowBox[{"IGCommunitiesEdgeBetweenness", "[", "g", "]"}]}], 
   "}"}]}]], "Input",
 ExpressionUUID -> "eda1c826-6862-451a-9bbb-abaa9ffa87dd"],

Cell[BoxData[
 RowBox[{"IGCompareCommunities", "[", 
  RowBox[{"cl1", ",", "cl2"}], "]"}]], "Input",
 ExpressionUUID -> "e26fb495-accc-42cb-ae57-eeed10722a0a"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Community detection methods", "Subsection",
 ExpressionUUID -> "c1d995c9-e58f-495a-badc-3fbfe1829747"],

Cell[CellGroupData[{

Cell["IGCommunitiesEdgeBetweenness", "Subsubsection",
 ExpressionUUID -> "8f10ab14-3e69-46cb-b7d7-a136b2fba8b5"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesEdgeBetweenness"}]], "Input",
 ExpressionUUID -> "756fc83f-ff31-4936-b321-f259ac244d3c"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGCommunitiesEdgeBetweenness", "[", "]"}]],
  ExpressionUUID -> "c2735897-646a-49ca-8b16-bc718dbbd563"],
 " implements the Girvan\[Dash]Newman algorithm."
}], "Text",
 ExpressionUUID -> "8c51a20c-de11-41c9-8369-bbf9a7ab6441"],

Cell["\<\
Weighted graphs are supported. Weights are treated as \
\[OpenCurlyDoubleQuote]distances\[CloseCurlyDoubleQuote], i.e. a large weight \
represents a weak connection.\
\>", "Text",
 ExpressionUUID -> "f2cc08ac-b1bd-43f7-b7eb-2841ccd9eb8c"],

Cell["Available option values:", "Text",
 ExpressionUUID -> "4178550c-d8a0-4db2-b4dc-861f3631e085"],

Cell[TextData[{
 Cell[BoxData["\"\<ClusterCount\>\""],
  ExpressionUUID -> "8040066d-c28f-4da6-afb3-6338b62c1676"],
 ", the number of communities to return. Default: ",
 Cell[BoxData["Automatic"],
  ExpressionUUID -> "9ad9bf8e-2f09-495e-8da1-29994dd460d9"],
 "."
}], "Item",
 ExpressionUUID -> "b4376456-17b1-4004-acd1-c7a46b1c48b3"],

Cell[TextData[{
 "Reference:  M. Girvan and M. E. J. Newman: Community structure in social \
and biological networks, ",
 StyleBox["PNAS",
  FontSlant->"Italic"],
 " 99, 7821-7826 (2002)."
}], "Text",
 ExpressionUUID -> "70f434ff-8326-4c12-a743-209385f07ab9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesFluid", "Subsubsection",
 ExpressionUUID -> "e4c37e74-cb01-4634-a4c7-8abecfe9c5af"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesFluid"}]], "Input",
 ExpressionUUID -> "bb1e78da-c299-491e-ac93-a10fea22873a"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGCommunitiesFluid", "[", "]"}]],
  ExpressionUUID -> "c96a24c6-55a5-4096-bdbf-d9d84549ea9a"],
 " implements the fluid communities algorithm."
}], "Text",
 ExpressionUUID -> "87d2126d-3a35-4b11-b6d8-c488118b79bd"],

Cell["\<\
Reference: Ferran Par\[EAcute]s, Dario Garcia-Gasulla, Armand Vilalta, \
Jonatan Moreno, Eduard Ayguad\[EAcute], Jes\[UAcute]s Labarta, Ulises Cort\
\[EAcute]s, Toyotaro Suzumura: Fluid Communities: A Competitive, Scalable and \
Diverse Community Detection Algorithm, https://arxiv.org/abs/1703.09307\
\>", "Text",
 ExpressionUUID -> "ffb39f02-c1cc-4e17-84c1-8499350b5053"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesGreedy", "Subsubsection",
 ExpressionUUID -> "6ddd00fd-77e9-415b-8962-bab06873a800"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesGreedy"}]], "Input",
 ExpressionUUID -> "b990fb22-52e9-4cba-bcc5-469e0606c9d3"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGCommunitiesGreedy", "[", "]"}]],
  ExpressionUUID -> "501591e4-e6a2-4842-a2ed-5ab310729471"],
 " implements greedy optimization of modularity."
}], "Text",
 ExpressionUUID -> "43433eac-4ac7-4568-8207-67bc57f2f35a"],

Cell["Weighted graphs are supported.", "Text",
 ExpressionUUID -> "b802fb35-498e-4fda-b36c-1ccec37c5ef0"],

Cell["\<\
Reference: A Clauset, MEJ Newman, C Moore: Finding community structure in \
very large networks, http://www.arxiv.org/abs/cond-mat/0408187\
\>", "Text",
 ExpressionUUID -> "fc423af2-9b63-48ef-a2f5-97c4690554ab"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesInfoMAP", "Subsubsection",
 ExpressionUUID -> "b9d31111-d569-4cb1-8ce1-1b07cde30dad"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesInfoMAP"}]], "Input",
 ExpressionUUID -> "96eb3813-df08-48e3-9430-5cef77385c37"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGCommunitiesInfoMAP", "[", "]"}]],
  ExpressionUUID -> "f2169028-23d3-42eb-a654-5b1876a97fe7"],
 " implements the InfoMAP algorithm."
}], "Text",
 ExpressionUUID -> "7a200817-ca99-4a9e-a08d-7d17c5c1288f"],

Cell["It supports both edge weights and vertex weights.", "Text",
 ExpressionUUID -> "9e001bf2-cdf0-4a5a-84dd-33dd3591b8b3"],

Cell["The default number of trials is 10.", "Text",
 ExpressionUUID -> "2ad31c05-38d1-4c72-822e-41d307997f5b"],

Cell[TextData[{
 "References:\nM. Rosvall and C. T. Bergstrom, Maps of information flow \
reveal community structure in complex networks, ",
 StyleBox["PNAS",
  FontSlant->"Italic"],
 " 105, 1118 (2008)\nM. Rosvall, D. Axelsson, and C. T. Bergstrom, The map \
equation, ",
 StyleBox["Eur. Phys. J. Special Topics",
  FontSlant->"Italic"],
 " 178, 13 (2009)"
}], "Text",
 ExpressionUUID -> "a3247e92-6e99-46d7-a501-aca1f4a385e6"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesLabelPropagation", "Subsubsection",
 ExpressionUUID -> "57acf5a8-02ec-4cc5-93f2-ed8203c019d9"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesLabelPropagation"}]], "Input",
 ExpressionUUID -> "ce29392e-6d57-4e68-9320-0f6fb408e3df"],

Cell["Weighted graphs are supported.", "Text",
 ExpressionUUID -> "9480008c-d945-4b67-a9c1-d640bca7b9da"],

Cell[TextData[{
 "Reference:  Raghavan, U.N. and Albert, R. and Kumara, S.: Near linear time \
algorithm to detect community structures in large-scale networks. ",
 StyleBox["Phys. Rev. E",
  FontSlant->"Italic"],
 " 76, 036106. (2007)."
}], "Text",
 ExpressionUUID -> "06e5dea3-0750-4d78-af2a-7a1fa13e55d9"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesLeadingEigenvector", "Subsubsection",
 ExpressionUUID -> "d928de66-327d-44a1-8d70-3d2539ef9e43"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesLeadingEigenvector"}]], "Input",
 ExpressionUUID -> "fccdf015-64be-4503-8745-b4bd4173f20d"],

Cell["Weighted graphs are supported.", "Text",
 ExpressionUUID -> "86fab2c4-fae9-4451-8c56-adb3b7d91192"],

Cell["Available option values:", "Text",
 ExpressionUUID -> "77e1ca42-9f1f-40bb-89dc-347698c23151"],

Cell[TextData[{
 Cell[BoxData["\"\<ClusterCount\>\""],
  ExpressionUUID -> "25ddd142-8e19-4f7b-ab66-2e6643fe45ec"],
 ", the number of communities to return. May return fewer communities than \
requested. Default: ",
 Cell[BoxData["Automatic"],
  ExpressionUUID -> "f09d9bdb-902d-472a-9fe3-f66fadd3e13f"],
 "."
}], "Item",
 ExpressionUUID -> "2b65218d-1359-4b6b-89c6-95c7b91030fa"],

Cell[TextData[{
 "Reference: MEJ Newman: Finding community structure using the eigenvectors \
of matrices, ",
 StyleBox["Phys. Rev. E",
  FontSlant->"Italic"],
 " 74:036104 (2006)."
}], "Text",
 ExpressionUUID -> "2e1c97d5-aeb4-4e7c-8ffc-77adf48e48eb"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesMultilevel", "Subsubsection",
 ExpressionUUID -> "e3c18900-4f57-4063-8b5a-6b179b6e6dd9"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesMultilevel"}]], "Input",
 ExpressionUUID -> "11e447aa-59e1-47fb-9294-0d76053cc554"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGCommunitiesMultilevel", "[", "]"}]],
  ExpressionUUID -> "181b4efb-7440-4305-9c7b-a5e8d9b83450"],
 " implements the Louvain community detection method."
}], "Text",
 ExpressionUUID -> "13f27153-452a-471e-abab-7a9d348975e6"],

Cell["Weighted graphs are supported.", "Text",
 ExpressionUUID -> "93673697-8300-463f-a446-08928f0297f1"],

Cell[TextData[{
 "Reference: VD Blondel, J-L Guillaume, R Lambiotte and E Lefebvre: Fast \
unfolding of community hierarchies in large networks, ",
 StyleBox["J. Stat. Mech.",
  FontSlant->"Italic"],
 " P10008 (2008)"
}], "Text",
 ExpressionUUID -> "8a9b05c6-3b1c-40b5-a2d2-22ec44539d42"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesOptimalModularity", "Subsubsection",
 ExpressionUUID -> "3d818605-8547-4c1d-9319-7b2a46d00cc4"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesOptimalModularity"}]], "Input",
 ExpressionUUID -> "6a3e9351-306c-4480-9809-968134385099"],

Cell["\<\
Finds the clustering that maximizes modularity exactly. This algorithm is \
very slow.\
\>", "Text",
 ExpressionUUID -> "08eccb30-2c1f-487b-a14b-996f63ea7b48"],

Cell["Weighted graphs are supported.", "Text",
 ExpressionUUID -> "f91b5e0d-8345-46b9-9652-505d978931ef"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesSpinGlass", "Subsubsection",
 ExpressionUUID -> "965f4d02-cb40-4e82-b0f8-24de10506482"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesSpinGlass"}]], "Input",
 ExpressionUUID -> "04197db3-af51-49da-a53f-73012c90223f"],

Cell["Weighted graphs are supported.", "Text",
 ExpressionUUID -> "8fb807d8-dd0c-4a1e-9b50-96ecd6d03856"],

Cell[TextData[{
 "Option values for ",
 Cell[BoxData["\"\<Method\>\""],
  ExpressionUUID -> "769c1802-69ca-450c-96e7-9ac59e55cb4c"],
 " are:"
}], "Text",
 ExpressionUUID -> "00607b18-d782-4fcf-be7a-9aa3963b4678"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<Original\>\""],
  ExpressionUUID -> "d8e0a879-d922-4f7e-92d4-28398a534e9c"],
 " only supports positive edge weights, but doesn\[CloseCurlyQuote]t check \
that the supplied weights are actually positive."
}], "Item",
 ExpressionUUID -> "db0f650c-376c-4bbf-b7f8-0d05290b491f"],

Cell[TextData[{
 Cell[BoxData["\"\<Negative\>\""],
  ExpressionUUID -> "3dc5da04-0f05-4b2c-9b9f-03ab47b67eb7"],
 " supports negative weights as well."
}], "Item",
 ExpressionUUID -> "c08d7a0a-6121-4ec8-9c36-8441651ef346"],

Cell[TextData[{
 Cell[BoxData["Automatic"],
  ExpressionUUID -> "e9188a01-c987-405c-b3b3-c0c3a088a926"],
 " selects ",
 Cell[BoxData["\"\<Negative\>\""],
  ExpressionUUID -> "28968daf-f701-4553-b220-d702c5ef0fec"],
 " if negative weights are presents and ",
 Cell[BoxData["\"\<Original\>\""],
  ExpressionUUID -> "07076f61-df2f-4cdb-9942-e422691e6f4f"],
 " otherwise."
}], "Item",
 ExpressionUUID -> "323e99e6-9c59-4d30-acb8-945d19381c97"]
}, Open  ]],

Cell[TextData[{
 "Option values for ",
 Cell[BoxData["\"\<UpdateRule\>\""],
  ExpressionUUID -> "aabcc9b3-59c8-426b-a912-c083165fa978"],
 " are: ",
 Cell[BoxData["\"\<Simple\>\""],
  ExpressionUUID -> "ef4246b0-defc-4422-815a-e3047d7c4e1a"],
 ", ",
 Cell[BoxData["\"\<Configuration\>\""],
  ExpressionUUID -> "5c169961-2569-4097-ba0c-266a5548bf0c"]
}], "Text",
 ExpressionUUID -> "b9d5d68d-a911-479f-9255-e306d472247c"],

Cell["References:", "Text",
 ExpressionUUID -> "874a7ea3-2b38-4b0d-a849-fda1f0656207"],

Cell[TextData[{
 "For ",
 Cell[BoxData[
  RowBox[{"Method", "\[Rule]", "\"\<Original\>"}]],
  ExpressionUUID -> "336770f9-72cd-4cfd-b06c-db664046244c"],
 ", see Joerg Reichardt and Stefan Bornholdt: Statistical Mechanics of \
Community Detection, http://arxiv.org/abs/cond-mat/0603718 "
}], "Text",
 ExpressionUUID -> "5afdd169-7b86-4890-a1ce-918c1587b022"],

Cell[TextData[{
 "For ",
 Cell[BoxData[
  RowBox[{"Method", "\[Rule]", "\"\<Negative\>\""}]],
  ExpressionUUID -> "547d3949-d8a5-4fa0-87e2-5e14355b3931"],
 ", see ",
 "V.A. Traag and Jeroen Bruggeman: Community detection in networks with \
positive and negative links, http://arxiv.org/abs/0811.2329 "
}], "Text",
 ExpressionUUID -> "8a3d0057-7b10-4277-957d-6e73cc2a1b80"]
}, Open  ]],

Cell[CellGroupData[{

Cell["IGCommunitiesWalktrap", "Subsubsection",
 ExpressionUUID -> "ff5947b4-29cb-4348-b31e-7844e7939f01"],

Cell[BoxData[
 RowBox[{"?", "IGCommunitiesWalktrap"}]], "Input",
 ExpressionUUID -> "f7890e02-5830-4117-a4ae-f01ff55c5b0b"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGCommunitiesWalktrap", "[", "]"}]],
  ExpressionUUID -> "277a0f13-3a0e-48d7-a6c1-c86715c92b1c"],
 " finds communities using short random walks, exploiting the fact that \
random walks tend to stay within the same cluster."
}], "Text",
 ExpressionUUID -> "95981374-1d60-4b1f-b97d-d58d82f904b9"],

Cell["Weighted graphs are supported.", "Text",
 ExpressionUUID -> "5929d9a8-bb88-458d-b9e2-68b4a7b159ee"],

Cell["The default number of steps is 4.", "Text",
 ExpressionUUID -> "bf716760-8bde-4982-8a92-26924c1ab017"],

Cell["Available option values:", "Text",
 ExpressionUUID -> "61973d41-364d-4247-b8dc-fcb0fe0abc33"],

Cell[TextData[{
 Cell[BoxData["\"\<ClusterCount\>\""],
  ExpressionUUID -> "4a22a609-8995-49b1-91d7-b8b6b847eb45"],
 ", the number of communities to return. Default: ",
 Cell[BoxData["Automatic"],
  ExpressionUUID -> "4261f2f2-764d-44d0-b446-c24b6695ca51"],
 "."
}], "Item",
 ExpressionUUID -> "fb817a5a-d497-474c-8f05-7a060bba2899"],

Cell["\<\
Reference: Pascal Pons, Matthieu Latapy: Computing communities in large \
networks using random walks, http://arxiv.org/abs/physics/0512106\
\>", "Text",
 ExpressionUUID -> "4923a9b6-f1fc-4442-96f4-91e890967dc5"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Examples", "Subsection",
 ExpressionUUID -> "515205b7-d491-4194-b3aa-12b4cb4e81cd"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<LesMiserables\>\""}], "}"}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "b694fd83-7fdd-43b0-9157-6ccc455afae3"],

Cell[BoxData[
 RowBox[{"IGEdgeWeightedQ", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "6cd6a216-6a74-4689-a4e0-e74af107ecfa"],

Cell[TextData[{
 "Community detection functions return ",
 Cell[BoxData["IGClusterData"],
  ExpressionUUID -> "5252fd7f-b8b6-4822-af92-de07b0546cbe"],
 " objects."
}], "Text",
 ExpressionUUID -> "a9aa4dd5-49aa-4701-a71d-cd4aefa5d5b2"],

Cell[BoxData[{
 RowBox[{"cl1", "=", 
  RowBox[{"IGCommunitiesEdgeBetweenness", "[", 
   RowBox[{"g", ",", 
    RowBox[{"\"\<ClusterCount\>\"", "\[Rule]", "7"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"cl2", "=", 
  RowBox[{"IGCommunitiesWalktrap", "[", "g", "]"}]}]}], "Input",
 ExpressionUUID -> "09479461-16b1-46b2-93e6-f255edb8560b"],

Cell["Various properties of these objects can be queried:", "Text",
 ExpressionUUID -> "e4971cd4-4bc7-4112-b76a-8ad3d90fbee8"],

Cell[BoxData[
 RowBox[{"cl1", "[", "\"\<Communities\>\"", "]"}]], "Input",
 ExpressionUUID -> "ccde2c8f-a127-46ef-814b-e4ec94719657"],

Cell["Visualize the detected communities in two different ways:", "Text",
 ExpressionUUID -> "ac878135-a61e-446b-8af2-adee5806deea"],

Cell[BoxData[
 RowBox[{"CommunityGraphPlot", "[", 
  RowBox[{"g", ",", 
   RowBox[{"cl1", "[", "\"\<Communities\>\"", "]"}]}], "]"}]], "Input",
 ExpressionUUID -> "57d087de-1861-48a8-a7f9-3bcc3c48d82e"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Subgraph", "[", 
      RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", 
    RowBox[{"cl1", "[", "\"\<Communities\>\"", "]"}]}], ",", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<DehighlightGray\>\""}]}], 
  "]"}]], "Input",
 ExpressionUUID -> "46a38d2e-69d9-4a52-9239-953bd1f61bfa"],

Cell["\<\
The available properties depend on which algorithm was used for community \
detection. The following are always present:\
\>", "Text",
 ExpressionUUID -> "bfd8d7f6-d909-4564-9a3a-9b045d555c7f"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<Properties\>\""],
  ExpressionUUID -> "78cad1e9-2687-455a-9908-85e36a7943a9"],
 " returns all available properties."
}], "Item",
 ExpressionUUID -> "c74232c7-9ee7-42ff-87a5-a8921a741a2f"],

Cell[TextData[{
 Cell[BoxData["\"\<Algorithm\>\""],
  ExpressionUUID -> "ecf5bb7c-cf2e-4df4-9b88-7e15f496419d"],
 " returns the algorithm used for community detection."
}], "Item",
 ExpressionUUID -> "318b0bf9-1a1c-43ed-9e7a-6aac7f718d2b"],

Cell[TextData[{
 Cell[BoxData["\"\<Communities\>\""],
  ExpressionUUID -> "16463c67-f386-4cf4-a010-a156ec27f88b"],
 " returns the list of communities."
}], "Item",
 ExpressionUUID -> "65c5a0aa-807a-45cc-a558-521ce0c4c6b7"],

Cell[TextData[{
 Cell[BoxData["\"\<Elements\>\""],
  ExpressionUUID -> "a0924b13-83e4-47af-a014-18ab3d06ec86"],
 " returns the vertices of the graph."
}], "Item",
 ExpressionUUID -> "b72008c1-1c30-4b10-bacd-6a525c2bc261"],

Cell[TextData[{
 Cell[BoxData["\"\<ElementCount\>\""],
  ExpressionUUID -> "61aea0d7-d76a-4919-a4fb-8b1ca5270edd"],
 " returns the vertex count of the graph."
}], "Item",
 ExpressionUUID -> "e5e3f12e-0d0c-4cc3-846f-331fa1571b34"]
}, Open  ]],

Cell["These are present for hierarchical clustering methods:", "Text",
 ExpressionUUID -> "3ba7efa7-2c7a-4efe-891e-48dd1985b185"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<HierarchicalClusters\>\""],
  ExpressionUUID -> "4ce9a9a9-2fad-4fc9-b023-4a6475fde337"],
 " returns the clustering in a format compatible with the Hierarchical \
Clustering standard package. ",
 StyleBox["Note: ",
  FontWeight->"Bold"],
 "Isolated vertices may not be included."
}], "Item",
 ExpressionUUID -> "64e68152-b9ce-4790-a4dd-095812ac4ca6"],

Cell[TextData[{
 Cell[BoxData["\"\<Merges\>\""],
  ExpressionUUID -> "27cabc22-829c-4c65-9208-736aa458bff2"],
 " represents the hierarchical clustering as a sequence of element merges. \
Elements are represented by their integer indices, and higher indices are \
introduced for the subclusters formed by the merges. This format is similar \
to the one used by ",
 ButtonBox["MATLAB",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://matlink.org/"], None},
  ButtonNote->"http://matlink.org/"],
 " and many other tools. ",
 StyleBox["Note: ",
  FontWeight->"Bold"],
 "Isolated vertices may not be included."
}], "Item",
 ExpressionUUID -> "be19b04c-34ee-4850-a511-a209a2594ac9"],

Cell[TextData[{
 Cell[BoxData["\"\<Tree\>\""],
  ExpressionUUID -> "b1773b0b-1100-4748-b820-9e540f23161c"],
 " gives a binary tree representation of the merges. ",
 StyleBox["Note: ",
  FontWeight->"Bold"],
 "Isolated vertices may not be included."
}], "Item",
 ExpressionUUID -> "2666591b-b474-4480-9294-00e070d88d31"]
}, Open  ]],

Cell["\<\
Additionally, the following, and other, algorithm-specific properties may be \
present:\
\>", "Text",
 ExpressionUUID -> "4e72ee1b-162b-408e-96a5-2becbc220b77"],

Cell[TextData[{
 Cell[BoxData["\"\<Modularity\>\""],
  ExpressionUUID -> "5a85befd-ca11-4c83-a15a-e4523c5a576f"],
 " is a list of modularities for each step of the algorithm, or a \
single-element list containing the modularity corresponding to the returned \
clustering. What constitutes a step depends on the particular algorithm."
}], "Item",
 ExpressionUUID -> "43596b6a-7668-43e8-a994-66e4783ead9a"],

Cell[TextData[{
 "The ",
 Cell[BoxData["\"\<RemoveEdges\>\""],
  ExpressionUUID -> "3f2a6454-a29d-4835-b44b-d32fe23dc4e4"],
 " property is specific to the ",
 Cell[BoxData["\"\<EdgeBetweenness\>\""],
  ExpressionUUID -> "5e986507-d4b7-4fa3-8786-e033fc1c3554"],
 " method, and isn\[CloseCurlyQuote]t present for ",
 Cell[BoxData["\"\<Walktrap\>\""],
  ExpressionUUID -> "fa2f79f1-c84a-4da4-8aee-96a8e27f4560"],
 "."
}], "Text",
 ExpressionUUID -> "74754b83-d27a-46c1-a485-96caf392e7ef"],

Cell[BoxData[
 RowBox[{"cl1", "[", "\"\<Properties\>\"", "]"}]], "Input",
 ExpressionUUID -> "0b277d43-93de-4da6-a6c3-2444ae80f6e5"],

Cell[BoxData[
 RowBox[{"cl1", "[", "\"\<RemovedEdges\>\"", "]"}]], "Input",
 ExpressionUUID -> "676b6364-5f3c-4c1e-b775-cb245ab529e7"],

Cell[BoxData[
 RowBox[{"cl2", "[", "\"\<Properties\>\"", "]"}]], "Input",
 ExpressionUUID -> "228f6e99-04cd-4e57-b372-41fc17ca678b"],

Cell["Multiple properties may be retrieved at the same time.", "Text",
 ExpressionUUID -> "a2e0c640-8d78-46f3-9360-c4a02b8b15e7"],

Cell[BoxData[
 RowBox[{"cl2", "[", 
  RowBox[{"{", 
   RowBox[{"\"\<Algorithm\>\"", ",", "\"\<ElementCount\>\""}], "}"}], 
  "]"}]], "Input",
 ExpressionUUID -> "f17d2267-22bc-41a8-8554-e5ca7767bb08"],

Cell["Compare the two clusterings:", "Text",
 ExpressionUUID -> "a418a482-8158-4d8a-a727-0ddedb948d8e"],

Cell[BoxData[
 RowBox[{"IGCompareCommunities", "[", 
  RowBox[{"cl1", ",", "cl2"}], "]"}]], "Input",
 ExpressionUUID -> "39560326-e099-46c1-8f50-ca4975be87d5"],

Cell[TextData[{
 "Visualize the a hierarchical clustering using the ",
 ButtonBox["Hierarchical Clustering Package",
  BaseStyle->"Link",
  ButtonData->"paclet:HierarchicalClustering/tutorial/HierarchicalClustering"],
 "."
}], "Text",
 ExpressionUUID -> "b3d3ebb5-4d86-442a-a76c-899f38152aa1"],

Cell[BoxData[
 RowBox[{"<<", "HierarchicalClustering`"}]], "Input",
 ExpressionUUID -> "12bc6f38-5957-4136-b039-665592092905"],

Cell[BoxData[
 RowBox[{"DendrogramPlot", "[", 
  RowBox[{
   RowBox[{"cl1", "[", "\"\<HierarchicalClusters\>\"", "]"}], ",", 
   RowBox[{"LeafLabels", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Rotate", "[", 
       RowBox[{"#", ",", 
        RowBox[{"Pi", "/", "2"}]}], "]"}], "&"}], ")"}]}], ",", 
   RowBox[{"ImageSize", "\[Rule]", "750"}], ",", 
   RowBox[{"AspectRatio", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "7b79d2c1-8baf-41a5-8a3e-9b87e2e6d0df"],

Cell["\<\
Hierarchical community structures can also be obtained as a vertex-weighted \
tree graph.\
\>", "Text",
 ExpressionUUID -> "b10634cf-39c9-4c2f-92cf-9b235fe378e0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<ZacharyKarateClub\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "6e0cf53e-16c3-4311-821e-0f7942a465b4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"cl", "=", 
   RowBox[{"IGCommunitiesGreedy", "[", "g", "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "094d78fc-946c-446f-b9c3-eb2a04627bc2"],

Cell[BoxData[
 RowBox[{"clusteringTree", "=", 
  RowBox[{"cl", "[", "\"\<Tree\>\"", "]"}]}]], "Input",
 ExpressionUUID -> "1f6fb971-8611-4b42-9533-7aef05b0ac93"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"GraphQ", "[", "clusteringTree", "]"}], ",", 
   RowBox[{"IGVertexWeightedQ", "[", "clusteringTree", "]"}]}], 
  "}"}]], "Input",
 ExpressionUUID -> "4314876c-7157-49ac-bacd-cd690f5e530e"],

Cell[TextData[{
 "This tree can be supplied as input to ",
 Cell[BoxData["Dendrogram"],
  ExpressionUUID -> "f7df696d-37b6-4984-b98e-8b7410fd5c12"],
 "."
}], "Text",
 ExpressionUUID -> "17b9ab46-f70f-438d-ac60-b58c55af914d"],

Cell[BoxData[
 RowBox[{"Dendrogram", "[", 
  RowBox[{"clusteringTree", ",", "Left"}], "]"}]], "Input",
 ExpressionUUID -> "215ab481-f24a-4ce1-8ac4-ce7130b8dbe2"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Graph colouring", "Section",
 ExpressionUUID -> "2b456f4e-dd43-4eeb-8a04-eab1e68fb7c3"],

Cell[BoxData[
 RowBox[{"?", "IGVertexColoring"}]], "Input",
 ExpressionUUID -> "612386be-73a9-42b2-8d37-1f1fb83cbbdf"],

Cell[BoxData[
 RowBox[{"?", "IGEdgeColoring"}]], "Input",
 ExpressionUUID -> "439df01f-c655-4037-9af3-1e6cad2e853f"],

Cell["\<\
Compute and visualize a vertex and edge colouring of a Mycielski graph.\
\>", "Text",
 ExpressionUUID -> "8a65c88a-676c-4b59-8dd5-e298da067c15"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"GraphData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<Mycielski\>\"", ",", " ", "4"}], "}"}], "]"}]}], 
  ";"}]], "Input",
 ExpressionUUID -> "e905508f-a069-4a0d-842e-f106a0ca732e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graph", "[", 
   RowBox[{"g", ",", 
    RowBox[{"VertexSize", "\[Rule]", 
     RowBox[{"1", "/", "3"}]}], ",", 
    RowBox[{"EdgeStyle", "\[Rule]", "Gray"}]}], "]"}], "//", 
  "\[IndentingNewLine]", 
  RowBox[{"IGVertexMap", "[", 
   RowBox[{
    RowBox[{"ColorData", "[", "97", "]"}], ",", 
    RowBox[{"VertexStyle", "\[Rule]", "IGVertexColoring"}]}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "61293282-9e02-4012-9cdb-a027d63b58cb"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graph", "[", 
   RowBox[{"g", ",", "\[IndentingNewLine]", 
    RowBox[{"EdgeStyle", "\[Rule]", 
     RowBox[{"Directive", "[", 
      RowBox[{
       RowBox[{"Opacity", "[", "0.75", "]"}], ",", 
       RowBox[{"AbsoluteThickness", "[", "6", "]"}]}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"VertexStyle", "\[Rule]", "Black"}]}], "]"}], "//", 
  "\[IndentingNewLine]", 
  RowBox[{"IGEdgeMap", "[", 
   RowBox[{
    RowBox[{"ColorData", "[", "106", "]"}], ",", 
    RowBox[{"EdgeStyle", "\[Rule]", "IGEdgeColoring"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "542f8d0a-a092-4885-8527-f7553b6a8c59"],

Cell["\<\
Compute a checkerboard-like colouring of a three-dimensional grid graph.\
\>", "Text",
 ExpressionUUID -> "accd31c9-5576-4665-99c6-4539aaa9ee6a"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", 
  RowBox[{
   RowBox[{"ColorData", "[", "97", "]"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", "IGVertexColoring"}], ",", 
   RowBox[{"Graph3D", "@", 
    RowBox[{"GridGraph", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", "4", ",", "4"}], "}"}], ",", 
      RowBox[{"VertexSize", "\[Rule]", "0.8"}]}], "]"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "9b719ba8-2b84-4161-895e-4a5d356e06ae"],

Cell["Compute a colouring of a Voronoi mesh.", "Text",
 ExpressionUUID -> "a9f13969-b191-49f1-b6bb-6385534434a5"],

Cell[BoxData[
 RowBox[{"mesh", "=", 
  RowBox[{"VoronoiMesh", "[", 
   RowBox[{"RandomReal", "[", 
    RowBox[{"1", ",", 
     RowBox[{"{", 
      RowBox[{"20", ",", "2"}], "}"}]}], "]"}], "]"}]}]], "Input",
 ExpressionUUID -> "e7342c9a-fcb6-49e6-ad12-12d405826810"],

Cell[BoxData[
 RowBox[{"col", "=", 
  RowBox[{"IGVertexColoring", "@", 
   RowBox[{"IGMeshCellAdjacencyGraph", "[", 
    RowBox[{"mesh", ",", "2"}], "]"}]}]}]], "Input",
 ExpressionUUID -> "497a8fd6-3a97-4cf7-841d-f4dace455a71"],

Cell[BoxData[
 RowBox[{"SetProperty", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mesh", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "All"}], "}"}]}], "}"}], ",", 
   RowBox[{"MeshCellStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "97", "]"}], "/@", "col"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "bc230bb2-9212-47cc-8889-dadb718c3314"]
}, Closed]],

Cell[CellGroupData[{

Cell["Processes on graphs", "Section",
 ExpressionUUID -> "0e9fa4cf-7afe-492c-b590-da23bc40d809"],

Cell[CellGroupData[{

Cell["IGRandomWalk", "Subsubsection",
 ExpressionUUID -> "bb27ecba-c592-4b1d-b977-2800e7e81c42"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGRandomWalk", "[", "]"}]],
  ExpressionUUID -> "f738a280-118a-4218-9a1d-1597b4ac90d7"],
 " takes a random walk over a directed or undirected graph."
}], "Text",
 ExpressionUUID -> "41dc5d47-b376-49f0-b6bb-b5e0e04fdd0a"],

Cell[BoxData[
 RowBox[{"?", "IGRandomWalk"}]], "Input",
 ExpressionUUID -> "d6bb65bb-9a9d-4b89-8f02-417a9fef8e42"],

Cell["\<\
How much time does a random walker spend on each node of a network?\
\>", "Text",
 ExpressionUUID -> "4518dfc8-355d-41de-8e5d-f56ef6a53d3f"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"IGBarabasiAlbertGame", "[", 
   RowBox[{"50", ",", " ", "2", ",", 
    RowBox[{"DirectedEdges", "\[Rule]", "False"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "01ab28ff-e8e0-4656-8b9d-749cc83dbe3e"],

Cell[BoxData[
 RowBox[{"counts", "=", 
  RowBox[{
   RowBox[{"Counts", "@", 
    RowBox[{"IGRandomWalk", "[", 
     RowBox[{"g", ",", 
      RowBox[{"First", "@", 
       RowBox[{"VertexList", "[", "g", "]"}]}], ",", "10000"}], "]"}]}], "/@", 
   RowBox[{"VertexList", "[", "g", "]"}]}]}]], "Input",
 ExpressionUUID -> "b5ed91c5-020d-456b-a8f1-00b40c3cebe0"],

Cell["\<\
The exact answer can be computed as the leading eigenvector of the process\
\[CloseCurlyQuote]s stochastic matrix:\
\>", "Text",
 ExpressionUUID -> "315304b3-a37e-4f4a-8a18-23f495468999"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"sm", "=", 
   RowBox[{"Transpose", "[", 
    FractionBox[
     RowBox[{"AdjacencyMatrix", "[", "g", "]"}], 
     RowBox[{"VertexDegree", "[", "g", "]"}]], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", "val", "}"}], ",", 
     RowBox[{"{", "vec", "}"}]}], "}"}], "=", 
   RowBox[{"Eigensystem", "[", 
    RowBox[{
     RowBox[{"N", "[", "sm", "]"}], ",", "1", ",", 
     RowBox[{"Method", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"\"\<Arnoldi\>\"", ",", 
        RowBox[{"\"\<Criteria\>\"", "\[Rule]", "\"\<RealPart\>\""}]}], 
       "}"}]}]}], "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.700471250162715*^9, 3.7004712609878902`*^9}, 
   3.700471575707294*^9, 3.700471758894938*^9},
 ExpressionUUID -> "fe392bc2-70e4-4838-80c4-2aacd7ffb4a9"],

Cell["Compare the exact answer with a finite sample:", "Text",
 ExpressionUUID -> "fcb097bc-c2f6-48f6-9bb3-f679991be27f"],

Cell[BoxData[
 RowBox[{"ListPlot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     FractionBox["vec", 
      RowBox[{"Total", "[", "vec", "]"}]], ",", 
     FractionBox["counts", 
      RowBox[{"Total", "[", "counts", "]"}]]}], "}"}], ",", 
   RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<exact\>\"", ",", "\"\<sampled\>\""}], "}"}]}], ",", 
   RowBox[{"PlotStyle", "\[Rule]", 
    RowBox[{"PointSize", "[", "0.02", "]"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "4f53d052-090f-4156-9740-749ead274d5c"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGRandomEdgeWalk and IGRandomEdgeIndexWalk", "Subsubsection",
 ExpressionUUID -> "db51fa53-2dcc-4547-a770-4cbf91676ce0"],

Cell[BoxData[
 RowBox[{"?", "IGRandomEdgeWalk"}]], "Input",
 ExpressionUUID -> "f2ccc595-8651-4279-b697-9ff268853856"],

Cell[BoxData[
 RowBox[{"?", "IGRandomEdgeIndexWalk"}]], "Input",
 ExpressionUUID -> "d31255a3-f65d-4d13-aa77-7529e27fb7fd"],

Cell[TextData[{
 Cell[BoxData["IGRandomEdgeWalk"],
  ExpressionUUID -> "94ba92be-25e4-4540-b8c8-7671071e50e6"],
 " takes a random walk on a graph and returns the list of traversed edges."
}], "Text",
 ExpressionUUID -> "cf55b1e4-c2f5-485a-a3ce-d8045a69ba28"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGDeBruijnGraph", "[", 
    RowBox[{"3", ",", "3"}], "]"}]}], ";"}], "\n", 
 RowBox[{"IGRandomEdgeWalk", "[", 
  RowBox[{"g", ",", 
   RowBox[{"RandomChoice", "@", 
    RowBox[{"VertexList", "[", "g", "]"}]}], ",", "20"}], "]"}]}], "Input",
 ExpressionUUID -> "dc186e4d-684f-4300-84a7-f40de0ac0906"],

Cell[TextData[{
 Cell[BoxData["IGRandomEdgeIndexWalk"],
  ExpressionUUID -> "4e618bb5-fd31-4754-a923-50b060e5b2ad"],
 " returns the list of indices of the traversed edges instead. This makes it \
useful for working with multigraphs, as it allows distinguishing between \
parallel edges."
}], "Text",
 ExpressionUUID -> "f0bf8b59-db06-4c5f-9b2f-cdbf80c77c16"],

Cell["\<\
As an example application, let us consider the following set of affine \
transformations:\
\>", "Text",
 ExpressionUUID -> "c3bd6bfe-16ac-4052-ba07-a7f9dac1f989"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"scale12", "=", 
   RowBox[{"ScalingTransform", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "/", "2"}], ",", 
      RowBox[{"1", "/", "2"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a11", "=", 
   RowBox[{
    RowBox[{"TranslationTransform", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "4"}], ",", 
       RowBox[{
        SqrtBox["3"], "/", "4"}]}], "}"}], "]"}], "@*", "scale12"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"a21", "=", 
   RowBox[{
    RowBox[{"RotationTransform", "[", 
     RowBox[{"Pi", "/", "3"}], "]"}], "@*", "scale12"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"b21", "=", 
   RowBox[{
    RowBox[{"TranslationTransform", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"3", "/", "4"}], ",", 
       RowBox[{
        SqrtBox["3"], "/", "4"}]}], "}"}], "]"}], "@*", 
    RowBox[{"RotationTransform", "[", 
     RowBox[{
      RowBox[{"-", "Pi"}], "/", "3"}], "]"}], "@*", "scale12"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"a12", "=", 
   RowBox[{
    RowBox[{"TranslationTransform", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", "0"}], "}"}], "]"}], "@*", 
    RowBox[{"ScalingTransform", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "/", "2"}], ",", 
       RowBox[{
        RowBox[{"-", "1"}], "/", "2"}]}], "}"}], "]"}]}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"a22", "=", "scale12"}], ";"}]}], "Input",
 ExpressionUUID -> "c352de74-f85f-43f4-aa11-c08f3d6a6fab"],

Cell[BoxData[
 RowBox[{
  RowBox[{"trafos", "=", 
   RowBox[{"{", 
    RowBox[{"a11", ",", "a21", ",", "b21", ",", "a12", ",", "a22"}], "}"}]}], 
  ";"}]], "Input",
 ExpressionUUID -> "fdc47f92-459f-419b-b72c-e30029afebff"],

Cell["\<\
Let us visualize them by showing an an initial (black) triangle and its (red) \
transformation.\
\>", "Text",
 ExpressionUUID -> "0c75bf21-2866-4023-8276-cc1903a2e5f6"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tri", "=", 
   RowBox[{"Triangle", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"1", ",", "0"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "/", "2"}], ",", 
        RowBox[{
         SqrtBox["3"], "/", "2"}]}], "}"}]}], "}"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{
   RowBox[{"Graphics", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"tri", ",", "Red", ",", 
       RowBox[{"GeometricTransformation", "[", 
        RowBox[{"tri", ",", "#"}], "]"}]}], "}"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}], "&"}], "/@", 
  "trafos"}]}], "Input",
 ExpressionUUID -> "08499770-7252-4c1d-9b71-58955ee55336"],

Cell["\<\
These transformations describe the mutual self-similarity structure of two \
fractal curves, according to the following directed graph. Each edge of the \
graph corresponds to a transformation.\
\>", "Text",
 ExpressionUUID -> "b22b35ed-2d38-4e8e-8de2-7fdb9c1bcd09"],

Cell[BoxData[
 RowBox[{"graph", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"1", "\[Rule]", "1"}], ",", 
      RowBox[{"2", "\[Rule]", "1"}], ",", 
      RowBox[{"2", "\[Rule]", "1"}], ",", 
      RowBox[{"1", "\[Rule]", "2"}], ",", 
      RowBox[{"2", "\[Rule]", "2"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"VertexLabels", "\[Rule]", 
     RowBox[{"Placed", "[", 
      RowBox[{"\"\<Name\>\"", ",", "Center"}], "]"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"VertexShape", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
fsulZwAAAAAAAADghP8DUH5Rpw==
           "], {{0, 314}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 314},
         PlotRange->{{0, 360}, {0, 314}}]}], ",", 
       RowBox[{"2", "\[Rule]", 
        GraphicsBox[
         TagBox[RasterBox[CompressedData["
1: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
AIBp/gZkFsR3
           "], {{0, 164}, {360, 0}}, {0, 255},
           ColorFunction->RGBColor],
          BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
          
          Selectable->False],
         DefaultBaseStyle->"ImageGraphics",
         ImageSizeRaw->{360, 164},
         PlotRange->{{0, 360}, {0, 164}}]}]}], "}"}]}], ",", 
    RowBox[{"PerformanceGoal", "\[Rule]", "\"\<Quality\>\""}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"VertexSize", "\[Rule]", 
     FractionBox["1", "3"]}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "400"}]}], "\[IndentingNewLine]", 
   "]"}]}]], "Input",
 ExpressionUUID -> "e3a9e101-4bf9-4424-9ba7-fb5e726ac6d8"],

Cell[TextData[{
 "Let us compute a random walk on this graph, and iteratively apply \
transformations to the point ",
 Cell[BoxData[
  RowBox[{"{", 
   RowBox[{"0", ",", "0"}], "}"}]],
  ExpressionUUID -> "3904fd5e-df7e-4b6a-baf0-862c1ac42079"],
 " according to the traversed edges."
}], "Text",
 ExpressionUUID -> "0109693d-16d5-4a39-b59e-4b14d23830c8"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"walk", "=", 
   RowBox[{"IGRandomEdgeIndexWalk", "[", 
    RowBox[{"graph", ",", "1", ",", "20000"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"pts", "=", 
   RowBox[{"Rest", "@", 
    RowBox[{"FoldList", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#2", "[", "#1", "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.", ",", "0."}], "}"}], ",", 
      RowBox[{
      "trafos", "\[LeftDoubleBracket]", "walk", "\[RightDoubleBracket]"}]}], 
     "]"}]}]}], ";"}]}], "Input",
 ExpressionUUID -> "bb0031f6-6894-4730-a3aa-6424dc8001f3"],

Cell["\<\
The resulting list of points will approximate the union of the two fractal \
curves.\
\>", "Text",
 ExpressionUUID -> "656d6ab6-d05a-43bc-894a-62a15d26ea23"],

Cell[BoxData[
 RowBox[{"Image", "@", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AbsolutePointSize", "[", "1", "]"}], ",", 
     RowBox[{"Point", "[", "pts", "]"}]}], "}"}], "]"}]}]], "Input",
 ExpressionUUID -> "24ad112e-931e-4812-be8f-cf7869c83506"],

Cell[TextData[{
 "The two curves can be separated by filtering points according to which \
graph vertex the corresponding directed edge targets. For example, if the \
point was generated by a transformation corresponding to ",
 Cell[BoxData[
  RowBox[{"1", "\[DirectedEdge]", "2"}]],
  ExpressionUUID -> "3025dd7c-862e-45b9-9e7b-d7c5f1c51869"],
 ", it will belong to curve ",
 Cell[BoxData["2"],
  ExpressionUUID -> "569d8274-cbff-4dee-aa60-50536df21484"],
 "."
}], "Text",
 ExpressionUUID -> "b8b2f72f-b1e0-4e83-a39e-70484cf83d75"],

Cell[BoxData[
 RowBox[{"targets", "=", 
  RowBox[{"Last", "/@", 
   RowBox[{"EdgeList", "[", "graph", "]"}]}]}]], "Input",
 ExpressionUUID -> "55c0be18-9047-43de-b292-d8f4da34e6f1"],

Cell[BoxData[
 RowBox[{"Image", "@", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AbsolutePointSize", "[", "1", "]"}], ",", 
     RowBox[{"Point", "@", 
      RowBox[{"Pick", "[", 
       RowBox[{"pts", ",", 
        RowBox[{
        "targets", "\[LeftDoubleBracket]", "walk", "\[RightDoubleBracket]"}], 
        ",", "1"}], "]"}]}]}], "}"}], "]"}]}]], "Input",
 ExpressionUUID -> "d7a955f7-9a68-4da5-9011-5effc65605c5"],

Cell[BoxData[
 RowBox[{"Image", "@", 
  RowBox[{"Graphics", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"AbsolutePointSize", "[", "1", "]"}], ",", 
     RowBox[{"Point", "@", 
      RowBox[{"Pick", "[", 
       RowBox[{"pts", ",", 
        RowBox[{
        "targets", "\[LeftDoubleBracket]", "walk", "\[RightDoubleBracket]"}], 
        ",", "2"}], "]"}]}]}], "}"}], "]"}]}]], "Input",
 ExpressionUUID -> "94902cbf-b010-42df-bfc8-25b83fde685f"],

Cell[TextData[{
 "The technique described here is taken from \[OpenCurlyDoubleQuote]",
 ButtonBox["Generating self-affine tiles and their boundaries",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://www.mathematica-journal.com/2009/01/generating-self-affine-\
tiles-and-their-boundaries/"], None},
  ButtonNote->
   "http://www.mathematica-journal.com/2009/01/generating-self-affine-tiles-\
and-their-boundaries/"],
 "\[CloseCurlyDoubleQuote] by Mark McClure."
}], "Text",
 ExpressionUUID -> "768f3661-fa65-486a-9f55-bbd9e6193547"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Geometrical meshes", "Section",
 ExpressionUUID -> "24d0e583-e2ae-4f11-8446-2c61dea61096"],

Cell[CellGroupData[{

Cell["IGMeshGraph", "Subsubsection",
 ExpressionUUID -> "56a0f36c-9354-46b2-a828-5e9989b37107"],

Cell[BoxData[
 RowBox[{"?", "IGMeshGraph"}]], "Input",
 ExpressionUUID -> "c4054c88-3a6c-4963-b636-9af6268fa0f2"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "b73d7daf-c257-4968-b038-06322735c6d3"],

Cell[TextData[{
 Cell[BoxData["EdgeWeight"],
  ExpressionUUID -> "880c57c3-f15e-4519-9b80-c3fcb4ff5f60"],
 " sets either the explicit edge weights, or the mesh property to be used as \
edge weights. The default value is ",
 Cell[BoxData["MeshCellMeasure"],
  ExpressionUUID -> "e9ff82c6-20ef-43b9-8cac-dc7c53f8e295"],
 ". Use ",
 Cell[BoxData["None"],
  ExpressionUUID -> "6063eb8c-01e2-449b-9276-339ad65583fa"],
 " to obtain an unweighted graph."
}], "Item",
 ExpressionUUID -> "46327d9a-5801-4d37-80de-f69cb2876ea9"],

Cell["\<\
The following example demonstrates finding a shortest path on a geometric \
mesh.\
\>", "Text",
 ExpressionUUID -> "b004cf61-81ef-44a3-b649-06fcab24b230"],

Cell[BoxData[
 RowBox[{"mesh", "=", 
  RowBox[{"DiscretizeRegion", "[", 
   RowBox[{
    RowBox[{"RegionDifference", "[", 
     RowBox[{
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"3", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"Rectangle", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "1"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "]"}], ",", 
    RowBox[{"MaxCellMeasure", "\[Rule]", "0.02"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.720531666878605*^9, 3.7205316727659683`*^9}},
 ExpressionUUID -> "a537fe95-2997-4799-ba33-9d3dc462bfbb"],

Cell[TextData[{
 Cell[BoxData["IGMeshGraph"],
  ExpressionUUID -> "2fddd518-a182-416a-a3df-01cecc740ba2"],
 " preserves the vertex coordinates, and uses edge lengths as edge weights by \
default."
}], "Text",
 ExpressionUUID -> "07cb381b-59ad-45ab-8196-77fb8c618448"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"IGMeshGraph", "[", "mesh", "]"}]}]], "Input",
 CellChangeTimes->{{3.720530403208596*^9, 3.720530468716012*^9}, {
  3.720530879322616*^9, 3.7205308799057617`*^9}, {3.720531286387629*^9, 
  3.720531359334012*^9}, {3.720531391142756*^9, 3.720531392092895*^9}, {
  3.7205315084257793`*^9, 3.7205315153695374`*^9}, {3.720531563490065*^9, 
  3.720531597060973*^9}, {3.7205316770381413`*^9, 3.720531678733333*^9}},
 ExpressionUUID -> "10b523c7-8208-4560-b634-9fe7c31ffe81"],

Cell["Find the corners.", "Text",
 ExpressionUUID -> "c7abf921-e541-4ec4-a186-a7ba034ace24"],

Cell[BoxData[
 RowBox[{"st", "=", 
  RowBox[{"First", "/@", 
   RowBox[{"Through", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"MinimalBy", ",", "MaximalBy"}], "}"}], "[", 
     RowBox[{
      RowBox[{"VertexList", "[", "g", "]"}], ",", 
      RowBox[{
       RowBox[{"Norm", "@", 
        RowBox[{"PropertyValue", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"g", ",", "#"}], "}"}], ",", "VertexCoordinates"}], 
         "]"}]}], "&"}]}], "]"}], "\[IndentingNewLine]", "]"}]}]}]], "Input",
 CellChangeTimes->{{3.720530518656507*^9, 3.720530562973282*^9}, {
  3.720530620354545*^9, 3.720530626072632*^9}, {3.720531443515697*^9, 
  3.7205314443218803`*^9}, {3.720531526529374*^9, 3.7205315417038794`*^9}},
 ExpressionUUID -> "c5cca954-82a2-49c3-9b49-eb95831486f7"],

Cell["Highlight the shortest path.", "Text",
 ExpressionUUID -> "4a186f7a-8cdd-4129-a479-fa83f99de4e4"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", "\[IndentingNewLine]", 
   RowBox[{"PathGraph", "@", 
    RowBox[{"FindShortestPath", "[", 
     RowBox[{"g", ",", 
      RowBox[{"First", "[", "st", "]"}], ",", 
      RowBox[{"Last", "[", "st", "]"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"Frame", "\[Rule]", "True"}], ",", 
   RowBox[{"FrameTicks", "\[Rule]", "True"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 CellChangeTimes->{{3.7205304720332737`*^9, 3.7205305062953997`*^9}, {
  3.720530582743116*^9, 3.720530582854973*^9}, {3.720530634871773*^9, 
  3.720530635192234*^9}, {3.7205314138673*^9, 3.720531426313422*^9}, {
  3.720531488364881*^9, 3.720531488515215*^9}, {3.7205315468649187`*^9, 
  3.7205315493858*^9}},
 ExpressionUUID -> "cfed510e-d3b4-47a4-baa6-2fa2acfb027d"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGMeshCellAdjacencyGraph and IGMeshCellAdjacencMatrix", "Subsubsection",
 
 ExpressionUUID -> "2edb0faf-b5eb-4603-ac19-4631d73704e6"],

Cell[BoxData[
 RowBox[{"?", "IGMeshCellAdjacencyGraph"}]], "Input",
 ExpressionUUID -> "24b29374-237b-4b15-93be-5e62006c343b"],

Cell[BoxData[
 RowBox[{"?", "IGMeshCellAdjacencyMatrix"}]], "Input",
 ExpressionUUID -> "6ee2f81c-e855-48d2-bb52-499a08addcc0"],

Cell["\<\
Compute the connectivity of mesh vertices (zero-dimensional cells).\
\>", "Text",
 ExpressionUUID -> "b51d2e78-9aa1-4e57-ba34-4ea2581b3a78"],

Cell[BoxData[
 RowBox[{"mesh", "=", 
  RowBox[{"DiscretizeRegion", "[", 
   RowBox[{
    RowBox[{"Disk", "[", "]"}], ",", 
    RowBox[{"MaxCellMeasure", "\[Rule]", "0.1"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "8d4cbebd-4d57-40cb-81f9-0239f16c0e39"],

Cell[BoxData[
 RowBox[{"IGMeshCellAdjacencyGraph", "[", 
  RowBox[{"mesh", ",", "0", ",", 
   RowBox[{"VertexCoordinates", "\[Rule]", 
    RowBox[{"MeshCoordinates", "[", "mesh", "]"}]}]}], "]"}]], "Input",
 ExpressionUUID -> "279e2ff2-8dfa-4fc5-b116-b0d4e6614290"],

Cell["Compute the connectivity of faces (two-dimensional cells).", "Text",
 ExpressionUUID -> "639ad28d-90a2-4d56-8c9f-7efe51d5554b"],

Cell[BoxData[
 RowBox[{"IGMeshCellAdjacencyGraph", "[", 
  RowBox[{"mesh", ",", "2"}], "]"}]], "Input",
 ExpressionUUID -> "58076edb-189a-4ef3-bc07-fca9df005160"],

Cell["Compute the connectivity of faces and edges.", "Text",
 ExpressionUUID -> "669c5e80-a7a4-4059-9d91-c060eb81d915"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"IGMeshCellAdjacencyGraph", "[", 
   RowBox[{"mesh", ",", "2", ",", "1"}], "]"}]}]], "Input",
 ExpressionUUID -> "bfd368dc-2ac4-4a00-bfac-ea7d2c7fb5c2"],

Cell["This is a bipartite graph.", "Text",
 ExpressionUUID -> "216534cf-af51-4d4b-a26b-c812eebff6b4"],

Cell[BoxData[
 RowBox[{"IGBipartiteQ", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "56dede61-45a9-42b9-a5a3-7a436248cb14"],

Cell[TextData[{
 "The vertex names are the same as the mesh cell indices (see ",
 Cell[BoxData["MeshCellIndex"],
  ExpressionUUID -> "400bea82-ab55-4647-8f64-1f3688b44c5d"],
 ")."
}], "Text",
 ExpressionUUID -> "a00e7acf-4677-4071-bf04-c2950d61d26e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"VertexList", "[", "g", "]"}], "//", "Short"}]], "Input",
 ExpressionUUID -> "13630291-5ff7-48d5-a95c-6aec014d97df"],

Cell["Colour the faces of the mesh.", "Text",
 ExpressionUUID -> "56b30d58-06cb-48fa-80bb-2f5ba3314862"],

Cell[BoxData[
 RowBox[{"SetProperty", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"mesh", ",", 
     RowBox[{"{", 
      RowBox[{"2", ",", "All"}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"MeshCellStyle", "\[Rule]", 
    RowBox[{
     RowBox[{"ColorData", "[", "100", "]"}], "/@", 
     RowBox[{"IGVertexColoring", "@", 
      RowBox[{"IGMeshCellAdjacencyGraph", "[", 
       RowBox[{"mesh", ",", "2"}], "]"}]}]}]}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 ExpressionUUID -> "de1606f3-24fa-4595-8eab-1bf02a5ffa7d"],

Cell["\<\
The edge-edge connectivity is identical to the line graph of the \
vertex-vertex connectivity.\
\>", "Text",
 ExpressionUUID -> "becdb0f7-96e5-4e10-aa32-8bddf7a79b87"],

Cell[BoxData[
 RowBox[{"IGIsomorphicQ", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"LineGraph", "@", 
    RowBox[{"IGMeshCellAdjacencyGraph", "[", 
     RowBox[{"mesh", ",", "0"}], "]"}]}], ",", 
   RowBox[{"IGMeshCellAdjacencyGraph", "[", 
    RowBox[{"mesh", ",", "1"}], "]"}]}], "\[IndentingNewLine]", 
  "]"}]], "Input",
 ExpressionUUID -> "decf1187-3cf9-4f89-a30d-9423c4fe7cd4"],

Cell["\<\
Compute the adjacency matrix of the vertex-vertex connectivity.\
\>", "Text",
 ExpressionUUID -> "d1f7d8dd-658f-4eca-928b-b5bb1a813a78"],

Cell[BoxData[
 RowBox[{"mesh", "=", 
  RowBox[{"DiscretizeRegion", "[", 
   RowBox[{
    RowBox[{"Sphere", "[", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"PrecisionGoal", "\[Rule]", "1.5"}], ",", 
    RowBox[{"MaxCellMeasure", "\[Rule]", "1"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Small"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "56b3d7b6-288c-44ee-801a-2d848e9bcb70"],

Cell[BoxData[
 RowBox[{"MatrixPlot", "@", 
  RowBox[{"IGMeshCellAdjacencyMatrix", "[", 
   RowBox[{"mesh", ",", "0"}], "]"}]}]], "Input",
 ExpressionUUID -> "0a12996f-95d9-44a7-8b0e-94f3f2480f56"],

Cell["Compute the adjacency matrix of the edge-face connectivity.", "Text",
 ExpressionUUID -> "9c4914ce-d4db-4024-93c0-323806be2490"],

Cell[BoxData[
 RowBox[{"bm", "=", 
  RowBox[{"IGMeshCellAdjacencyMatrix", "[", 
   RowBox[{"mesh", ",", "1", ",", "2"}], "]"}]}]], "Input",
 ExpressionUUID -> "c557f7af-5990-47c5-a854-f53d083ffade"],

Cell[BoxData[
 RowBox[{"MatrixPlot", "[", "bm", "]"}]], "Input",
 ExpressionUUID -> "c3b41ada-73e6-42ea-9dd9-ce6a61809648"],

Cell[TextData[{
 "This is the (non-square) incidence matrix of a bipartite graph. The graph \
can be reconstructed using ",
 Cell[BoxData["IGBipartiteIncidenceGraph"],
  ExpressionUUID -> "9d57e336-4360-4989-830f-7e9fbe3ed79c"],
 "."
}], "Text",
 ExpressionUUID -> "60202725-2c00-4c70-ac4b-b118952861e3"],

Cell[BoxData[
 RowBox[{"Graph3D", "@", 
  RowBox[{"IGBipartiteIncidenceGraph", "[", "bm", "]"}]}]], "Input",
 ExpressionUUID -> "ce660676-ffa3-4ba6-b72d-0cad389b29f1"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes on other functions", "Section",
 ExpressionUUID -> "92bdfb56-7a9e-4170-8fc7-0daaae2d4612"],

Cell[CellGroupData[{

Cell["Random number generator", "Subsection",
 ExpressionUUID -> "a57f4900-93c7-401b-80d8-9460c67af5ff"],

Cell["igraph\[CloseCurlyQuote]s random number generator can be seeded using", \
"Text",
 ExpressionUUID -> "50673cc3-c875-4d13-8a9e-65a77f7faf5d"],

Cell[BoxData[
 RowBox[{"IGSeedRandom", "[", "123", "]"}]], "Input",
 ExpressionUUID -> "ed689825-a2d8-475b-8b83-78af9152c681"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGIndexEdgeList", "Subsection",
 ExpressionUUID -> "74233a0a-8bfb-4183-8a16-3946144059fd"],

Cell[BoxData[
 RowBox[{"?", "IGIndexEdgeList"}]], "Input",
 ExpressionUUID -> "578bd576-f7ca-4393-aeaa-366a58fd67b8"],

Cell[BoxData[
 RowBox[{"IGIndexEdgeList", "[", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"a", ",", "b", ",", "c"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"b", "\[UndirectedEdge]", "c"}], ",", 
      RowBox[{"c", "\[UndirectedEdge]", "a"}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 ExpressionUUID -> "4aa01269-eb3c-48aa-91c3-2c1c1491d634"],

Cell[BoxData[
 RowBox[{"Developer`PackedArrayQ", "[", "%", "]"}]], "Input",
 ExpressionUUID -> "469b8999-ea4e-48c0-9a08-ef42419264d6"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGIndexEdgeList", "[", "g", "]"}]],
  ExpressionUUID -> "671d289c-2d1f-453f-985f-62d0017263d6"],
 " is faster than ",
 Cell[BoxData[
  RowBox[{"EdgeList", "[", "g", "]"}]],
  ExpressionUUID -> "eed2f4c3-0bc4-4c08-91cf-142d24085a40"],
 " and usually much faster than ",
 Cell[BoxData[
  RowBox[{"EdgeList", "@", 
   RowBox[{"IndexGraph", "[", "g", "]"}]}]],
  ExpressionUUID -> "f2d89303-d5b2-485f-8b46-826efe08cd19"],
 "."
}], "Text",
 ExpressionUUID -> "ea664a77-5393-40a4-8abc-32aabe7f1aba"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", "\"\<CondensedMatterCollaborations\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "caccdc10-1ff7-457a-b3f3-a5ca368a5a2a"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"First", "@", 
    RowBox[{"RepeatedTiming", "@", 
     RowBox[{"EdgeList", "[", "g", "]"}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"First", "@", 
    RowBox[{"RepeatedTiming", "@", 
     RowBox[{"EdgeList", "@", 
      RowBox[{"IndexGraph", "[", "g", "]"}]}]}]}], ",", "\[IndentingNewLine]", 
   RowBox[{"First", "@", 
    RowBox[{"RepeatedTiming", "@", 
     RowBox[{"IGIndexEdgeList", "[", "g", "]"}]}]}]}], "}"}]], "Input",
 ExpressionUUID -> "fa59a728-1523-4d4f-a602-7c9dfa8ec966"],

Cell[BoxData[
 RowBox[{
  RowBox[{"List", "@@@", 
   RowBox[{"Sort", "/@", 
    RowBox[{"EdgeList", "@", 
     RowBox[{"IndexGraph", "[", "g", "]"}]}]}]}], "===", 
  RowBox[{"Sort", "/@", 
   RowBox[{"IGIndexEdgeList", "[", "g", "]"}]}]}]], "Input",
 ExpressionUUID -> "47b05365-ebe1-415b-bd9e-91101deb069b"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGData", "Subsection",
 ExpressionUUID -> "ddb8d726-b1b8-4d70-bc02-1f05eaaf9b8b"],

Cell[TextData[{
 "The ",
 Cell[BoxData[
  RowBox[{"IGData", "[", "]"}]],
  ExpressionUUID -> "5a78de5f-f57d-4c00-b80f-508632d2851d"],
 " function provides access to various useful datasets. In particular, it can \
list small directed graphs ordered based on their ",
 Cell[BoxData[
  RowBox[{"IGIsoclass", "[", "]"}]],
  ExpressionUUID -> "5a8d9af3-1b12-48f3-a96b-69858e5cdcfa"],
 ", i.e. the same order motif counting functions use."
}], "Text",
 ExpressionUUID -> "f00ae9d6-a09b-410c-ba6a-b152d6ffca37"],

Cell[BoxData[
 RowBox[{"IGData", "[", "]"}]], "Input",
 ExpressionUUID -> "a8f2897b-9dcb-41bd-95af-54d74e29769a"],

Cell["These are all size 3 directed graphs.", "Text",
 ExpressionUUID -> "f2a4ccb6-37a8-43f7-8ebc-8469c9ac1d78"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IGData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<AllDirectedGraphs\>\"", ",", "3"}], "}"}], "]"}], "//", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{"#", ",", 
       RowBox[{"ImageSize", "\[Rule]", "Tiny"}]}], "]"}], "&"}], "]"}]}], "//",
   "Row"}]], "Input",
 ExpressionUUID -> "54926f58-5648-41af-afbe-49c5b0bd0bc2"],

Cell[TextData[{
 Cell[BoxData["\"\<MANTriadLabels\>\""],
  ExpressionUUID -> "c490e6ba-4812-4399-8a0a-02675c995577"],
 " refers to the mutual, asymmetric, null labelling of triads used by ",
 Cell[BoxData[
  RowBox[{"IGTriadCensus", "[", "]"}]],
  ExpressionUUID -> "7a430535-f42b-40fd-a3b1-da78839b35f6"],
 ". Each label is mapped to the corresponding graph, ordered based on their \
",
 Cell[BoxData["IGIsoclass"],
  ExpressionUUID -> "9b18b84d-52a6-4f91-97c2-dd37e7fab2cc"],
 ". This is useful for converting the output of ",
 Cell[BoxData[
  RowBox[{"IGTriadCensus", "[", "]"}]],
  ExpressionUUID -> "e04dc965-d920-43e5-9ccf-50704a16ddb6"],
 " to a format compatible with ",
 Cell[BoxData[
  RowBox[{"IGMotifs", "[", "]"}]],
  ExpressionUUID -> "4866b076-97c5-49a8-945e-e432300e783c"],
 "."
}], "Text",
 ExpressionUUID -> "8c103b73-3152-4106-9818-138a7686efc5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"RandomGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"20", ",", "50"}], "}"}], ",", 
     RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"{", 
   RowBox[{
    RowBox[{"IGMotifs", "[", 
     RowBox[{"g", ",", "3"}], "]"}], ",", 
    RowBox[{"Lookup", "[", 
     RowBox[{
      RowBox[{"IGTriadCensus", "[", "g", "]"}], ",", 
      RowBox[{"Keys", "@", 
       RowBox[{"IGData", "[", "\"\<MANTriadLabels\>\"", "]"}]}]}], "]"}]}], 
   "}"}], "//", "Grid"}]}], "Input",
 ExpressionUUID -> "baa619d5-b7e9-42bb-a534-4486891fe4d2"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Utilities", "Section",
 ExpressionUUID -> "b5613f0a-130a-4334-8b86-7c2b76774992"],

Cell[TextData[{
 "The ",
 Cell[BoxData["IGraphM`Utilities`"],
  ExpressionUUID -> "53c32ad4-40ff-4799-9e69-bacbb4fc90c3"],
 " package contains a few useful functions which are independent of the core \
igraph library. This package can also be loaded on its own, using ",
 Cell[BoxData[
  RowBox[{"Needs", "[", "\"\<IGraphM`Utilities`\>\"", "]"}]],
  ExpressionUUID -> "b66084c0-f774-4f14-8265-3b3567bebd18"],
 "."
}], "Text",
 ExpressionUUID -> "0d8d8f03-a0fc-41bc-8557-e33a1d34cfde"],

Cell[BoxData[
 RowBox[{"?", "IGraphM`Utilities`*"}]], "Input",
 ExpressionUUID -> "845455e3-f6d0-419f-9de3-69a6a6a3ec2a"],

Cell[CellGroupData[{

Cell["Structural transformations", "Subsection",
 ExpressionUUID -> "74d9372a-31b7-4a6d-bece-ba18f852aec6"],

Cell[CellGroupData[{

Cell["IGUndirectedGraph", "Subsubsection",
 ExpressionUUID -> "9cb306fe-79f9-4046-b33c-a4bba4954cde"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGUndirectedGraph", "[", 
   RowBox[{"g", ",", " ", "method"}], "]"}]],
  ExpressionUUID -> "92fd8f6f-2692-400f-a547-14f08d5b35cf"],
 " converts a directed graph to an undirected one, using the specified edge \
conversion method:"
}], "Text",
 ExpressionUUID -> "61c46d23-a45e-4869-8114-5cccac3dd32b"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData["\"\<Simple\>\""],
  ExpressionUUID -> "dc461d65-a0ef-4ade-a015-961a4fe79979"],
 " creates a single undirected edge between connected vertices"
}], "Item",
 ExpressionUUID -> "5e2e7b54-ffe6-4b43-ae4e-df70f1a68c67"],

Cell[TextData[{
 Cell[BoxData["\"\<All\>\""],
  ExpressionUUID -> "d002f51c-861a-46f4-a6cf-443a967da499"],
 " creates one undirected edge for each directed one. This may result in \
multiple edges between the same vertices."
}], "Item",
 ExpressionUUID -> "1913dd40-9f8c-476a-9f63-7b9573195c63"],

Cell[TextData[{
 Cell[BoxData["\"\<Reciprocal\>\""],
  ExpressionUUID -> "302db566-6b0a-4326-b73a-d360b866f603"],
 " creates an edge only between reciprocally connected vertices."
}], "Item",
 ExpressionUUID -> "0867c744-bc6c-4aa4-be01-5fe7b81c902a"]
}, Open  ]],

Cell["If the graph was already undirected, it will not be changed.", "Text",
 ExpressionUUID -> "fedcd822-b9cf-48ba-81df-8c381399ef4d"],

Cell[TextData[{
 StyleBox["Warning: ",
  FontWeight->"Bold"],
 "As of IGraph/M 0.3, ",
 Cell[BoxData["IGUndirectedGraph"],
  ExpressionUUID -> "d353f84e-8b74-41e9-8f8a-19ecceb6b723"],
 " discards graph properties such as edge weights."
}], "Text",
 ExpressionUUID -> "6f010a5e-1cf3-4196-98c9-9f63f4b683b8"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   GraphicsBox[
    NamespaceBox["NetworkGraphics",
     DynamicModuleBox[{Typeset`graph = HoldComplete[
       Graph[{1, 2, 3}, {{{1, 2}, {2, 1}, {2, 3}, {3, 1}}, Null}, {
        ImageSize -> Small}]]}, 
      TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJwBQQK+/SFib1JlAgAAACMAAAACAAAAtUEeyZLN3z8AAAAAAAAAAD6QoaXy
/+8/wpQs9uSn6z8AAAAAAAAAAGQllAb6xOs/WKBo6VSU4D/aUN37miC8Pw4q
noCuxeA/3EKnq1OawT9HofFN3QHhP9C8hAvQGcU/PjZOr71I4T/cKzFqsIzI
P/iSwK0lmuE/gX6UC+rwyz/Bjk8W5fXhP4ngVOB6RM8/iNuFlsVb4j9xIRpb
tULRPzrHm9yKy+I/4GhLMebY0j/G82/DATzpP7y86kdofOQ/4DIComm16T9o
buXo5EHlP8OOQDcsOOo/dyQe0lAB5j/sRH0X/MPqP/qvRq06uuY/AOQDe4ZY
6z9+kYH+NGznP8yCHG9z9es/RMA0ZdYW6D80TB4KZprsP4wCbtq5ueg/Noty
ovxG7T/a5bPsflTpP8MQyCBnUu8/p+qwltEj6D8Mh5KJDSHvPwzEQgtQQec/
1A8/vN7k7j+PZUvzcGHmP9x64lr+ne4/y0mg27iE5T8jHnBclkzuPyJ1R3Oq
q+Q/WCLh89bw7T+gXBc+xtbjP5LVqnP2iu0/CoSfSIoG4z/g6ZQtMRvtP1Pg
ht1xO+I/VL3ARrqq5j8gYAe58q3MPzp+LmhSMeY/apkcNQCYyT9WIvDSj67l
PzDBOZBQmsY/Lmyz8r8i5T8kk5cjqbbDPxrNLI81juQ/Fg2s3r/uwD9OLhSb
SPHjP/Sjvod0iLw/52QSAFZM4z+8kfTdWHG3P+Qlvme/n+I/THfFSzCbsj8s
Kh2M
         "], {
          {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
           ArrowBox[BezierCurveBox[{
            1, {0.6063408377933767, 0.5148479015247521}, 2}], 
            0.01272991894543915], 
           ArrowBox[BezierCurveBox[{
            2, {0.8905749984480941, 0.3493970180697965}, 1}], 
            0.01272991894543915], ArrowBox[{2, 3}, 0.01272991894543915], 
           ArrowBox[{3, 1}, 0.01272991894543915]}, 
          {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
           DiskBox[1, 0.01272991894543915], DiskBox[2, 0.01272991894543915], 
           DiskBox[3, 0.01272991894543915]}}]],
       MouseAppearanceTag["NetworkGraphics"]],
      AllowKernelInitialization->False]],
    DefaultBaseStyle->{
     "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
    
    FormatType->TraditionalForm,
    FrameTicks->None,
    ImageSize->{95.8359375, Automatic}]}], ";"}]], "Input",
 ExpressionUUID -> "5bd3ebd2-17db-49f8-a590-16496a060629"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IGUndirectedGraph", "[", 
    RowBox[{"g", ",", "#"}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Simple\>\"", ",", "\"\<All\>\"", ",", "\"\<Reciprocal\>\""}], 
   "}"}]}]], "Input",
 ExpressionUUID -> "0070beb4-0cad-4174-af3d-3def038ceb6e"],

Cell[TextData[{
 "The default method is ",
 Cell[BoxData["\"\<Simple\>\""],
  ExpressionUUID -> "64bff496-8420-4096-98f6-65f660a5423d"],
 ":"
}], "Text",
 ExpressionUUID -> "9e2b7b74-318c-4f86-9cb0-1b0c89ea68c5"],

Cell[BoxData[
 RowBox[{"IGUndirectedGraph", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "4d2d92eb-76d7-4eff-986f-ef3544474a2f"],

Cell["Self-loops are preserved by all methods:", "Text",
 ExpressionUUID -> "10f89f74-8533-4367-90bb-1dee2fd8b5cf"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IGUndirectedGraph", "[", 
    RowBox[{
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"1", "\[Rule]", "1"}], ",", 
         RowBox[{"1", "\[Rule]", "2"}]}], "}"}]}], "]"}], ",", "#"}], "]"}], 
   "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"\"\<Simple\>\"", ",", "\"\<All\>\"", ",", "\"\<Reciprocal\>\""}], 
   "}"}]}]], "Input",
 CellChangeTimes->{{3.7005395974352913`*^9, 3.700539630174531*^9}, {
  3.700540036799738*^9, 3.700540057007451*^9}},
 ExpressionUUID -> "fc48c97c-37ee-4782-ac99-b232ff88f04e"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGReverseGraph", "Subsubsection",
 ExpressionUUID -> "ddb8ec87-753e-424e-a5ce-2fc46ca292a7"],

Cell[TextData[{
 Cell[BoxData["IGReverseGraph"],
  ExpressionUUID -> "d88f6d6c-25d6-44ca-9c69-afc266d5a03d"],
 " reverses the direction of each edge while preserving the following graph \
properties: ",
 Cell[BoxData["EdgeWeight"],
  ExpressionUUID -> "2895d96e-42c2-456b-a025-82740b2edb84"],
 ", ",
 Cell[BoxData["EdgeCapacity"],
  ExpressionUUID -> "b90ce0c6-6e75-4a0c-892c-2ec440998c72"],
 ", ",
 Cell[BoxData["EdgeCost"],
  ExpressionUUID -> "f8bd2aba-7c73-4945-be20-313c0b6dd4da"],
 ", ",
 Cell[BoxData["VertexWeight"],
  ExpressionUUID -> "8f9b7cbe-3564-4fa8-9838-c0e2a8500619"],
 ", ",
 Cell[BoxData["VertexCapacity"],
  ExpressionUUID -> "23e87aca-5119-4aa4-830f-650a1b44b70b"],
 ". Other properties are discarded."
}], "Text",
 ExpressionUUID -> "18f4940c-d719-42c5-864e-31ff1ee5c983"],

Cell["Undirected graphs are returned unmodified.", "Text",
 ExpressionUUID -> "394a49c3-4e4c-47c4-b5dd-b054de078489"],

Cell[TextData[{
 "As of IGraph/M 0.3.0, ",
 Cell[BoxData["IGReverseGraph"],
  ExpressionUUID -> "f41d6c83-ea34-4e38-a288-f66ca3d35930"],
 " does not support multigraphs."
}], "Text",
 ExpressionUUID -> "16fbbea9-9482-4fdb-8fe2-44e61d55f536"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGSimpleGraph", "Subsubsection",
 ExpressionUUID -> "51012f3f-d142-4111-9314-30ba96152024"],

Cell[TextData[{
 Cell[BoxData["IGSimpleGraph"],
  ExpressionUUID -> "1b952653-9fe6-40b9-abc6-58661eae3a5a"],
 " removes self loops and multiple edges between the same vertices, as \
specified in the options."
}], "Text",
 ExpressionUUID -> "c567f88a-8777-47cb-bb7f-583bd10c365a"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "bf5fe99f-a441-4197-b55e-033dfaa8311c"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"SelfLoops", "\[Rule]", "True"}]],
  ExpressionUUID -> "f2df03bd-7b7d-4d6a-8eec-96a267118054"],
 " keeps self loops in the graph."
}], "Item",
 ExpressionUUID -> "36c21515-bb7c-468e-b7d0-b70970d583e2"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "3bc76cc3-d4f0-443c-bd64-bd2b28330c4d"],
 " keeps parallel edges in the graph."
}], "Item",
 ExpressionUUID -> "563c984a-50fa-4425-9b9b-3287e571c34b"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IGSimpleGraph", "[", 
    RowBox[{
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2}, {{{1, 2}, {2, 1}, {1, 2}, {1, 1}}, Null}]]}, 
        TagBox[GraphicsGroupBox[GraphicsComplexBox[CompressedData["
1:eJxV0F9IU1EcB/CLBfNlOhYpmEWx0GIQa0X+ae07KzIiyppUW0kqFa2MoB4U
LMy5okJcEESi9VI+WlLEpGi/TZJtFJUlbQ2WWpalKddZhoQr9fzuwz1wufdw
7jnn+/muqj67/3iaJElFc8/8WwwZkmrIpHx9cBYcaZxbn4qUmu1LL+FEx+Ks
jsMyNry3N9wZ6cEaa7LGZ59E8Z/Hu+L3+9BYd/Pcu/4kot9ztt8+HcP1DHLo
A78QH/eUfrEksKi+pCdzYhrhMy2B108G0HTQFEs3z2A2o9Vy694AVpdvrayr
+Iua9QeGHmoSSF4sn3m7bRYru1OuB9kxDJlDU5n+FFBSu+R3YR9ie60Vnzr/
Ydnm1EnjZFBx2NKye5uvufotcV5/VbywTsO8P0fsp2k+P+VbOJ/W8v1l4n66
yvm+iXyUzvl9Ij+1sO+N8FET+18KPxm5n02iH1L6M4j+SOk3KfqlHXmerLtb
fkAXdubrxx/RhXXu+vOeEdhqn4aiVT5y+hpc8ouvsHUaxtqNz8huzo8ul4ZR
6Q5VG3b6SdOsH9QUfEZ445VIxBmg0T3avOenBnHoxrFea1GQdI6uqvbCBLqc
3omf/iB5W+fHR8j7uldcHgtSm5iTMs8V/5PyvyzOI+U8rbiPlPscIg+VcZ6j
Ii+ZOK9beMjEnt3CSxJ72U/sB/uJ/WA/sR/sJ/ZDo86DUXVe6NQeeNVetKn7
QK66L8jqPqFV9w32g/1gP9gP9oP9YD/Yj/+cWMiL
           "], {
            {Hue[0.6, 0.7, 0.5], Opacity[0.7], Arrowheads[Medium], 
             ArrowBox[BezierCurveBox[{1, 6, 9, 11, 17, 19, 22, 1},
              SplineDegree->7], 0.02261146496815286], 
             ArrowBox[BezierCurveBox[{1, {0., -0.32888149436623376`}, 2}], 
              0.02261146496815286], ArrowBox[{1, 2}, 0.02261146496815286], 
             ArrowBox[BezierCurveBox[{2, {0., 0.32888149436623376`}, 1}], 
              0.02261146496815286]}, 
            {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
             DiskBox[1, 0.02261146496815286], 
             DiskBox[2, 0.02261146496815286]}}]],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FormatType->TraditionalForm,
      FrameTicks->None], ",", 
     RowBox[{"SelfLoops", "\[Rule]", "#1"}], ",", 
     RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "#2"}]}], "]"}], "&"}], "@@@", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"True", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"True", ",", "False"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "True"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"False", ",", "False"}], "}"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.700641674644528*^9, 3.700641682379426*^9}, {
   3.700641748375844*^9, 3.700641757023178*^9}, {3.700641787078874*^9, 
   3.7006418302218513`*^9}, {3.700641882163836*^9, 3.700641896848023*^9}, 
   3.700643848369686*^9},
 ExpressionUUID -> "a157bd10-2fc1-4657-b049-f225e5e63f16"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGDirectedTree", "Subsubsection",
 ExpressionUUID -> "0086b28e-776e-4267-98ae-05a17bbdd2a8"],

Cell[BoxData[
 RowBox[{"?", "IGDirectedTree"}]], "Input",
 ExpressionUUID -> "26225257-4799-468a-8370-d306780a1fc8"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"KaryTree", "[", 
   RowBox[{"10", ",", "3", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}]}], "]"}]}]], "Input",
 ExpressionUUID -> "450436aa-8012-45bd-8467-b733ce6f0626"],

Cell[BoxData[
 RowBox[{"IGDirectedTree", "[", 
  RowBox[{"g", ",", "1"}], "]"}]], "Input",
 ExpressionUUID -> "770af0f3-af2b-4e51-93f7-2c41df88b501"],

Cell[BoxData[
 RowBox[{"IGDirectedTree", "[", 
  RowBox[{"g", ",", "5", ",", 
   RowBox[{"GraphLayout", "\[Rule]", "\"\<LayeredDigraphEmbedding\>\""}]}], 
  "]"}]], "Input",
 ExpressionUUID -> "5e62b8aa-9ad0-411c-8a82-5c2c4c1719cc"],

Cell["\<\
Once the tree is made directed, it is easy to find its leaf nodes:\
\>", "Text",
 ExpressionUUID -> "99a56dcd-48fa-49e6-bb8f-07e4e3107ff0"],

Cell[BoxData[
 RowBox[{"IGSinkVertexList", "[", "%", "]"}]], "Input",
 ExpressionUUID -> "44f690be-d8f7-46a2-a5d0-9f6b7edacd7d"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Weighted graphs", "Subsection",
 ExpressionUUID -> "a8ee1ca0-48fa-4857-944a-21dbc3030803"],

Cell[CellGroupData[{

Cell["IGUnweighted", "Subsubsection",
 ExpressionUUID -> "90bafb2d-920d-473a-a278-7472dd95430a"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGUnweighted", "[", "g", "]"}]],
  ExpressionUUID -> "5ecbcd93-fe89-48d2-b948-14a3b88f2b85"],
 " returns a version of the graph ",
 Cell[BoxData["g"],
  ExpressionUUID -> "dd4b9228-0917-4bc1-835b-dce9c31b199b"],
 " with edge weights removed."
}], "Text",
 ExpressionUUID -> "f09c8506-1fac-4dd4-8e77-a2bab08bedfc"],

Cell[BoxData[
 RowBox[{"?", "IGUnweighted"}]], "Input",
 ExpressionUUID -> "7e64e054-5e26-43a6-b0fd-09b9dd7c3e78"],

Cell["\<\
This function is useful for computing graph properties such as betweenness \
centrality without taking weights into account.\
\>", "Text",
 ExpressionUUID -> "c310b4df-f229-4fc0-8d9f-254bf81549d6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", "\"\<EastAfricaEmbassyAttacks\>\""}], "}"}],
     "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "0aeb4cf9-6503-4617-85ed-5d5ea41646a1"],

Cell[BoxData[
 RowBox[{"IGBetweenness", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "c51a908a-c456-4590-82fe-d91eaee61309"],

Cell[BoxData[
 RowBox[{"IGBetweenness", "@", 
  RowBox[{"IGUnweighted", "[", "g", "]"}]}]], "Input",
 ExpressionUUID -> "e1340f60-8103-425b-97ee-2c25d5532dd3"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGWeightedAdjacencyGraph", "Subsubsection",
 ExpressionUUID -> "77d61a2c-5b01-43da-b467-268ed4a24315"],

Cell[TextData[{
 Cell[BoxData["IGWeightedAdjacencyGraph"],
  ExpressionUUID -> "ce9796ce-b4c1-4655-a1f9-3396b2ff3b03"],
 " constructs an edge-weighted graph from a weighted adjacency matrix. By \
default, ",
 Cell[BoxData["0"],
  ExpressionUUID -> "8e7243e0-702f-410c-ac35-1f1d724bc0aa"],
 " elements in the matrix are taken to indicate a lack of connection. An \
alternative value may be specified to indicate the lack of connections."
}], "Text",
 ExpressionUUID -> "bfe8af42-da4d-4b27-9596-763ff32c8c72"],

Cell[TextData[{
 Cell[BoxData["IGWeightedAdjacencyGraph"],
  ExpressionUUID -> "8c0e9f8d-aea4-4b85-9894-60c435e61a64"],
 " takes the same options as ",
 Cell[BoxData["WeightedAjdacencyGraph"],
  ExpressionUUID -> "94805cf3-b8e9-49af-a8c4-ab90fff711a2"],
 "."
}], "Text",
 ExpressionUUID -> "4b2568da-8995-4998-b369-f7ec961b4312"],

Cell[BoxData[
 RowBox[{"?", "IGWeightedAdjacencyGraph"}]], "Input",
 ExpressionUUID -> "bce278bd-b0b0-4c8d-ba2d-98af42e1ff56"],

Cell[BoxData[
 RowBox[{"IGWeightedAdjacencyGraph", "[", 
  RowBox[{"(", GridBox[{
     {"0", "2", "0"},
     {"2", "0", "3"},
     {"0", "3", "0"}
    }], ")"}], "]"}]], "Input",
 ExpressionUUID -> "54cc9e72-65fc-46d3-86cb-7253a61476bd"],

Cell[TextData[{
 "The built-in ",
 Cell[BoxData["WeightedAdjacencyGraph"],
  ExpressionUUID -> "79a1c392-7953-4596-b959-645e51237a7b"],
 " uses ",
 Cell[BoxData["Infinity"],
  ExpressionUUID -> "a4c31946-65e2-4ae2-99fd-71c7b07c9ee5"],
 " to indicate the lack of connection. This makes it inconsistent with ",
 Cell[BoxData["WeightedAdjacencyMatrix"],
  ExpressionUUID -> "4d98c78c-b97e-4b41-ba70-8fa2b69fb033"],
 ", which uses ",
 Cell[BoxData["0"],
  ExpressionUUID -> "f802ce58-1383-43cc-9bfd-27a30c205cba"],
 ". The purpose of ",
 Cell[BoxData["IGWeightedAdjacencyGraph"],
  ExpressionUUID -> "03ab220d-6801-493f-a5e8-cc93b87d1fc3"],
 " is to be able to easily interoperate with ",
 Cell[BoxData["WeightedAdjacencyMatrix"],
  ExpressionUUID -> "3efe156a-145d-405c-afb9-bc842d556cee"],
 ", and to easily cycle a weighted graph through an adjacency matrix \
representation."
}], "Text",
 ExpressionUUID -> "da6945cd-e5ac-46f1-9cc6-d535e0d6a609"],

Cell[BoxData[
 RowBox[{"wg", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"8", ",", "15"}], "}"}], ",", 
    RowBox[{"EdgeWeight", "\[Rule]", 
     RowBox[{"RandomReal", "[", 
      RowBox[{"1", ",", "15"}], "]"}]}]}], "]"}]}]], "Input",
 ExpressionUUID -> "716b6b3b-a430-45df-9c63-025287e23d03"],

Cell[BoxData[
 RowBox[{
  RowBox[{"WeightedAdjacencyMatrix", "[", "wg", "]"}], "//", 
  "MatrixForm"}]], "Input",
 ExpressionUUID -> "71cf9f0d-e074-4e68-bd3e-78cf4611f129"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"IGWeightedAdjacencyGraph", "@", 
    RowBox[{"WeightedAdjacencyMatrix", "[", "wg", "]"}]}], ",", 
   RowBox[{"WeightedAdjacencyGraph", "@", 
    RowBox[{"WeightedAdjacencyMatrix", "[", "wg", "]"}]}]}], "}"}]], "Input",
 ExpressionUUID -> "6eb41e9e-1d74-4314-bce5-92e8ea98c20e"],

Cell[BoxData[
 RowBox[{"PropertyValue", "[", 
  RowBox[{"%", ",", "EdgeWeight"}], "]"}]], "Input",
 ExpressionUUID -> "2f956617-fed2-4d31-8852-3aaffacb09a6"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"IGWeightedAdjacencyGraph", "[", 
   RowBox[{"g", ",", "Infinity"}], "]"}]],
  ExpressionUUID -> "d3c33489-3524-477d-a7dc-7b7e5a383172"],
 " is equivalent to ",
 Cell[BoxData[
  RowBox[{"WeightedAdjacencyGraph", "[", "g", "]"}]],
  ExpressionUUID -> "2355097e-fe95-4a53-97cf-a0e03a8b4f47"],
 "."
}], "Text",
 ExpressionUUID -> "0f1924ec-00f1-415c-b64c-4c8d5b27a55f"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"IGWeightedAdjacencyGraph", "[", 
    RowBox[{
     RowBox[{"(", GridBox[{
        {"0", "2", "0"},
        {"2", "0", "3"},
        {"0", "3", "0"}
       }], ")"}], ",", "Infinity"}], "]"}], ",", 
   RowBox[{"WeightedAdjacencyGraph", "[", 
    RowBox[{"(", GridBox[{
       {"0", "2", "0"},
       {"2", "0", "3"},
       {"0", "3", "0"}
      }], ")"}], "]"}]}], "}"}]], "Input",
 ExpressionUUID -> "83b20193-e854-4039-bb7c-cc4d3e495d46"],

Cell[TextData[{
 "Use ",
 Cell[BoxData[
  RowBox[{"DirectedEdges", "\[Rule]", "True"}]],
  ExpressionUUID -> "f19d6f03-dba2-43e6-b1b2-c96d4d05e566"],
 " to force creating a directed graph even from a symmetric matrix."
}], "Text",
 ExpressionUUID -> "98053b89-6cd1-44ba-a59c-129ab7363f75"],

Cell[BoxData[
 RowBox[{"IGWeightedAdjacencyGraph", "[", 
  RowBox[{
   RowBox[{"(", GridBox[{
      {"0", "2", "0"},
      {"2", "0", "3"},
      {"0", "3", "0"}
     }], ")"}], ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "1d085603-c1f0-4e0b-995f-21579fe3eca2"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGEdgeWeightedQ", "Subsubsection",
 ExpressionUUID -> "afd5085c-7b85-46d8-8c90-d6b3d38991e4"],

Cell[BoxData[
 RowBox[{"?", "IGEdgeWeightedQ"}]], "Input",
 ExpressionUUID -> "f71ff115-acdf-4d47-af41-ef35c08e348a"],

Cell[TextData[{
 "Unlike ",
 Cell[BoxData["WeightedGraphQ"],
  ExpressionUUID -> "d9e778e7-9675-47f0-a4c1-c14288aa41b6"],
 ", ",
 Cell[BoxData["IGEdgeWeightedQ"],
  ExpressionUUID -> "d1dccc92-5859-4d1a-add5-a37fdbf64a06"],
 " does not return ",
 Cell[BoxData["True"],
  ExpressionUUID -> "1046b991-324d-4c39-8f3b-e5609322342a"],
 " for vertex weighted graphs that have no edge weights."
}], "Text",
 ExpressionUUID -> "08f91b39-562c-4ae2-bd6b-72bf5468b98f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
     RowBox[{"VertexWeight", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"1.2", ",", "2.3"}], "}"}]}]}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "44b20f05-03d1-4f04-964f-44647eb878c5"],

Cell[BoxData[
 RowBox[{"IGEdgeWeightedQ", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "44ac4e37-26b6-45d6-a424-fea95777f8ed"],

Cell[BoxData[
 RowBox[{"IGEdgeWeightedQ", "[", 
  RowBox[{"SetProperty", "[", 
   RowBox[{"g", ",", 
    RowBox[{"EdgeWeight", "\[Rule]", 
     RowBox[{"{", "1", "}"}]}]}], "]"}], "]"}]], "Input",
 ExpressionUUID -> "e90d2cec-acdf-4667-b15c-b9fea2ccb8a9"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGVertexWeightedQ", "Subsubsection",
 ExpressionUUID -> "854f9b83-317a-4e0c-92bd-c5364e667458"],

Cell[BoxData[
 RowBox[{"?", "IGVertexWeightedQ"}]], "Input",
 ExpressionUUID -> "2648f9e3-a2de-4518-a131-d67ac700c84d"],

Cell["\<\
Unlike WeightedGraphQ, IGVertexWeightedQ does not return True for edge \
weighted graphs that have no vertex weighted.\
\>", "Text",
 ExpressionUUID -> "702e0174-7689-4d49-81d2-eda3df74f2c6"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", "\[UndirectedEdge]", "2"}], "}"}], ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"{", "3.1", "}"}]}]}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "e1d90765-40d0-4391-9c7b-c07954b1396b"],

Cell[BoxData[
 RowBox[{"IGVertexWeightedQ", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "4977e317-98a7-4989-a512-09f762363927"],

Cell[BoxData[
 RowBox[{"IGVertexWeightedQ", "[", 
  RowBox[{"SetProperty", "[", 
   RowBox[{"g", ",", 
    RowBox[{"VertexWeight", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"2", ",", "1"}], "}"}]}]}], "]"}], "]"}]], "Input",
 ExpressionUUID -> "5e9929a9-e490-447a-a241-950af97be3a8"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGVertexStrength", "Subsubsection",
 ExpressionUUID -> "c2681b27-7686-480a-bc9f-c9535467be75"],

Cell[TextData[{
 Cell[BoxData["IGVertexStrength"],
  ExpressionUUID -> "78671b93-d8f2-43c3-b0f0-aedb061aad0b"],
 " returns the strength of each vertex, i.e. the total edge weight of edges \
adjacent to it."
}], "Text",
 ExpressionUUID -> "fca91790-ccf8-446a-a1d9-b830077e3064"],

Cell[BoxData[
 RowBox[{"?", "IGVertex*Strength"}]], "Input",
 ExpressionUUID -> "b49e9332-23f8-43dc-974a-425e2eb55bfa"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<EurovisionVotes\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "cb90548d-9078-492d-85ed-69bd4342677f"],

Cell[BoxData[
 RowBox[{"IGVertexStrength", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "dd7eb0c4-addf-41b6-9621-6595fe9eeee1"],

Cell["\<\
In- and out-strength can be calculated separately for directed graphs.\
\>", "Text",
 ExpressionUUID -> "130dba5f-0ef2-4116-b6a8-2d277565defc"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"IGVertexInStrength", "[", "g", "]"}], ",", 
   RowBox[{"IGVertexOutStrength", "[", "g", "]"}]}], "}"}]], "Input",
 ExpressionUUID -> "7daf8efa-a4b3-4d82-ad36-22be7851b04d"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IGVertexInStrength", "[", "g", "]"}], "+", 
   RowBox[{"IGVertexOutStrength", "[", "g", "]"}]}], "==", 
  RowBox[{"IGVertexStrength", "[", "g", "]"}]}]], "Input",
 ExpressionUUID -> "8e72e104-7708-4012-88ef-cf04881de896"],

Cell["Scale vertices by strength:", "Text",
 ExpressionUUID -> "126e1316-bd7b-494f-a9e0-b862cbfc39a5"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"{", 
     RowBox[{"\"\<Scaled\>\"", ",", 
      RowBox[{"0.1", "#"}]}], "}"}], "&"}], ",", 
   RowBox[{"VertexSize", "\[Rule]", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Normalize", "[", 
       RowBox[{
        RowBox[{"IGVertexStrength", "[", "#", "]"}], ",", "Max"}], "]"}], 
      "&"}], ")"}]}], ",", "g"}], "]"}]], "Input",
 ExpressionUUID -> "bcfeaeb9-01ed-4d0f-af45-3212a0718848"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Property handling functions", "Subsection",
 ExpressionUUID -> "7b2d5a8c-fa78-4745-b1fe-164a7cbefab9"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{
      "\"\<NetworkGraph\>\"", ",", "\"\<EastAfricaEmbassyAttacks\>\""}], 
      "}"}], "]"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "ebc7be50-ca83-454c-bb74-1b6cbfdd385b"],

Cell[BoxData[
 RowBox[{"?", "IGVertexPropertyList"}]], "Input",
 ExpressionUUID -> "68f3356d-d3d8-403e-ab07-e97e7f075916"],

Cell[BoxData[
 RowBox[{"?", "IGEdgePropertyList"}]], "Input",
 ExpressionUUID -> "425416bb-a888-40f2-8bda-d05fbc4bf1d3"],

Cell["Find what custom edge and vertex properties this graph has:", "Text",
 ExpressionUUID -> "2d4777aa-2dd9-487f-a136-203d0e445762"],

Cell[BoxData[
 RowBox[{"IGVertexPropertyList", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "c8dcb349-a70a-452a-93b8-3abe2b3c2a8d"],

Cell[BoxData[
 RowBox[{"IGEdgePropertyList", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "a910c0fa-4e7f-473e-894f-dc3ea42852b3"],

Cell[BoxData[
 RowBox[{"?", "IGVertexProp"}]], "Input",
 ExpressionUUID -> "031f12c8-c92d-41ba-8a0e-31aab0855b4e"],

Cell[BoxData[
 RowBox[{"?", "IGEdgeProp"}]], "Input",
 ExpressionUUID -> "e619555b-6bb8-4fbe-af47-604e6faed800"],

Cell[TextData[{
 "Extract the ",
 Cell[BoxData["\"\<Group\>\""],
  ExpressionUUID -> "80f744c4-6ff7-408b-9487-22edf33d56f9"],
 " property of each node:"
}], "Text",
 ExpressionUUID -> "7ee6847e-0ad9-48cb-80fb-c1b081aa3311"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGVertexProp", "[", "\"\<Group\>\"", "]"}], "[", "g", 
  "]"}]], "Input",
 ExpressionUUID -> "bb65be85-cf32-4deb-aec6-baf8084526ed"],

Cell["Extract the weight of each edge:", "Text",
 ExpressionUUID -> "8942e1c3-528b-452b-9644-1111cf0f663c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGEdgeProp", "[", "EdgeWeight", "]"}], "[", "g", "]"}]], "Input",
 ExpressionUUID -> "a6440c37-1c38-4dcb-87aa-239a1cc0d0f1"],

Cell[BoxData[
 RowBox[{"?", "IGVertexMap"}]], "Input",
 ExpressionUUID -> "570c1115-b5e7-4d83-b970-6c398b8f1257"],

Cell[BoxData[
 RowBox[{"?", "IGEdgeMap"}]], "Input",
 ExpressionUUID -> "e3494b1c-22eb-4c8e-bd3b-566370e4b00d"],

Cell[TextData[{
 "Show the value of the ",
 Cell[BoxData["\"\<FullName\>\""],
  ExpressionUUID -> "62117c0c-f395-4668-bfb5-e03bc5ca97c6"],
 " custom property in tooltips."
}], "Text",
 ExpressionUUID -> "f34bfaa0-823c-4f78-9537-280a9490b2e9"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", 
  RowBox[{
   RowBox[{"#", "&"}], ",", 
   RowBox[{"Tooltip", "\[Rule]", 
    RowBox[{"IGVertexProp", "[", "\"\<FullName\>\"", "]"}]}], ",", "g"}], 
  "]"}]], "Input",
 ExpressionUUID -> "fe3136a0-cc68-44b1-b084-193e83c1351a"],

Cell[CellGroupData[{

Cell["Styling graphs according to stored or computed properties", \
"Subsubsection",
 ExpressionUUID -> "3ae6d3fc-e754-4ea5-a868-095fc7913d83"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"Graph", "[", 
    RowBox[{
     RowBox[{"ExampleData", "[", 
      RowBox[{"{", 
       RowBox[{
       "\"\<NetworkGraph\>\"", ",", "\"\<EastAfricaEmbassyAttacks\>\""}], 
       "}"}], "]"}], ",", 
     RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "5c06d8b1-c2ee-4e29-bf04-762527b4d1f2"],

Cell["Scale vertices according to degree:", "Text",
 ExpressionUUID -> "a06df826-de80-4ba2-8529-8dbe4a918781"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"0.1", "#"}], "&"}], ",", 
   RowBox[{"VertexSize", "\[Rule]", "VertexDegree"}], ",", "g"}], 
  "]"}]], "Input",
 ExpressionUUID -> "3b5ccc26-11e8-4088-a53a-eff635aae09f"],

Cell[TextData[{
 "Let us colour edges by betweenness and set their thickness based on weight. \
Betweenness calculations treat high weight values as a \
\[OpenCurlyDoubleQuote]long distance\[CloseCurlyDoubleQuote], thus we invert ",
 Cell[BoxData["EdgeWeight"],
  ExpressionUUID -> "8f45a87a-4f99-4217-aabe-357f4a0228cd"],
 " before calculating the betweenness. To be able to use the original \
weights, we save them into a new ",
 Cell[BoxData["\"\<weight\>\""],
  ExpressionUUID -> "0a9a7708-8fda-4d2f-b4b6-063b14344184"],
 " property."
}], "Text",
 ExpressionUUID -> "76175f63-9b95-4f6b-ac83-df04abf7b033"],

Cell[TextData[{
 "Calls to ",
 Cell[BoxData["IGEdgeMap"],
  ExpressionUUID -> "e7af92e2-2ebf-4e28-8dcf-16f5e3f406ef"],
 " or ",
 Cell[BoxData["IGVertexMap"],
  ExpressionUUID -> "edbf94fd-3fc6-48f7-87bc-f3391d835b2b"],
 " can be conveniently chained together using their operator form."
}], "Text",
 ExpressionUUID -> "1976e416-c81e-4f06-a433-6eb4c4cb78a5"],

Cell[BoxData[
 RowBox[{"g", "//", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IGEdgeMap", "[", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "save", " ", "original", " ", "weight", " ", "in", " ", "\"\<weight\>\"",
       " ", "property"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{"Identity", ",", 
     RowBox[{"\"\<weight\>\"", "\[Rule]", 
      RowBox[{"IGEdgeProp", "[", "EdgeWeight", "]"}]}]}], 
    "\[IndentingNewLine]", "]"}], "/*", "\[IndentingNewLine]", 
   RowBox[{"IGEdgeMap", "[", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
     "invert", " ", "edge", " ", "weights", " ", "for", " ", "betweenness", 
      " ", "calculation"}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", "#"}], "&"}], ",", "EdgeWeight"}], 
    "\[IndentingNewLine]", "]"}], "/*", "\[IndentingNewLine]", 
   RowBox[{"IGEdgeMap", "[", " ", 
    RowBox[{"(*", " ", 
     RowBox[{
      RowBox[{"thickness", " ", "by", " ", "original", " ", "weight"}], ",", 
      " ", 
      RowBox[{
      "colour", " ", "by", " ", "betweenness", " ", "based", " ", "on", " ", 
       "inverse", " ", "weight"}]}], " ", "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"Directive", "[", 
       RowBox[{
        RowBox[{"AbsoluteThickness", "[", 
         RowBox[{"9", "#1"}], "]"}], ",", 
        RowBox[{
         RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], "[", "#2", 
         "]"}]}], "]"}], "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"EdgeStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"IGEdgeProp", "[", "\"\<weight\>\"", "]"}], ",", 
        RowBox[{"Rescale", "@*", "EdgeBetweennessCentrality"}]}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}]}]}]], "Input",
 ExpressionUUID -> "6eebd448-3a0d-47ce-a394-88d7820fb82a"],

Cell["Label a graph with circular layout:", "Text",
 ExpressionUUID -> "38db27d6-debd-41a1-8f86-3499c0aba8b1"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Function", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"name", ",", "coord"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{"Placed", "[", "\[IndentingNewLine]", 
      RowBox[{"name", ",", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{".5", ",", ".5"}], "}"}], ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "0.8"}], 
           RowBox[{"Normalize", "[", "coord", "]"}]}], "+", 
          RowBox[{"{", 
           RowBox[{".5", ",", ".5"}], "}"}]}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Rotate", "[", 
         RowBox[{"#", ",", 
          RowBox[{"Mod", "[", 
           RowBox[{
            RowBox[{"ArcTan", "@@", "coord"}], ",", "Pi", ",", 
            RowBox[{
             RowBox[{"-", "Pi"}], "/", "2"}]}], "]"}]}], "]"}], "&"}]}], 
      "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"VertexLabels", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"VertexList", ",", 
      RowBox[{"IGVertexProp", "[", "VertexCoordinates", "]"}]}], "}"}]}], ",",
    "\[IndentingNewLine]", 
   RowBox[{"IGLayoutCircle", "[", 
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<FamilyGathering\>\""}], "}"}],
      "]"}], "]"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "768b0e92-3b53-42e5-bba5-60f4ac445fd0"],

Cell["\<\
Use edge weights as edge labels, and line up labels with edges:\
\>", "Text",
 ExpressionUUID -> "f49581cd-ea17-48dd-9fb5-33ae2bf902a7"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"RandomGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}], ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"RandomReal", "[", 
       RowBox[{"1", ",", "20"}], "]"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.702909631389135*^9, 3.702909639053191*^9}, {
   3.702909679780795*^9, 3.702909684995865*^9}, 3.7029102210111237`*^9},
 ExpressionUUID -> "3d72ff0b-e612-4873-9c02-b3bb0f49bf70"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "returns", " ", "edge", " ", "angle", " ", "for", " ", "each", " ", 
    "edge"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"edgeAngle", "[", "g_", "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"With", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"asc", "=", 
       RowBox[{"AssociationThread", "[", 
        RowBox[{
         RowBox[{"VertexList", "[", "g", "]"}], ",", 
         RowBox[{"GraphEmbedding", "[", "g", "]"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{
       RowBox[{"ArcTan", "@@", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"asc", "[", "#1", "]"}], "-", 
          RowBox[{"asc", "[", "#2", "]"}]}], ")"}]}], "&"}], "@@@", 
      RowBox[{"EdgeList", "[", "g", "]"}]}]}], "\[IndentingNewLine]", 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.702909689917468*^9, 3.702909762993664*^9}, {
  3.702910344236474*^9, 3.702910353228096*^9}},
 ExpressionUUID -> "2e0d0c4d-648a-4094-bfec-9999f8c1a64f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGLayoutDavidsonHarel", "[", "g", "]"}], "//", 
  "\[IndentingNewLine]", 
  RowBox[{"IGEdgeMap", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Function", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"weight", ",", "angle"}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Placed", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
          RowBox[{"NumberForm", "[", 
           RowBox[{"weight", ",", "2"}], "]"}], ",", 
          RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
        "\[IndentingNewLine]", "Center", ",", 
        RowBox[{
         RowBox[{"Rotate", "[", 
          RowBox[{"#", ",", 
           RowBox[{"Mod", "[", 
            RowBox[{"angle", ",", "Pi", ",", 
             RowBox[{
              RowBox[{"-", "Pi"}], "/", "2"}]}], "]"}]}], "]"}], "&"}]}], 
       "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "]"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"EdgeLabels", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"IGEdgeProp", "@", "EdgeWeight"}], ",", "edgeAngle"}], 
      "}"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 CellChangeTimes->{{3.7029096412502003`*^9, 3.702909676684216*^9}, {
  3.702909770785358*^9, 3.702909959548255*^9}, {3.702910021776483*^9, 
  3.702910026584179*^9}},
 ExpressionUUID -> "2f857965-e471-4334-b687-9d78e5c8b273"],

Cell["\<\
Colour vertices based on their graph distance form a given vertex:\
\>", "Text",
 ExpressionUUID -> "782b9c47-018d-459c-8acb-e2da258f792d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<DolphinSocialNetwork\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "000c2408-75d8-4849-9ae7-c28f84f927fe"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Graph", "[", 
   RowBox[{"g", ",", 
    RowBox[{"EdgeStyle", "\[Rule]", "LightGray"}], ",", 
    RowBox[{"VertexSize", "\[Rule]", "1"}], ",", 
    RowBox[{"ImageSize", "\[Rule]", "Medium"}]}], "]"}], "//", 
  "\[IndentingNewLine]", 
  RowBox[{"IGVertexMap", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ColorData", "[", "\"\<Rainbow\>\"", "]"}], ",", 
    RowBox[{"VertexStyle", "->", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Rescale", "@", 
        RowBox[{"First", "@", 
         RowBox[{"IGDistanceMatrix", "[", 
          RowBox[{"#", ",", 
           RowBox[{"{", "\"\<Feather\>\"", "}"}]}], "]"}]}]}], "&"}], 
      ")"}]}]}], "\[IndentingNewLine]", "]"}]}]], "Input",
 ExpressionUUID -> "b6b42fee-ba69-4faa-bf6d-09334b79f003"],

Cell["\<\
Colour the vertices of an annotated bipartite disease-gene graph based on \
whether they represent diseases or genes.\
\>", "Text",
 ExpressionUUID -> "d534e65e-27f6-4127-a6f5-98d31944ea3b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", "\"\<BipartiteDiseasomeNetwork\>\""}], 
     "}"}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "459fca6e-f865-47e9-be0c-31a77ec2efef"],

Cell["There are two types of vertices:", "Text",
 ExpressionUUID -> "474745e6-0b3a-4a54-97ed-b88d449e3108"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IGVertexProp", "[", "\"\<Type\>\"", "]"}], "[", "g", "]"}], "//", 
  "Union"}]], "Input",
 ExpressionUUID -> "a46afbae-394f-4cae-ae37-6da866d1e085"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"\[LeftAssociation]", 
    RowBox[{
     RowBox[{"\"\<Disease\>\"", "\[Rule]", "Red"}], ",", 
     RowBox[{"\"\<Entrez\>\"", "\[Rule]", "Blue"}]}], "\[RightAssociation]"}],
    ",", "\[IndentingNewLine]", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"IGVertexProp", "[", "\"\<Type\>\"", "]"}]}], ",", 
   "\[IndentingNewLine]", "g"}], "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "a3f08766-2767-4076-ada4-5d6fbdd826ca"]
}, Closed]],

Cell[CellGroupData[{

Cell["Style social network by gender", "Subsubsection",
 ExpressionUUID -> "06ac2f34-0979-4b38-8d4e-24b2490d9114"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"ExampleData", "[", 
   RowBox[{"{", 
    RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<FamilyGathering\>\""}], "}"}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "83518c36-dd4b-47c4-8499-6e942bcdb41f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGVertexMap", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Interpreter", "[", "\"\<GivenName\>\"", "]"}], "[", "#", 
        "]"}], "[", "\"\<Gender\>\"", "]"}], "&"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"\"\<gender\>\"", "->", "VertexList"}], ",", 
     "\[IndentingNewLine]", "g"}], "\[IndentingNewLine]", "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.703157286852749*^9, 3.703157302425585*^9}, {
   3.703157347818416*^9, 3.703157371960359*^9}, {3.70315741780672*^9, 
   3.703157515938076*^9}, 3.703157726311997*^9},
 ExpressionUUID -> "50b1e655-efe0-466b-a3f0-c3064df37c00"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"<|", 
    RowBox[{
     RowBox[{
      TemplateBox[{"\"male\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Gender\"", ",", "\"Male\""}], "]"}],
        "\"Entity[\\\"Gender\\\", \\\"Male\\\"]\"","\"gender\""},
       "Entity"], "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[0., 0.749, 1.], RectangleBox[{0, -1}, {2, 1}]}},
          AspectRatio->1,
          Frame->True,
          FrameStyle->RGBColor[0., 0.49933333333333335`, 0.6666666666666667],
          FrameTicks->None,
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[0., 0.749, 1.]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[0., 0.749, 1.]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[0., 0.749, 1.],
       Editable->False,
       Selectable->False]}], ",", 
     RowBox[{
      TemplateBox[{"\"female\"",RowBox[{"Entity", "[", 
          RowBox[{"\"Gender\"", ",", "\"Female\""}], "]"}],
        "\"Entity[\\\"Gender\\\", \\\"Female\\\"]\"","\"gender\""},
       "Entity"], "\[Rule]", 
      InterpretationBox[
       ButtonBox[
        TooltipBox[
         GraphicsBox[{
           {GrayLevel[0], RectangleBox[{0, 0}]}, 
           {GrayLevel[0], RectangleBox[{1, -1}]}, 
           {RGBColor[1., 0.388195, 0.278405], RectangleBox[{0, -1}, {2, 1}]}},
          
          AspectRatio->1,
          Frame->True,
          
          FrameStyle->RGBColor[
           0.6666666666666667, 0.2587966666666667, 0.18560333333333334`],
          FrameTicks->None,
          
          ImageSize->
           Dynamic[{
            Automatic, 
             1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
              Magnification])}],
          PlotRangePadding->None],
         "RGBColor[1., 0.388195, 0.278405]"],
        Appearance->None,
        BaseStyle->{},
        BaselinePosition->Baseline,
        ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
          If[
           Not[
            AbsoluteCurrentValue["Deployed"]], 
           SelectionMove[Typeset`box$, All, Expression]; 
           FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
           FrontEnd`Private`$ColorSelectorInitialColor = 
            RGBColor[1., 0.388195, 0.278405]; 
           FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
           MathLink`CallFrontEnd[
             FrontEnd`AttachCell[Typeset`box$, 
              FrontEndResource["RGBColorValueSelector"], {
              0, {Left, Bottom}}, {Left, Top}, 
              "ClosingActions" -> {
               "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
        DefaultBaseStyle->{},
        Evaluator->Automatic,
        Method->"Preemptive"],
       RGBColor[1., 0.388195, 0.278405],
       Editable->False,
       Selectable->False]}]}], "|>"}], ",", "\[IndentingNewLine]", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"IGVertexProp", "[", "\"\<gender\>\"", "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"Graph", "[", 
    RowBox[{"g", ",", 
     RowBox[{"EdgeStyle", "\[Rule]", "Gray"}], ",", 
     RowBox[{"VertexSize", "\[Rule]", "Large"}]}], "]"}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.7031575299674397`*^9, 3.70315766246682*^9}},
 ExpressionUUID -> "1c5590fa-7907-4d84-9cc0-127e12d2904c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Transform vertex coordinates", "Subsubsection",
 ExpressionUUID -> "e6e84082-02ff-4c77-b61b-b8e52bcca5ef"],

Cell["\<\
Transform the vertex coordinates of a graph to obtain a more pleasing layout:\
\
\>", "Text",
 ExpressionUUID -> "cf909ffc-cdf8-4499-a30d-6ae6bef2862a"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Graph", "[", 
   RowBox[{
    RowBox[{"GraphData", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<Apollonian\>\"", ",", "5"}], "}"}], ",", 
      "\"\<EdgeList\>\""}], "]"}], ",", 
    RowBox[{"GraphLayout", "\[Rule]", "\"\<PlanarEmbedding\>\""}]}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "d4316526-3401-4e99-8eeb-e937959ae21d"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", 
  RowBox[{
   RowBox[{"AffineTransform", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"1", ",", 
        FractionBox["1", "2"]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"0", ",", 
        FractionBox[
         SqrtBox["3"], "2"]}], "}"}]}], "}"}], "]"}], ",", 
   "VertexCoordinates", ",", "g"}], "]"}]], "Input",
 ExpressionUUID -> "7a2457c5-5337-4609-972f-d7ac04f8eaf0"],

Cell["\<\
Project coordinates from the sphere to the plane using stereographic \
projection:\
\>", "Text",
 ExpressionUUID -> "07e1277b-bf82-49e9-9f35-69cb9b474191"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Graph3D", "[", 
   RowBox[{"GraphData", "[", 
    RowBox[{"\"\<DodecahedralGraph\>\"", ",", "\"\<EdgeList\>\""}], "]"}], 
   "]"}]}]], "Input",
 ExpressionUUID -> "57127d0c-b17f-4896-95cb-cd2c910fca7f"],

Cell[BoxData[
 RowBox[{
  RowBox[{"project", "=", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"CoordinateTransform", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\"\<Standard\>\"", "\[Rule]", "\"\<Stereographic\>\""}], ",", 
        RowBox[{"{", 
         RowBox[{"\"\<Sphere\>\"", ",", "1"}], "}"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Rest", "@", 
       RowBox[{"CoordinateTransform", "[", 
        RowBox[{
         RowBox[{"\"\<Cartesian\>\"", "\[Rule]", "\"\<Spherical\>\""}], ",", 
         "#"}], "]"}]}]}], "\[IndentingNewLine]", "]"}], "&"}]}], 
  ";"}]], "Input",
 ExpressionUUID -> "9696c104-9c95-4036-bd4c-9b40a6a792cd"],

Cell[BoxData[
 RowBox[{"Graph", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"IGVertexMap", "[", 
    RowBox[{"project", ",", 
     RowBox[{"VertexCoordinates", "\[Rule]", 
      RowBox[{"Standardize", "@*", 
       RowBox[{"IGVertexProp", "[", "VertexCoordinates", "]"}]}]}], ",", 
     "g"}], "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"GraphLayout", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"\"\<Dimension\>\"", "\[Rule]", "2"}], "}"}]}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "0d1c2b92-0527-4224-8eb3-b1197a2a9d8c"]
}, Closed]],

Cell[CellGroupData[{

Cell["Copy one property into another", "Subsubsection",
 ExpressionUUID -> "6f1193a0-a603-48e7-b38b-92d3d2e5437f"],

Cell["Let us import this network:", "Text",
 ExpressionUUID -> "85672436-6a0f-4fa9-8e85-2d6ddfd95701"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"Import", "[", 
   RowBox[{
   "\"\<http://networkdata.ics.uci.edu/data/lesmis/lesmis.gml\>\"", ",", 
    RowBox[{"ImageSize", "\[Rule]", "Large"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "c7bca739-9428-4101-94cf-830144cabc16"],

Cell["\<\
According to the description, this should be a weighted graph:\
\>", "Text",
 ExpressionUUID -> "dc21a67a-df17-446f-aeba-f9dddf08b8f5"],

Cell[BoxData[
 RowBox[{"Import", "[", 
  "\"\<http://networkdata.ics.uci.edu/data/lesmis/lesmis.txt\>\"", 
  "]"}]], "Input",
 ExpressionUUID -> "fccfd2cf-6476-42a2-b841-f67772a3f9b1"],

Cell["But as imported by Mathematica, it is not edge-weighted:", "Text",
 ExpressionUUID -> "37712bf3-e547-44a0-993c-9699049d39e8"],

Cell[BoxData[
 RowBox[{"IGEdgeWeightedQ", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "6ba96223-f1a3-4ff5-ba3b-90a161b6c18b"],

Cell[TextData[{
 "This is because the edge weights are imported into the ",
 Cell[BoxData["\"\<value\>\""],
  ExpressionUUID -> "7ad45e19-e3f1-48db-9bd3-54231c276243"],
 " property instead of the standard ",
 Cell[BoxData["EdgeWeight"],
  ExpressionUUID -> "fd1c12e8-9967-42a5-aa0b-4ebd65080d6b"],
 ":"
}], "Text",
 ExpressionUUID -> "55d25a43-b67a-48db-b748-de439804167b"],

Cell[BoxData[
 RowBox[{"IGEdgePropertyList", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "8a076542-bbb3-4229-ae3e-55095fc61121"],

Cell["Copy the values of one property into another:", "Text",
 ExpressionUUID -> "aa49859f-d64f-4e41-88fd-7c6f7e3b1cf1"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGEdgeMap", "[", 
    RowBox[{
     RowBox[{"#", "&"}], ",", 
     RowBox[{"EdgeWeight", "\[Rule]", 
      RowBox[{"IGEdgeProp", "[", "\"\<value\>\"", "]"}]}], ",", "g"}], 
    "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "2ebd253f-d2db-4b2f-bff9-9275221380cc"],

Cell["Now we have a weighted graph.", "Text",
 ExpressionUUID -> "37e7bf9b-9bd4-4db9-b11d-8f51da3baa78"],

Cell[BoxData[
 RowBox[{"IGEdgeWeightedQ", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "52b8522d-1e91-45c8-a165-94b1d7caddaf"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Import and export functions", "Subsection",
 ExpressionUUID -> "6b9020ef-f404-441e-bbc5-4d72cffdd136"],

Cell[TextData[{
 "IGraph/M provides exporters for certain graph formats. Exporting is done \
using ",
 Cell[BoxData["IGExport"],
  ExpressionUUID -> "5a1bb808-503f-4d60-800b-d39e82028abb"],
 " and ",
 Cell[BoxData["IGExportString"],
  ExpressionUUID -> "ac7712ca-dccb-4eec-ac26-8573e94d8615"],
 ", which work analogously to the builtin ",
 Cell[BoxData["Export"],
  ExpressionUUID -> "ddb7d169-8fa8-4e77-8e15-8fb3b6ee6ce0"],
 " and ",
 Cell[BoxData["ExportString"],
  ExpressionUUID -> "260da69a-b26a-4198-9b85-6ed8a9af7d82"],
 ". The supported export formats are listed in ",
 Cell[BoxData["$IGExportFormats"],
  ExpressionUUID -> "a641c5e6-b119-4e12-a602-a7a10e4f14aa"],
 ":"
}], "Text",
 ExpressionUUID -> "a6f22f3a-286b-4325-b582-64605b4bc71e"],

Cell[BoxData["$IGExportFormats"], "Input",
 ExpressionUUID -> "1fa19489-a270-4f1f-b5fa-4c5a36d3a3c5"],

Cell[CellGroupData[{

Cell["GraphML", "Subsubsection",
 ExpressionUUID -> "524e6974-8e0c-4f4d-8bef-d9f7cd9f4bd9"],

Cell[TextData[{
 "As of Mathematica 11.2, the built-in Export function produces non-standard \
GraphML files that cannot be read by some other graph manipulation packages, \
such as the igraph library itself. ",
 Cell[BoxData["IGExport"],
  ExpressionUUID -> "313910a3-4a83-4e07-92cc-5449033c782a"],
 " provides a standards compliant implementation."
}], "Text",
 ExpressionUUID -> "9a15030c-6ebb-4d30-a3b0-c4c3c8203a9e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"IGExportString", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ExampleData", "[", 
     RowBox[{"{", 
      RowBox[{"\"\<NetworkGraph\>\"", ",", "\"\<EurovisionVotes\>\""}], "}"}],
      "]"}], ",", "\[IndentingNewLine]", "\"\<GraphML\>\""}], 
   "\[IndentingNewLine]", "]"}], "//", 
  RowBox[{
   RowBox[{"Short", "[", 
    RowBox[{"#", ",", "15"}], "]"}], "&"}], " ", 
  RowBox[{"(*", " ", 
   RowBox[{
   "avoid", " ", "showing", " ", "more", " ", "than", " ", "15", " ", 
    "lines"}], " ", "*)"}]}]], "Input",
 ExpressionUUID -> "9127ab6f-c4f0-4e4c-8086-bbb412a1b452"]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["Other utility functions", "Subsection",
 ExpressionUUID -> "386f6d4b-3666-4959-8f2d-185c7480a101"],

Cell[CellGroupData[{

Cell["IGShorthand", "Subsubsection",
 ExpressionUUID -> "16b5f24d-d786-48d2-aee4-0d9f8f9aee55"],

Cell[BoxData[
 RowBox[{"?", "IGShorthand"}]], "Input",
 ExpressionUUID -> "e1197ffb-6fd8-4da0-af4f-26ed479159d1"],

Cell["The available options are:", "Text",
 ExpressionUUID -> "ffb9ab81-5abc-42de-b24d-2405b4d68693"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"SelfLoops", "\[Rule]", "True"}]],
  ExpressionUUID -> "78d5a4be-580c-420c-be8a-8b7561a3e44b"],
 " keeps self loops in the graph."
}], "Item",
 ExpressionUUID -> "0fcba618-f6c4-4db9-a23f-e1a592bdbaee"],

Cell[TextData[{
 Cell[BoxData[
  RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]],
  ExpressionUUID -> "9abe6374-ffb2-4146-9287-1b60cfd8d82f"],
 " keeps parallel edges in the graph."
}], "Item",
 ExpressionUUID -> "dab67fb7-a80d-4fe9-b7c1-226ef3d87a05"]
}, Open  ]],

Cell["Construct a cycle graph.", "Text",
 ExpressionUUID -> "a6f31a97-b4de-4cb2-b135-6472d89fe23e"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", "\"\<1-2-3-4-1\>\"", "]"}]], "Input",
 ExpressionUUID -> "a4b56bf0-c66f-4b9c-b8db-f102ffb0cb6c"],

Cell[TextData[{
 "Vertex labels are shown by default. They can be turned off using ",
 Cell[BoxData[
  RowBox[{"VertexLabels", "\[Rule]", "None"}]],
  ExpressionUUID -> "8baa589a-26f7-493d-8ac0-767602eb0aa3"],
 "."
}], "Text",
 ExpressionUUID -> "400af4e2-7e0f-40af-bf2d-429eee4fe89b"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", 
  RowBox[{"\"\<1-2-3-1\>\"", ",", 
   RowBox[{"VertexLabels", "\[Rule]", "None"}]}], "]"}]], "Input",
 ExpressionUUID -> "fd21e417-35a7-4cfd-bb3c-c979fc770e89"],

Cell[TextData[{
 "The interpretation of ",
 Cell[BoxData["-"],
  ExpressionUUID -> "cc9be28d-4b0c-4ed4-9ccf-327e8d407925"],
 " as directed or undirected is controlled by the ",
 Cell[BoxData["DirectedEdges"],
  ExpressionUUID -> "961535a4-1b4c-4d70-920b-f3a0f4531fe9"],
 " option."
}], "Text",
 ExpressionUUID -> "b3eb63b5-b25c-4d4d-89af-b8b07b6440cc"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", 
  RowBox[{"\"\<1-2-3-1\>\"", ",", 
   RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "022007c0-0c67-403f-8b3a-445dfd0f79e9"],

Cell[TextData[{
 "Directed edges can be input using ",
 StyleBox["->", "Program"],
 ", ",
 StyleBox["<-", "Program"],
 " or ",
 StyleBox["<->", "Program"],
 "."
}], "Text",
 ExpressionUUID -> "119937b4-c803-4097-a17e-9dad7d7ce0f3"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", "\"\<Jim -> Suzy <- Joe\>\"", "]"}]], "Input",
 ExpressionUUID -> "8aa6f6ad-a08d-4cb8-8053-0be43404f5ac"],

Cell[TextData[{
 StyleBox["<->", "Program"],
 " is interpreted as a pair of directed edges."
}], "Text",
 ExpressionUUID -> "d2f00832-2f84-40f9-a06a-5a4f57573324"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", "\"\<1<->2->3\>\"", "]"}]], "Input",
 ExpressionUUID -> "bc9cd3ff-d13d-4fcf-9491-d78977ea0c1f"],

Cell["\<\
Mixed graphs, containing both directed and undirected edges, are supported. \
Note that mixed graphs are not allowed as input to most IGraph/M functions.\
\>", "Text",
 ExpressionUUID -> "f0baea53-bdd7-435d-8e0e-58380212dea9"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", "\"\<1-2<-3\>\"", "]"}]], "Input",
 ExpressionUUID -> "a52b7267-5915-4cfc-9f4b-fc5bf77da83d"],

Cell["Disconnected components are separated by commas.", "Text",
 ExpressionUUID -> "d9d8c7c9-03d6-418a-a7e0-b3f6067a4e63"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", "\"\<1, 2-3, 4-5-6\>\"", "]"}]], "Input",
 ExpressionUUID -> "c59b7db5-fc7b-4033-884e-f16212069848"],

Cell["\<\
Groups of vertices can be given using the colon separator. Edges will be \
connected to each vertex in the group. This makes it easy to specify a \
complete graph ...\
\>", "Text",
 ExpressionUUID -> "3aad68c7-fb04-4dc6-a8e1-68b5fbe3c3ca"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", "\"\<A:B:C:D:E -- A:B:C:D:E\>\"", "]"}]], "Input",
 ExpressionUUID -> "49224e77-7179-4bd6-9217-2db45372cc11"],

Cell["... or a complete bipartite graph.", "Text",
 ExpressionUUID -> "e880296f-bbb3-4f88-8f8f-53872b3cebea"],

Cell[BoxData[
 RowBox[{"IGLayoutBipartite", "@", 
  RowBox[{"IGShorthand", "[", "\"\<a:b:c - 1:2:3:4\>\"", "]"}]}]], "Input",
 ExpressionUUID -> "e6861e09-4645-4a4b-86e8-80760b85647f"],

Cell["\<\
Vertex names are taken as strings, except when they can be interpreted as an \
integer.\
\>", "Text",
 ExpressionUUID -> "1bbbf653-6e45-4939-9b5e-112116b25a14"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"IGShorthand", "[", "\"\<xyz - 137\>\"", "]"}], "//", 
   "VertexList"}], "//", "InputForm"}]], "Input",
 ExpressionUUID -> "a7629a47-0651-4d32-8be1-57305b068713"],

Cell[TextData[{
 "Spaces are allowed in vertex names, and edges can be specified using any \
number of ",
 Cell[BoxData["-"],
  ExpressionUUID -> "9054f9af-92d0-4ebd-9835-a6ee4e9a74d6"],
 " characters."
}], "Text",
 ExpressionUUID -> "43203e39-416f-4fd8-8494-92cbf7ed12cd"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", "\"\<Sophus Lie --- Camille Jordan\>\"", 
  "]"}]], "Input",
 ExpressionUUID -> "8d0556e2-e3a1-4a14-bd9b-1b77f027527d"],

Cell[TextData[{
 "Self-loops and parallel edges are removed by default because these are \
often created as an undesired by-product of vertex groups. They can be \
re-enabled using the ",
 Cell[BoxData["SelfLoops"],
  ExpressionUUID -> "710a0828-d9fb-4b98-84a6-ccab867ffe09"],
 " or ",
 Cell[BoxData["\"\<MultipleEdges\>\""],
  ExpressionUUID -> "dd293516-3841-4a46-a3d9-1a8847019629"],
 " options when desired."
}], "Text",
 ExpressionUUID -> "902cc1e8-8fa2-47be-a694-542eac87504c"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", 
  RowBox[{"\"\<1:2:3 - 1:2:3\>\"", ",", 
   RowBox[{"SelfLoops", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "1daa86d6-080a-4ebb-b70f-05c648a71646"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", 
  RowBox[{"\"\<1:2:3 - 1:2:3\>\"", ",", 
   RowBox[{"SelfLoops", "\[Rule]", "True"}], ",", 
   RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "3c1b8e11-f4e0-45d4-b4aa-8ce69f312a8f"],

Cell[BoxData[
 RowBox[{"IGShorthand", "[", 
  RowBox[{"\"\<1-2-1-3\>\"", ",", 
   RowBox[{"\"\<MultipleEdges\>\"", "\[Rule]", "True"}]}], "]"}]], "Input",
 ExpressionUUID -> "a3b2eb10-d775-41fa-b7e1-78267f23d0cd"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGNullGraphQ", "Subsubsection",
 ExpressionUUID -> "94b3384d-993e-4b1b-8612-95ec6d646b7b"],

Cell[BoxData[
 RowBox[{"?", "IGNullGraphQ"}]], "Input",
 ExpressionUUID -> "96c2a2ae-db4e-4f9a-9471-6972d992e236"],

Cell[TextData[{
 Cell[BoxData["IGNullGraphQ"],
  ExpressionUUID -> "700f5353-375c-4db1-99b9-ee31e5f19dc1"],
 " returns ",
 Cell[BoxData["True"],
  ExpressionUUID -> "0a5224cd-2d51-41b2-9a67-6685dcef3072"],
 " only for the null graph, i.e. the graph that has no vertices."
}], "Text",
 ExpressionUUID -> "0a1115ba-35a9-44d8-bbca-8ca41aa2cd09"],

Cell[BoxData[
 RowBox[{"IGNullGraphQ", "[", 
  RowBox[{"IGEmptyGraph", "[", "]"}], "]"}]], "Input",
 ExpressionUUID -> "17219e13-6874-48a6-bdf5-d25985de6620"],

Cell[TextData[{
 "For graphs that have vertices, but no edges, it returns ",
 Cell[BoxData["False"],
  ExpressionUUID -> "ab171a4f-451e-4b67-8be7-7fe06e08be9b"],
 "."
}], "Text",
 ExpressionUUID -> "d3dfa32b-3267-4379-86e5-b6dc60c65b8c"],

Cell[BoxData[
 RowBox[{"IGNullGraphQ", "[", 
  RowBox[{"IGEmptyGraph", "[", "5", "]"}], "]"}]], "Input",
 ExpressionUUID -> "2055a25d-4f72-4cbd-aff8-9ba80212bd68"],

Cell[TextData[{
 "In contrast, the builtin ",
 Cell[BoxData["EmptyGraphQ"],
  ExpressionUUID -> "d2f1c8b8-25ab-4df1-b1cb-03c964e6aaa2"],
 " tests if there are no edges:"
}], "Text",
 ExpressionUUID -> "12dc696b-e1ac-4f50-a9a1-b1df2e7dd12f"],

Cell[BoxData[
 RowBox[{"EmptyGraphQ", "[", 
  RowBox[{"IGEmptyGraph", "[", "5", "]"}], "]"}]], "Input",
 ExpressionUUID -> "eb9c3916-3071-4fb8-ad87-4ecd2b548355"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGPartitionsToMembership and IGMembershipToPartitions", "Subsubsection",
 
 ExpressionUUID -> "649a4448-61ed-4ae2-94fb-5a6f28edd522"],

Cell[BoxData[
 RowBox[{"?", "IGPartitionsToMembership"}]], "Input",
 ExpressionUUID -> "7912a99c-771f-4af3-976c-4792c4525376"],

Cell[BoxData[
 RowBox[{"?", "IGMembershipToPartitions"}]], "Input",
 ExpressionUUID -> "7d793496-5cee-4a60-8544-1afd2ee334cf"],

Cell["\<\
A partitioning of a set of elements can be represented in multiple ways. One \
way is to list the members of each partition. Another is to annotate each \
element with the index of the partition it belongs to, i.e. construct a \
\[OpenCurlyDoubleQuote]membership vector\[CloseCurlyDoubleQuote]. These \
functions convert between these representations.\
\>", "Text",
 ExpressionUUID -> "dedcf9a9-bda8-430c-88cc-a6ccc506cdd9"],

Cell["\<\
IGraph/M generally uses disjoint subsets to represents partitions. Membership \
vectors are useful when storing the membership information as vertex \
attributes, or when exchanging data with other interfaces of igraph.\
\>", "Text",
 ExpressionUUID -> "53d731f4-5122-416b-b0e8-000448d735ce"],

Cell[BoxData[
 RowBox[{"IGPartitionsToMembership", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "c"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"d", ",", "b"}], "}"}]}], "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "96dd9c4d-290e-44ba-bfbb-39f17c1dd682"],

Cell[BoxData[
 RowBox[{"IGMembershipToPartitions", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"a", ",", "b", ",", "c", ",", "d"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "1", ",", "2"}], "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "f26a3159-8518-47f4-a69d-e3619dbb6aba"],

Cell["\<\
The following graph has the type of nodes encoded as a vertex attribute.\
\>", "Text",
 ExpressionUUID -> "d28a7819-00aa-4cf1-82bd-4a79af07ae6f"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"ExampleData", "[", 
    RowBox[{"{", 
     RowBox[{
     "\"\<NetworkGraph\>\"", ",", "\"\<BipartiteDiseasomeNetwork\>\""}], 
     "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"IGVertexProp", "[", "\"\<Type\>\"", "]"}], "[", "g", "]"}], "//", 
  "Short"}]}], "Input",
 ExpressionUUID -> "66bf5721-af64-416a-ba70-451d5f754679"],

Cell["\<\
Let us extract the attribute values as a vector and construct the two vertex \
partitions.\
\>", "Text",
 ExpressionUUID -> "65b4814b-9438-4fc3-8bd1-de39aee7b7e4"],

Cell[BoxData[
 RowBox[{
  RowBox[{"parts", "=", 
   RowBox[{"IGMembershipToPartitions", "[", 
    RowBox[{
     RowBox[{"VertexList", "[", "g", "]"}], ",", 
     RowBox[{
      RowBox[{"IGVertexProp", "[", "\"\<Type\>\"", "]"}], "[", "g", "]"}]}], 
    "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "c6818e7c-cd9d-4810-b3ad-455ed9bf4881"],

Cell["\<\
Verify that the graph is bipartite according to this partitioning.\
\>", "Text",
 ExpressionUUID -> "06bf1dd8-bcf3-4aca-8b22-ea5714160335"],

Cell[BoxData[
 RowBox[{"IGBipartiteQ", "[", 
  RowBox[{"g", ",", "parts"}], "]"}]], "Input",
 ExpressionUUID -> "19b71e64-2d85-4909-9c7d-0dc29b7aaabb"],

Cell["\<\
Annotate the vertices of a bipartite graph with their computed membership \
value.\
\>", "Text",
 ExpressionUUID -> "ff3e8522-c69c-4648-b52c-9ef09d32722e"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGBipartiteGameGNM", "[", 
    RowBox[{"5", ",", "6", ",", "14", ",", 
     RowBox[{"VertexSize", "\[Rule]", "Large"}]}], "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "a31786f1-7d78-417f-8ee9-caddcebcf99d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"IGVertexMap", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"#", "&"}], ",", "\[IndentingNewLine]", 
     RowBox[{"\"\<membership\>\"", "\[Rule]", 
      RowBox[{
       RowBox[{"IGPartitionsToMembership", "[", 
        RowBox[{"VertexList", "[", "g", "]"}], "]"}], "@*", 
       "IGBipartitePartitions"}]}], ",", "\[IndentingNewLine]", "g"}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 ExpressionUUID -> "67b0ddcf-edcc-4a22-9023-cec69ce0b172"],

Cell["Colour the vertices accordingly.", "Text",
 ExpressionUUID -> "c75e7c87-575d-4297-b2b2-05b9085779c8"],

Cell[BoxData[
 RowBox[{"IGVertexMap", "[", 
  RowBox[{
   RowBox[{"ColorData", "[", "100", "]"}], ",", 
   RowBox[{"VertexStyle", "\[Rule]", 
    RowBox[{"IGVertexProp", "[", "\"\<membership\>\"", "]"}]}], ",", "g"}], 
  "]"}]], "Input",
 ExpressionUUID -> "bb3888bc-83eb-4829-b381-b372c4c81ddd"],

Cell[TextData[{
 "Visualize a vertex colouring using ",
 Cell[BoxData["HighlightGraph"],
  ExpressionUUID -> "edb9c38d-9afe-4aaa-b1bd-2440d80542a7"],
 "."
}], "Text",
 ExpressionUUID -> "44b18eaf-c1e6-4cdc-98df-97cb6f820dec"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"IGMakeLattice", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"2", ",", "2", ",", "2", ",", "2"}], "}"}], ",", 
    RowBox[{"\"\<Periodic\>\"", "\[Rule]", "True"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "551f673f-9b21-42cf-9ff3-6f760d85c6f7"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", "\[IndentingNewLine]", 
  RowBox[{"g", ",", 
   RowBox[{"IGMembershipToPartitions", "[", 
    RowBox[{
     RowBox[{"VertexList", "[", "g", "]"}], ",", 
     RowBox[{"IGVertexColoring", "[", "g", "]"}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"VertexSize", "\[Rule]", "Medium"}], ",", 
   RowBox[{"GraphHighlightStyle", "\[Rule]", "\"\<DehighlightGray\>\""}]}], 
  "\[IndentingNewLine]", "]"}]], "Input",
 ExpressionUUID -> "dbf7f7f6-a03c-4047-ba10-15e7dd5acd14"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGSourceVertexList and IGSinkVertexList", "Subsubsection",
 ExpressionUUID -> "39d33025-2184-46eb-82c7-81254efa8857"],

Cell[BoxData[
 RowBox[{"?", "IGSourceVertexList"}]], "Input",
 ExpressionUUID -> "6f58180f-4a72-48eb-8440-9a2273e2a082"],

Cell[BoxData[
 RowBox[{"?", "IGSinkVertexList"}]], "Input",
 ExpressionUUID -> "77e9b491-5a3f-406b-8a77-9b66415802e9"],

Cell["\<\
Find and highlight the source and sink vertices of a random acyclic graph.\
\>", "Text",
 ExpressionUUID -> "78fda96b-bd2f-4ca6-9ab3-a043ac2403b3"],

Cell[BoxData[
 RowBox[{"g", "=", 
  RowBox[{"DirectedGraph", "[", 
   RowBox[{
    RowBox[{"RandomGraph", "[", 
     RowBox[{"{", 
      RowBox[{"10", ",", "20"}], "}"}], "]"}], ",", "\"\<Acyclic\>\"", ",", 
    RowBox[{"VertexLabels", "\[Rule]", "\"\<Name\>\""}], ",", 
    RowBox[{"VertexSize", "\[Rule]", "Large"}], ",", 
    RowBox[{"EdgeStyle", "\[Rule]", "Gray"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "941c0cba-a7d2-4286-baa8-9fce1208905c"],

Cell[BoxData[
 RowBox[{"IGSourceVertexList", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "21af4b0b-d26f-4096-88f9-302e2b493db7"],

Cell[BoxData[
 RowBox[{"IGSinkVertexList", "[", "g", "]"}]], "Input",
 ExpressionUUID -> "4d40b6ec-006f-4ed0-a451-d8a845f83441"],

Cell[BoxData[
 RowBox[{"HighlightGraph", "[", 
  RowBox[{"g", ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"IGSourceVertexList", "[", "g", "]"}], ",", 
     RowBox[{"IGSinkVertexList", "[", "g", "]"}]}], "}"}]}], "]"}]], "Input",
 ExpressionUUID -> "07d8e309-2543-4811-a654-d262920f02e0"],

Cell["\<\
Directed graphs have neither source nor sink vertices because undirected \
edges are counted as bidirectional.\
\>", "Text",
 ExpressionUUID -> "52690088-a481-4ab1-ab3f-2c7c3f2f75d3"],

Cell[BoxData[
 RowBox[{"IGSourceVertexList", "[", 
  GraphicsBox[
   NamespaceBox["NetworkGraphics",
    DynamicModuleBox[{Typeset`graph = HoldComplete[
      Graph[{1, 2, 3}, {Null, 
        SparseArray[
        Automatic, {3, 3}, 0, {
         1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}]}, {
       GraphLayout -> "CircularEmbedding", VertexSize -> {Medium}}]]}, 
     TagBox[
      GraphicsGroupBox[
       GraphicsComplexBox[{{-0.8660254037844384, -0.4999999999999994}, {
        0.8660254037844389, -0.5000000000000012}, {1.8369701987210297`*^-16, 
        1.}}, {
         {Hue[0.6, 0.7, 0.5], Opacity[0.7], 
          {Arrowheads[0.], ArrowBox[{1, 2}, 0.17320508075688767`]}, 
          {Arrowheads[0.], ArrowBox[{1, 3}, 0.17320508075688767`]}, 
          {Arrowheads[0.], ArrowBox[{2, 3}, 0.17320508075688767`]}}, 
         {Hue[0.6, 0.2, 0.8], EdgeForm[{GrayLevel[0], Opacity[0.7]}], 
          DiskBox[1, 0.17320508075688767`], DiskBox[2, 0.17320508075688767`], 
          DiskBox[3, 0.17320508075688767`]}}]],
      MouseAppearanceTag["NetworkGraphics"]],
     AllowKernelInitialization->False]],
   DefaultBaseStyle->{
    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> Hue[0.8, 1., 0.6]},
   FormatType->TraditionalForm,
   FrameTicks->None], "]"}]], "Input",
 ExpressionUUID -> "135111e5-1192-4442-a3f3-ce74dd61efec"],

Cell["\<\
These are merely convenience functions that can be implemented \
straightforwardly as \
\>", "Text",
 ExpressionUUID -> "f925bcd8-5e3b-4a12-9de0-bdbb3abba793"],

Cell[BoxData[
 RowBox[{"Pick", "[", 
  RowBox[{
   RowBox[{"VertexList", "[", "g", "]"}], ",", 
   RowBox[{"VertexOutDegree", "[", "g", "]"}], ",", "0"}], "]"}]], "Input",
 ExpressionUUID -> "2ccca34b-afd1-452e-9066-3d21883a2a24"]
}, Closed]],

Cell[CellGroupData[{

Cell["IGReorderVertices", "Subsubsection",
 ExpressionUUID -> "0cac94f2-1fe6-4bc6-971a-fe3fbc2b055a"],

Cell[BoxData[
 RowBox[{"?", "IGReorderVertices"}]], "Input",
 ExpressionUUID -> "a59560f5-b6a7-42b9-97fd-0e4778a6a15c"],

Cell["\<\
Let us use a styled graph for illustration, to demonstrate that graph \
properties are preserved.\
\>", "Text",
 ExpressionUUID -> "a45d0975-7fd8-49ca-8b3b-d3e1910012b6"],

Cell[BoxData[
 RowBox[{"g1", "=", 
  RowBox[{"RandomGraph", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "5"}], "}"}], ",", 
    RowBox[{"VertexStyle", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"1", "\[Rule]", "Red"}], ",", 
       RowBox[{"3", "\[Rule]", "Green"}]}], "}"}]}], ",", 
    RowBox[{"VertexSize", "\[Rule]", "Medium"}]}], "]"}]}]], "Input",
 ExpressionUUID -> "b48714ba-e8e7-42ae-b176-38a989a1d22e"],

Cell[BoxData[
 RowBox[{"g2", "=", 
  RowBox[{"IGReorderVertices", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"5", ",", "4", ",", "3", ",", "2", ",", "1"}], "}"}], ",", 
    "g1"}], "]"}]}]], "Input",
 ExpressionUUID -> "b8a0d636-8a59-4951-842f-0da2773eb653"],

Cell[BoxData[
 RowBox[{"VertexList", "/@", 
  RowBox[{"{", 
   RowBox[{"g1", ",", "g2"}], "}"}]}]], "Input",
 ExpressionUUID -> "7fdb3aa0-8991-4d9c-9550-4bb4dd526dce"],

Cell[BoxData[
 RowBox[{"IGIsomorphicQ", "[", 
  RowBox[{"g1", ",", "g2"}], "]"}]], "Input",
 ExpressionUUID -> "d9f035a4-757a-4bba-90fb-0083ceca934f"],

Cell[TextData[{
 "The result of certain operations, such as ",
 Cell[BoxData[
  RowBox[{"DirectedGraph", "[", 
   RowBox[{"\[Ellipsis]", ",", "\"\<Acyclic\>\""}], "]"}]],
  ExpressionUUID -> "32503cd6-5ed3-41d6-9b25-68297a849c60"],
 " or ",
 Cell[BoxData["AdjacencyMatrix"],
  ExpressionUUID -> "123de3d4-e695-47cd-9508-5f30754740f8"],
 ", depends on the vertex ordering."
}], "Text",
 ExpressionUUID -> "0ea7cc36-0056-4f4b-bf94-cc0b8e134b69"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DirectedGraph", "[", 
    RowBox[{"#", ",", "\"\<Acyclic\>\""}], "]"}], "&"}], "/@", 
  RowBox[{"{", 
   RowBox[{"g1", ",", "g2"}], "}"}]}]], "Input",
 ExpressionUUID -> "8e7653ce-4cce-486a-a8a4-f93f61fc498d"],

Cell["\<\
Order the vertices of a directed acyclic graph so that its adjacency matrix \
is upper triangular.\
\>", "Text",
 ExpressionUUID -> "f83000e4-d4fc-4397-bee4-4e626eb916c5"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"RandomGraph", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"10", ",", "30"}], "}"}], ",", 
     RowBox[{"DirectedEdges", "\[Rule]", "True"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"g", "=", 
   RowBox[{"EdgeDelete", "[", 
    RowBox[{"g", ",", 
     RowBox[{"IGFeedbackArcSet", "[", "g", "]"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{"ArrayPlot", "/@", 
  RowBox[{"AdjacencyMatrix", "/@", 
   RowBox[{"{", 
    RowBox[{"g", ",", 
     RowBox[{"IGReorderVertices", "[", 
      RowBox[{
       RowBox[{"TopologicalSort", "[", "g", "]"}], ",", "g"}], "]"}]}], 
    "}"}]}]}]}], "Input",
 ExpressionUUID -> "11bf6410-bc93-4775-ae28-533d11f29d6c"]
}, Closed]]
}, Closed]]
}, Closed]]
}, Open  ]]
},
WindowSize->{842, 736},
WindowMargins->{{Automatic, 89}, {Automatic, 45}},
WindowTitle->"IGraph/M Documentation",
PrintingCopies->1,
PrintingStartingPageNumber->1,
PrintingPageRange->{1, Automatic},
PageHeaders->{{
   Cell[
    TextData[{
      StyleBox[
       CounterBox["Page"], "PageNumber"], "   ", "|", 
      StyleBox[
       RowBox[{" ", 
         StyleBox[" ", "Header"]}]], 
      StyleBox[
       RowBox[{"IGraph", "/", "M", " ", "Documentation"}], "Header"]}], 
    "Header", CellMargins -> {{0, Inherited}, {Inherited, Inherited}}], None, 
   None}, {None, None, 
   Cell[
    TextData[{
      StyleBox[
       RowBox[{"IGraph", "/", "M", " ", "Documentation"}], "Header"], 
      StyleBox[
       RowBox[{
         StyleBox[" ", "Header"], " "}]], "|", "   ", 
      StyleBox[
       CounterBox["Page"], "PageNumber"]}], "Header", 
    CellMargins -> {{Inherited, 0}, {Inherited, Inherited}}]}},
PageFooters->{{None, None, None}, {None, None, None}},
PageHeaderLines->{False, False},
PageFooterLines->{False, False},
PrintingOptions->{"FacingPages"->True,
"FirstPageFace"->Right,
"FirstPageFooter"->True,
"FirstPageHeader"->False,
"PrintCellBrackets"->False,
"PrintMultipleHorizontalPages"->False,
"PrintRegistrationMarks"->False,
"PrintingMargins"->{{28.346457, 28.346457}, {72.00000078000001, \
72.00000078000001}}},
PrivateNotebookOptions->{"FileOutlineCache"->False},
ShowCellTags->True,
TrackCellChangeTimes->False,
GraphicsBoxOptions->{ImageSizeRaw->250},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, \
2014)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData[All, "Printout"], Magnification -> 0.66], 
   Cell[
    StyleData["Section"], ShowGroupOpener -> True], 
   Cell[
    StyleData["Subsection"], ShowGroupOpener -> True], 
   Cell[
    StyleData["Subsubsection"], ShowGroupOpener -> True], 
   Cell[
    StyleData["Text"], DefaultInlineFormatType -> StandardForm], 
   Cell[
    CellGroupData[{
      Cell[
       StyleData["Item"], DefaultInlineFormatType -> StandardForm], 
      Cell[
       StyleData["Hyperlink", "Printout"], FontColor -> 
       RGBColor[0.269993, 0.308507, 0.6]]}, Open]]}, Visible -> False, 
  FrontEndVersion -> 
  "10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (December 4, 2014)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]

